Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Gaussian Splatting": [[19, "gaussian-splatting"]], "Instant NGP": [[19, "instant-ngp"]], "Methods": [[19, null]], "Mip-NeRF 360": [[19, "mipnerf360"]], "NerfBaselines Documentation": [[18, null]], "NerfStudio": [[19, "nerfacto"]], "Reference": [[18, null]], "Tetra-NeRF": [[19, "tetra-nerf"]], "Zip-NeRF": [[19, "camp"], [19, "zipnerf"]], "download-dataset": [[17, "nerfbaselines-download-dataset"]], "evaluate": [[17, "nerfbaselines-evaluate"]], "nerfbaselines": [[1, null], [17, null]], "nerfbaselines.backends": [[2, null]], "nerfbaselines.backends.apptainer": [[2, "module-nerfbaselines.backends.apptainer"]], "nerfbaselines.backends.conda": [[2, "module-nerfbaselines.backends.conda"]], "nerfbaselines.backends.docker": [[2, "module-nerfbaselines.backends.docker"]], "nerfbaselines.cameras": [[3, null]], "nerfbaselines.communication": [[4, null]], "nerfbaselines.datasets": [[5, null]], "nerfbaselines.datasets.blender": [[5, "module-nerfbaselines.datasets.blender"]], "nerfbaselines.datasets.colmap": [[5, "module-nerfbaselines.datasets.colmap"]], "nerfbaselines.datasets.mipnerf360": [[5, "module-nerfbaselines.datasets.mipnerf360"]], "nerfbaselines.datasets.nerfstudio": [[5, "module-nerfbaselines.datasets.nerfstudio"]], "nerfbaselines.evaluate": [[6, null]], "nerfbaselines.io": [[7, null]], "nerfbaselines.metrics": [[8, null]], "nerfbaselines.registry": [[9, null]], "nerfbaselines.render": [[10, null]], "nerfbaselines.results": [[11, null]], "nerfbaselines.train": [[12, null]], "nerfbaselines.types": [[13, null]], "nerfbaselines.upload_results": [[14, null]], "nerfbaselines.utils": [[15, null]], "nerfbaselines.viewer": [[16, null]], "nerfbaselines.viewer.nerfstudio": [[16, "nerfbaselines-viewer-nerfstudio"]], "nerfbaselines.viewer.viser": [[16, "module-nerfbaselines.viewer.viser"]], "render": [[17, "nerfbaselines-render"]], "render-dataset-results": [[17, "nerfbaselines-render-dataset-results"]], "shell": [[17, "nerfbaselines-shell"]], "train": [[17, "nerfbaselines-train"]], "viewer": [[17, "nerfbaselines-viewer"]]}, "docnames": ["api/modules", "api/nerfbaselines", "api/nerfbaselines.backends", "api/nerfbaselines.cameras", "api/nerfbaselines.communication", "api/nerfbaselines.datasets", "api/nerfbaselines.evaluate", "api/nerfbaselines.io", "api/nerfbaselines.metrics", "api/nerfbaselines.registry", "api/nerfbaselines.render", "api/nerfbaselines.results", "api/nerfbaselines.train", "api/nerfbaselines.types", "api/nerfbaselines.upload_results", "api/nerfbaselines.utils", "api/nerfbaselines.viewer", "cli", "index", "methods"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/modules.rst", "api/nerfbaselines.rst", "api/nerfbaselines.backends.rst", "api/nerfbaselines.cameras.rst", "api/nerfbaselines.communication.rst", "api/nerfbaselines.datasets.rst", "api/nerfbaselines.evaluate.rst", "api/nerfbaselines.io.rst", "api/nerfbaselines.metrics.rst", "api/nerfbaselines.registry.rst", "api/nerfbaselines.render.rst", "api/nerfbaselines.results.rst", "api/nerfbaselines.train.rst", "api/nerfbaselines.types.rst", "api/nerfbaselines.upload_results.rst", "api/nerfbaselines.utils.rst", "api/nerfbaselines.viewer.rst", "cli.rst", "index.md", "methods.md"], "indexentries": {"--backend": [[17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-viewer-backend", false]], "--checkpoint": [[17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false]], "--data": [[17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-viewer-data", false]], "--dataset": [[17, "cmdoption-nerfbaselines-render-dataset-results-dataset", false]], "--disable-extra-metrics": [[17, "cmdoption-nerfbaselines-evaluate-disable-extra-metrics", false], [17, "cmdoption-nerfbaselines-train-disable-extra-metrics", false]], "--disable-output-artifact": [[17, "cmdoption-nerfbaselines-train-disable-output-artifact", false]], "--eval-all-iters": [[17, "cmdoption-nerfbaselines-train-eval-all-iters", false]], "--eval-single-iters": [[17, "cmdoption-nerfbaselines-train-eval-single-iters", false]], "--force-output-artifact": [[17, "cmdoption-nerfbaselines-train-force-output-artifact", false]], "--method": [[17, "cmdoption-nerfbaselines-shell-method", false], [17, "cmdoption-nerfbaselines-train-method", false]], "--method-links": [[17, "cmdoption-nerfbaselines-render-dataset-results-method-links", false]], "--output": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false], [17, "cmdoption-nerfbaselines-render-dataset-results-output", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-train-output", false]], "--output-type": [[17, "cmdoption-nerfbaselines-render-dataset-results-output-type", false]], "--port": [[17, "cmdoption-nerfbaselines-viewer-port", false]], "--results": [[17, "cmdoption-nerfbaselines-render-dataset-results-results", false]], "--split": [[17, "cmdoption-nerfbaselines-render-split", false]], "--verbose": [[17, "cmdoption-nerfbaselines-download-dataset-v", false], [17, "cmdoption-nerfbaselines-render-v", false], [17, "cmdoption-nerfbaselines-shell-v", false], [17, "cmdoption-nerfbaselines-train-v", false], [17, "cmdoption-nerfbaselines-viewer-v", false]], "--viewer": [[17, "cmdoption-nerfbaselines-viewer-viewer", false]], "--vis": [[17, "cmdoption-nerfbaselines-train-vis", false]], "-o": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false]], "-v": [[17, "cmdoption-nerfbaselines-download-dataset-v", false], [17, "cmdoption-nerfbaselines-render-v", false], [17, "cmdoption-nerfbaselines-shell-v", false], [17, "cmdoption-nerfbaselines-train-v", false], [17, "cmdoption-nerfbaselines-viewer-v", false]], "add_dataset_views() (nerfbaselines.viewer.viser.viserviewer method)": [[16, "nerfbaselines.viewer.viser.ViserViewer.add_dataset_views", false]], "apptainer (nerfbaselines.registry.methodspec attribute)": [[9, "nerfbaselines.registry.MethodSpec.apptainer", false]], "apptainermethod (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.ApptainerMethod", false]], "args (nerfbaselines.registry.methodspec attribute)": [[9, "nerfbaselines.registry.MethodSpec.args", false]], "authkey (nerfbaselines.communication.connectionparams attribute)": [[4, "nerfbaselines.communication.ConnectionParams.authkey", false]], "auto_register() (in module nerfbaselines.registry)": [[9, "nerfbaselines.registry.auto_register", false]], "batch_size (nerfbaselines.methodinfo attribute)": [[1, "nerfbaselines.MethodInfo.batch_size", false]], "batched() (in module nerfbaselines.types)": [[13, "nerfbaselines.types.batched", false]], "batched() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.batched", false]], "build() (nerfbaselines.registry.methodspec method)": [[9, "nerfbaselines.registry.MethodSpec.build", false]], "build_code (nerfbaselines.backends.apptainer.remoteprocessmethod attribute)": [[2, "nerfbaselines.backends.apptainer.RemoteProcessMethod.build_code", false]], "build_code (nerfbaselines.backends.conda.remoteprocessmethod attribute)": [[2, "nerfbaselines.backends.conda.RemoteProcessMethod.build_code", false]], "build_code (nerfbaselines.backends.docker.remoteprocessmethod attribute)": [[2, "nerfbaselines.backends.docker.RemoteProcessMethod.build_code", false]], "build_code (nerfbaselines.communication.remoteprocessmethod attribute)": [[4, "nerfbaselines.communication.RemoteProcessMethod.build_code", false]], "call() (nerfbaselines.communication.remotemethod method)": [[4, "nerfbaselines.communication.RemoteMethod.call", false]], "camera (class in nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.Camera", false]], "camera_types (nerfbaselines.cameras attribute)": [[1, "nerfbaselines.Cameras.camera_types", false]], "cameramodel (class in nerfbaselines)": [[1, "nerfbaselines.CameraModel", false]], "cameras (class in nerfbaselines)": [[1, "nerfbaselines.Cameras", false]], "cameras (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.cameras", false]], "cameras (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.cameras", false]], "cameras (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.cameras", false]], "cancel() (nerfbaselines.utils.cancellationtoken method)": [[15, "nerfbaselines.utils.CancellationToken.cancel", false]], "cancel() (nerfbaselines.viewer.viser.cancellationtoken method)": [[16, "nerfbaselines.viewer.viser.CancellationToken.cancel", false]], "cancellable() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.cancellable", false]], "cancellable() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.cancellable", false]], "cancellationtoken (class in nerfbaselines.utils)": [[15, "nerfbaselines.utils.CancellationToken", false]], "cancellationtoken (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.CancellationToken", false]], "cancelled (nerfbaselines.utils.cancellationtoken property)": [[15, "nerfbaselines.utils.CancellationToken.cancelled", false]], "cancelled (nerfbaselines.viewer.viser.cancellationtoken property)": [[16, "nerfbaselines.viewer.viser.CancellationToken.cancelled", false]], "cancelledexception": [[15, "nerfbaselines.utils.CancelledException", false], [16, "nerfbaselines.viewer.viser.CancelledException", false]], "cat() (nerfbaselines.cameras class method)": [[1, "nerfbaselines.Cameras.cat", false]], "close() (nerfbaselines.backends.apptainer.remoteprocessmethod method)": [[2, "nerfbaselines.backends.apptainer.RemoteProcessMethod.close", false]], "close() (nerfbaselines.backends.conda.remoteprocessmethod method)": [[2, "nerfbaselines.backends.conda.RemoteProcessMethod.close", false]], "close() (nerfbaselines.backends.docker.remoteprocessmethod method)": [[2, "nerfbaselines.backends.docker.RemoteProcessMethod.close", false]], "close() (nerfbaselines.communication.remotemethod method)": [[4, "nerfbaselines.communication.RemoteMethod.close", false]], "close() (nerfbaselines.communication.remoteprocessmethod method)": [[4, "nerfbaselines.communication.RemoteProcessMethod.close", false]], "close() (nerfbaselines.train.trainer method)": [[12, "nerfbaselines.train.Trainer.close", false]], "color_space (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.color_space", false]], "color_space (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.color_space", false]], "color_space (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.color_space", false]], "compile_dataset_results() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.compile_dataset_results", false]], "compute_exponential_gamma() (in module nerfbaselines.train)": [[12, "nerfbaselines.train.compute_exponential_gamma", false]], "compute_metrics() (in module nerfbaselines.evaluate)": [[6, "nerfbaselines.evaluate.compute_metrics", false]], "conda (nerfbaselines.registry.methodspec attribute)": [[9, "nerfbaselines.registry.MethodSpec.conda", false]], "conda_name (nerfbaselines.backends.condamethod attribute)": [[2, "nerfbaselines.backends.CondaMethod.conda_name", false]], "condamethod (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.CondaMethod", false]], "connectionparams (class in nerfbaselines.communication)": [[4, "nerfbaselines.communication.ConnectionParams", false]], "convert() (nerfbaselines.train.indicesclicktype method)": [[12, "nerfbaselines.train.IndicesClickType.convert", false]], "convert_image_dtype() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.convert_image_dtype", false]], "currentprogress (class in nerfbaselines)": [[1, "nerfbaselines.CurrentProgress", false]], "dataset": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false]], "dataset (class in nerfbaselines.datasets)": [[5, "nerfbaselines.datasets.Dataset", false]], "dataset (class in nerfbaselines.types)": [[13, "nerfbaselines.types.Dataset", false]], "dataset (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.Dataset", false]], "datasetnotfounderror": [[5, "nerfbaselines.datasets.DatasetNotFoundError", false]], "decode_args() (nerfbaselines.communication.remotemethod static method)": [[4, "nerfbaselines.communication.RemoteMethod.decode_args", false]], "distortion_parameters (nerfbaselines.cameras attribute)": [[1, "nerfbaselines.Cameras.distortion_parameters", false]], "dmpix_ssim() (in module nerfbaselines.metrics)": [[8, "nerfbaselines.metrics.dmpix_ssim", false]], "docker (nerfbaselines.registry.methodspec attribute)": [[9, "nerfbaselines.registry.MethodSpec.docker", false]], "dockermethod (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.DockerMethod", false]], "download_blender_dataset() (in module nerfbaselines.datasets.blender)": [[5, "nerfbaselines.datasets.blender.download_blender_dataset", false]], "download_capture_name() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.download_capture_name", false]], "download_dataset() (in module nerfbaselines.datasets)": [[5, "nerfbaselines.datasets.download_dataset", false]], "download_mipnerf360_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[5, "nerfbaselines.datasets.mipnerf360.download_mipnerf360_dataset", false]], "download_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.download_nerfstudio_dataset", false]], "encoded_args (nerfbaselines.communication.remotemethod property)": [[4, "nerfbaselines.communication.RemoteMethod.encoded_args", false]], "ensure_loggers_initialized() (nerfbaselines.train.trainer method)": [[12, "nerfbaselines.train.Trainer.ensure_loggers_initialized", false]], "environment (nerfbaselines.backends.condamethod attribute)": [[2, "nerfbaselines.backends.CondaMethod.environment", false]], "environments_path (nerfbaselines.backends.apptainermethod attribute)": [[2, "nerfbaselines.backends.ApptainerMethod.environments_path", false]], "environments_path (nerfbaselines.backends.condamethod attribute)": [[2, "nerfbaselines.backends.CondaMethod.environments_path", false]], "environments_path (nerfbaselines.backends.dockermethod attribute)": [[2, "nerfbaselines.backends.DockerMethod.environments_path", false]], "eval_all() (nerfbaselines.train.trainer method)": [[12, "nerfbaselines.train.Trainer.eval_all", false]], "eval_batch_size (nerfbaselines.methodinfo attribute)": [[1, "nerfbaselines.MethodInfo.eval_batch_size", false]], "eval_single() (nerfbaselines.train.trainer method)": [[12, "nerfbaselines.train.Trainer.eval_single", false]], "evaluate() (in module nerfbaselines.evaluate)": [[6, "nerfbaselines.evaluate.evaluate", false]], "every_iters() (nerfbaselines.indices class method)": [[1, "nerfbaselines.Indices.every_iters", false]], "expected_scene_scale (nerfbaselines.datasets.dataset property)": [[5, "nerfbaselines.datasets.Dataset.expected_scene_scale", false]], "expected_scene_scale (nerfbaselines.types.dataset property)": [[13, "nerfbaselines.types.Dataset.expected_scene_scale", false]], "expected_scene_scale (nerfbaselines.viewer.viser.dataset property)": [[16, "nerfbaselines.viewer.viser.Dataset.expected_scene_scale", false]], "file_paths (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.file_paths", false]], "file_paths (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.file_paths", false]], "file_paths (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.file_paths", false]], "file_paths_root (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.file_paths_root", false]], "file_paths_root (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.file_paths_root", false]], "file_paths_root (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.file_paths_root", false]], "format() (nerfbaselines.utils.formatter method)": [[15, "nerfbaselines.utils.Formatter.format", false]], "format_duration() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.format_duration", false]], "format_memory() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.format_memory", false]], "formatter (class in nerfbaselines.utils)": [[15, "nerfbaselines.utils.Formatter", false]], "full_opencv (nerfbaselines.cameramodel attribute)": [[1, "nerfbaselines.CameraModel.FULL_OPENCV", false]], "get() (in module nerfbaselines.registry)": [[9, "nerfbaselines.registry.get", false]], "get_benchmark_datasets() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.get_benchmark_datasets", false]], "get_c2w() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.get_c2w", false]], "get_c2w() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.get_c2w", false]], "get_checkpoint_sha() (in module nerfbaselines.render)": [[10, "nerfbaselines.render.get_checkpoint_sha", false]], "get_dataset_info() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.get_dataset_info", false]], "get_default_backend() (nerfbaselines.registry.methodspec method)": [[9, "nerfbaselines.registry.MethodSpec.get_default_backend", false]], "get_dockerfile() (nerfbaselines.backends.dockermethod class method)": [[2, "nerfbaselines.backends.DockerMethod.get_dockerfile", false]], "get_environment_hash() (nerfbaselines.backends.condamethod class method)": [[2, "nerfbaselines.backends.CondaMethod.get_environment_hash", false]], "get_info() (nerfbaselines.communication.remotemethod method)": [[4, "nerfbaselines.communication.RemoteMethod.get_info", false]], "get_info() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.get_info", false]], "get_orientation_transform() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.get_orientation_transform", false]], "get_orientation_transform() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.get_orientation_transform", false]], "get_position_quaternion() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.get_position_quaternion", false]], "get_position_quaternion() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.get_position_quaternion", false]], "get_predictions_hashes() (in module nerfbaselines.evaluate)": [[6, "nerfbaselines.evaluate.get_predictions_hashes", false]], "get_rays() (nerfbaselines.cameras method)": [[1, "nerfbaselines.Cameras.get_rays", false]], "get_resources_utilization_info() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.get_resources_utilization_info", false]], "get_train_eval_split_all() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.get_train_eval_split_all", false]], "get_train_eval_split_filename() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.get_train_eval_split_filename", false]], "get_train_eval_split_fraction() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.get_train_eval_split_fraction", false]], "get_train_eval_split_interval() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.get_train_eval_split_interval", false]], "grab_file_id() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.grab_file_id", false]], "handle_cli_error() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.handle_cli_error", false]], "handle_cli_error() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.handle_cli_error", false]], "home_path (nerfbaselines.backends.apptainermethod attribute)": [[2, "nerfbaselines.backends.ApptainerMethod.home_path", false]], "home_path (nerfbaselines.backends.dockermethod attribute)": [[2, "nerfbaselines.backends.DockerMethod.home_path", false]], "i (nerfbaselines.currentprogress attribute)": [[1, "nerfbaselines.CurrentProgress.i", false]], "image (class in nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.Image", false]], "image (nerfbaselines.backends.apptainermethod attribute)": [[2, "nerfbaselines.backends.ApptainerMethod.image", false]], "image (nerfbaselines.backends.dockermethod attribute)": [[2, "nerfbaselines.backends.DockerMethod.image", false]], "image_i (nerfbaselines.currentprogress attribute)": [[1, "nerfbaselines.CurrentProgress.image_i", false]], "image_sizes (nerfbaselines.cameras attribute)": [[1, "nerfbaselines.Cameras.image_sizes", false]], "image_to_srgb() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.image_to_srgb", false]], "image_total (nerfbaselines.currentprogress attribute)": [[1, "nerfbaselines.CurrentProgress.image_total", false]], "images (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.images", false]], "images (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.images", false]], "images (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.images", false]], "implemented_backends (nerfbaselines.registry.methodspec property)": [[9, "nerfbaselines.registry.MethodSpec.implemented_backends", false]], "indices (class in nerfbaselines)": [[1, "nerfbaselines.Indices", false]], "indicesclicktype (class in nerfbaselines.train)": [[12, "nerfbaselines.train.IndicesClickType", false]], "inject_callables() (in module nerfbaselines.communication)": [[4, "nerfbaselines.communication.inject_callables", false]], "install() (nerfbaselines.backends.apptainer.remoteprocessmethod class method)": [[2, "nerfbaselines.backends.apptainer.RemoteProcessMethod.install", false]], "install() (nerfbaselines.backends.conda.remoteprocessmethod class method)": [[2, "nerfbaselines.backends.conda.RemoteProcessMethod.install", false]], "install() (nerfbaselines.backends.docker.remoteprocessmethod class method)": [[2, "nerfbaselines.backends.docker.RemoteProcessMethod.install", false]], "install() (nerfbaselines.communication.remoteprocessmethod class method)": [[4, "nerfbaselines.communication.RemoteProcessMethod.install", false]], "install() (nerfbaselines.method class method)": [[1, "nerfbaselines.Method.install", false]], "install_script (nerfbaselines.backends.condamethod attribute)": [[2, "nerfbaselines.backends.CondaMethod.install_script", false]], "interpolate_bilinear() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.interpolate_bilinear", false]], "invoke() (nerfbaselines.utils.cancellationtoken method)": [[15, "nerfbaselines.utils.CancellationToken.invoke", false]], "invoke() (nerfbaselines.viewer.viser.cancellationtoken method)": [[16, "nerfbaselines.viewer.viser.CancellationToken.invoke", false]], "is_broadcastable() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.is_broadcastable", false]], "item() (nerfbaselines.cameras method)": [[1, "nerfbaselines.Cameras.item", false]], "kwargs (nerfbaselines.registry.methodspec attribute)": [[9, "nerfbaselines.registry.MethodSpec.kwargs", false]], "lazymethod (class in nerfbaselines.registry)": [[9, "nerfbaselines.registry.LazyMethod", false]], "linear_to_srgb() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.linear_to_srgb", false]], "load_blender_dataset() (in module nerfbaselines.datasets.blender)": [[5, "nerfbaselines.datasets.blender.load_blender_dataset", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.load_colmap_dataset", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[5, "nerfbaselines.datasets.mipnerf360.load_colmap_dataset", false]], "load_dataset() (in module nerfbaselines.datasets)": [[5, "nerfbaselines.datasets.load_dataset", false]], "load_dataset() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.load_dataset", false]], "load_features() (nerfbaselines.datasets.dataset method)": [[5, "nerfbaselines.datasets.Dataset.load_features", false]], "load_features() (nerfbaselines.types.dataset method)": [[13, "nerfbaselines.types.Dataset.load_features", false]], "load_features() (nerfbaselines.viewer.viser.dataset method)": [[16, "nerfbaselines.viewer.viser.Dataset.load_features", false]], "load_from_json() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.load_from_json", false]], "load_metrics_from_results() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.load_metrics_from_results", false]], "load_mipnerf360_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[5, "nerfbaselines.datasets.mipnerf360.load_mipnerf360_dataset", false]], "load_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.load_nerfstudio_dataset", false]], "loaded_step (nerfbaselines.methodinfo attribute)": [[1, "nerfbaselines.MethodInfo.loaded_step", false]], "log_metrics() (nerfbaselines.train.trainer method)": [[12, "nerfbaselines.train.Trainer.log_metrics", false]], "lpips() (in module nerfbaselines.metrics)": [[8, "nerfbaselines.metrics.lpips", false]], "lpips_alex() (in module nerfbaselines.metrics)": [[8, "nerfbaselines.metrics.lpips_alex", false]], "lpips_vgg() (in module nerfbaselines.metrics)": [[8, "nerfbaselines.metrics.lpips_vgg", false]], "mae() (in module nerfbaselines.metrics)": [[8, "nerfbaselines.metrics.mae", false]], "make_grid() (in module nerfbaselines.train)": [[12, "nerfbaselines.train.make_grid", false]], "mark_host() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.mark_host", false]], "metadata (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.metadata", false]], "metadata (nerfbaselines.registry.methodspec attribute)": [[9, "nerfbaselines.registry.MethodSpec.metadata", false]], "metadata (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.metadata", false]], "metadata (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.metadata", false]], "method (class in nerfbaselines)": [[1, "nerfbaselines.Method", false]], "method (nerfbaselines.registry.methodspec attribute)": [[9, "nerfbaselines.registry.MethodSpec.method", false]], "method_get_resources_utilization_info() (in module nerfbaselines.train)": [[12, "nerfbaselines.train.method_get_resources_utilization_info", false]], "methodinfo (class in nerfbaselines)": [[1, "nerfbaselines.MethodInfo", false]], "methodspec (class in nerfbaselines.registry)": [[9, "nerfbaselines.registry.MethodSpec", false]], "module": [[1, "module-nerfbaselines", false], [2, "module-nerfbaselines.backends", false], [2, "module-nerfbaselines.backends.apptainer", false], [2, "module-nerfbaselines.backends.conda", false], [2, "module-nerfbaselines.backends.docker", false], [3, "module-nerfbaselines.cameras", false], [4, "module-nerfbaselines.communication", false], [5, "module-nerfbaselines.datasets", false], [5, "module-nerfbaselines.datasets.blender", false], [5, "module-nerfbaselines.datasets.colmap", false], [5, "module-nerfbaselines.datasets.mipnerf360", false], [5, "module-nerfbaselines.datasets.nerfstudio", false], [6, "module-nerfbaselines.evaluate", false], [7, "module-nerfbaselines.io", false], [8, "module-nerfbaselines.metrics", false], [9, "module-nerfbaselines.registry", false], [10, "module-nerfbaselines.render", false], [11, "module-nerfbaselines.results", false], [12, "module-nerfbaselines.train", false], [13, "module-nerfbaselines.types", false], [14, "module-nerfbaselines.upload_results", false], [15, "module-nerfbaselines.utils", false], [16, "module-nerfbaselines.viewer", false], [16, "module-nerfbaselines.viewer.viser", false]], "mounts (nerfbaselines.backends.apptainermethod attribute)": [[2, "nerfbaselines.backends.ApptainerMethod.mounts", false]], "mounts (nerfbaselines.backends.dockermethod attribute)": [[2, "nerfbaselines.backends.DockerMethod.mounts", false]], "mse() (in module nerfbaselines.metrics)": [[8, "nerfbaselines.metrics.mse", false]], "multidataseterror": [[5, "nerfbaselines.datasets.MultiDatasetError", false]], "name (nerfbaselines.train.indicesclicktype attribute)": [[12, "nerfbaselines.train.IndicesClickType.name", false]], "nears_fars (nerfbaselines.cameras attribute)": [[1, "nerfbaselines.Cameras.nears_fars", false]], "nerfbaselines": [[1, "module-nerfbaselines", false]], "nerfbaselines-download-dataset command line option": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false], [17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-download-dataset-v", false]], "nerfbaselines-evaluate command line option": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false], [17, "cmdoption-nerfbaselines-evaluate-disable-extra-metrics", false], [17, "cmdoption-nerfbaselines-evaluate-o", false]], "nerfbaselines-render command line option": [[17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-render-split", false], [17, "cmdoption-nerfbaselines-render-v", false]], "nerfbaselines-render-dataset-results command line option": [[17, "cmdoption-nerfbaselines-render-dataset-results-dataset", false], [17, "cmdoption-nerfbaselines-render-dataset-results-method-links", false], [17, "cmdoption-nerfbaselines-render-dataset-results-output", false], [17, "cmdoption-nerfbaselines-render-dataset-results-output-type", false], [17, "cmdoption-nerfbaselines-render-dataset-results-results", false]], "nerfbaselines-shell command line option": [[17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-shell-method", false], [17, "cmdoption-nerfbaselines-shell-v", false]], "nerfbaselines-train command line option": [[17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-train-disable-extra-metrics", false], [17, "cmdoption-nerfbaselines-train-disable-output-artifact", false], [17, "cmdoption-nerfbaselines-train-eval-all-iters", false], [17, "cmdoption-nerfbaselines-train-eval-single-iters", false], [17, "cmdoption-nerfbaselines-train-force-output-artifact", false], [17, "cmdoption-nerfbaselines-train-method", false], [17, "cmdoption-nerfbaselines-train-output", false], [17, "cmdoption-nerfbaselines-train-v", false], [17, "cmdoption-nerfbaselines-train-vis", false]], "nerfbaselines-viewer command line option": [[17, "cmdoption-nerfbaselines-viewer-backend", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-data", false], [17, "cmdoption-nerfbaselines-viewer-port", false], [17, "cmdoption-nerfbaselines-viewer-v", false], [17, "cmdoption-nerfbaselines-viewer-viewer", false]], "nerfbaselines.backends": [[2, "module-nerfbaselines.backends", false]], "nerfbaselines.backends.apptainer": [[2, "module-nerfbaselines.backends.apptainer", false]], "nerfbaselines.backends.conda": [[2, "module-nerfbaselines.backends.conda", false]], "nerfbaselines.backends.docker": [[2, "module-nerfbaselines.backends.docker", false]], "nerfbaselines.cameras": [[3, "module-nerfbaselines.cameras", false]], "nerfbaselines.communication": [[4, "module-nerfbaselines.communication", false]], "nerfbaselines.datasets": [[5, "module-nerfbaselines.datasets", false]], "nerfbaselines.datasets.blender": [[5, "module-nerfbaselines.datasets.blender", false]], "nerfbaselines.datasets.colmap": [[5, "module-nerfbaselines.datasets.colmap", false]], "nerfbaselines.datasets.mipnerf360": [[5, "module-nerfbaselines.datasets.mipnerf360", false]], "nerfbaselines.datasets.nerfstudio": [[5, "module-nerfbaselines.datasets.nerfstudio", false]], "nerfbaselines.evaluate": [[6, "module-nerfbaselines.evaluate", false]], "nerfbaselines.io": [[7, "module-nerfbaselines.io", false]], "nerfbaselines.metrics": [[8, "module-nerfbaselines.metrics", false]], "nerfbaselines.registry": [[9, "module-nerfbaselines.registry", false]], "nerfbaselines.render": [[10, "module-nerfbaselines.render", false]], "nerfbaselines.results": [[11, "module-nerfbaselines.results", false]], "nerfbaselines.train": [[12, "module-nerfbaselines.train", false]], "nerfbaselines.types": [[13, "module-nerfbaselines.types", false]], "nerfbaselines.upload_results": [[14, "module-nerfbaselines.upload_results", false]], "nerfbaselines.utils": [[15, "module-nerfbaselines.utils", false]], "nerfbaselines.viewer": [[16, "module-nerfbaselines.viewer", false]], "nerfbaselines.viewer.viser": [[16, "module-nerfbaselines.viewer.viser", false]], "nogpuerror": [[15, "nerfbaselines.utils.NoGPUError", false]], "normalized_intrinsics (nerfbaselines.cameras attribute)": [[1, "nerfbaselines.Cameras.normalized_intrinsics", false]], "num_iterations (nerfbaselines.methodinfo attribute)": [[1, "nerfbaselines.MethodInfo.num_iterations", false]], "open_any() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.open_any", false]], "open_any_directory() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.open_any_directory", false]], "open_any_directory() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.open_any_directory", false]], "opencv (nerfbaselines.cameramodel attribute)": [[1, "nerfbaselines.CameraModel.OPENCV", false]], "opencv_fisheye (nerfbaselines.cameramodel attribute)": [[1, "nerfbaselines.CameraModel.OPENCV_FISHEYE", false]], "padded_stack() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.padded_stack", false]], "padded_stack() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.padded_stack", false]], "partialclass() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.partialclass", false]], "partialmethod() (in module nerfbaselines.backends.docker)": [[2, "nerfbaselines.backends.docker.partialmethod", false]], "partialmethod() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.partialmethod", false]], "pinhole (nerfbaselines.cameramodel attribute)": [[1, "nerfbaselines.CameraModel.PINHOLE", false]], "point3d (class in nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.Point3D", false]], "points3d_rgb (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.points3D_rgb", false]], "points3d_xyz (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.points3D_xyz", false]], "port (nerfbaselines.communication.connectionparams attribute)": [[4, "nerfbaselines.communication.ConnectionParams.port", false]], "poses (nerfbaselines.cameras attribute)": [[1, "nerfbaselines.Cameras.poses", false]], "predictions": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false]], "prepare_results_for_upload() (in module nerfbaselines.upload_results)": [[14, "nerfbaselines.upload_results.prepare_results_for_upload", false]], "project() (nerfbaselines.cameras method)": [[1, "nerfbaselines.Cameras.project", false]], "psnr() (in module nerfbaselines.metrics)": [[8, "nerfbaselines.metrics.psnr", false]], "python_path (nerfbaselines.backends.apptainer.remoteprocessmethod attribute)": [[2, "nerfbaselines.backends.apptainer.RemoteProcessMethod.python_path", false]], "python_path (nerfbaselines.backends.conda.remoteprocessmethod attribute)": [[2, "nerfbaselines.backends.conda.RemoteProcessMethod.python_path", false]], "python_path (nerfbaselines.backends.docker.remoteprocessmethod attribute)": [[2, "nerfbaselines.backends.docker.RemoteProcessMethod.python_path", false]], "python_path (nerfbaselines.communication.remoteprocessmethod attribute)": [[4, "nerfbaselines.communication.RemoteProcessMethod.python_path", false]], "python_version (nerfbaselines.backends.condamethod attribute)": [[2, "nerfbaselines.backends.CondaMethod.python_version", false]], "qvec2rotmat() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.qvec2rotmat", false]], "qvec2rotmat() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.qvec2rotmat", false]], "qvec2rotmat() (nerfbaselines.datasets.colmap.image method)": [[5, "nerfbaselines.datasets.colmap.Image.qvec2rotmat", false]], "raymethod (class in nerfbaselines)": [[1, "nerfbaselines.RayMethod", false]], "read_cameras_binary() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.read_cameras_binary", false]], "read_cameras_text() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.read_cameras_text", false]], "read_image() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.read_image", false]], "read_images_binary() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.read_images_binary", false]], "read_images_text() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.read_images_text", false]], "read_points3d_binary() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.read_points3D_binary", false]], "read_points3d_binary() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.read_points3D_binary", false]], "read_points3d_text() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.read_points3D_text", false]], "read_points3d_text() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.read_points3D_text", false]], "register() (in module nerfbaselines.registry)": [[9, "nerfbaselines.registry.register", false]], "register() (nerfbaselines.registry.methodspec method)": [[9, "nerfbaselines.registry.MethodSpec.register", false]], "remap_error() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.remap_error", false]], "remotecallable (class in nerfbaselines.communication)": [[4, "nerfbaselines.communication.RemoteCallable", false]], "remotemethod (class in nerfbaselines.communication)": [[4, "nerfbaselines.communication.RemoteMethod", false]], "remoteprocessmethod (class in nerfbaselines.backends.apptainer)": [[2, "nerfbaselines.backends.apptainer.RemoteProcessMethod", false]], "remoteprocessmethod (class in nerfbaselines.backends.conda)": [[2, "nerfbaselines.backends.conda.RemoteProcessMethod", false]], "remoteprocessmethod (class in nerfbaselines.backends.docker)": [[2, "nerfbaselines.backends.docker.RemoteProcessMethod", false]], "remoteprocessmethod (class in nerfbaselines.communication)": [[4, "nerfbaselines.communication.RemoteProcessMethod", false]], "render() (nerfbaselines.communication.remotemethod method)": [[4, "nerfbaselines.communication.RemoteMethod.render", false]], "render() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.render", false]], "render() (nerfbaselines.raymethod method)": [[1, "nerfbaselines.RayMethod.render", false]], "render_all_images() (in module nerfbaselines.render)": [[10, "nerfbaselines.render.render_all_images", false]], "render_markdown_dataset_results_table() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.render_markdown_dataset_results_table", false]], "render_rays() (nerfbaselines.raymethod method)": [[1, "nerfbaselines.RayMethod.render_rays", false]], "replace_callables() (in module nerfbaselines.communication)": [[4, "nerfbaselines.communication.replace_callables", false]], "required_features (nerfbaselines.methodinfo attribute)": [[1, "nerfbaselines.MethodInfo.required_features", false]], "rotation_matrix() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.rotation_matrix", false]], "rotation_matrix() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.rotation_matrix", false]], "rotmat2qvec() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.rotmat2qvec", false]], "run() (nerfbaselines.viewer.viser.viserviewer method)": [[16, "nerfbaselines.viewer.viser.ViserViewer.run", false]], "run_viser_viewer() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.run_viser_viewer", false]], "sampling_mask_paths (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.sampling_mask_paths", false]], "sampling_mask_paths (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.sampling_mask_paths", false]], "sampling_mask_paths (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.sampling_mask_paths", false]], "sampling_masks (nerfbaselines.datasets.dataset attribute)": [[5, "nerfbaselines.datasets.Dataset.sampling_masks", false]], "sampling_masks (nerfbaselines.types.dataset attribute)": [[13, "nerfbaselines.types.Dataset.sampling_masks", false]], "sampling_masks (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.sampling_masks", false]], "save() (nerfbaselines.communication.remotemethod method)": [[4, "nerfbaselines.communication.RemoteMethod.save", false]], "save() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.save", false]], "save() (nerfbaselines.train.trainer method)": [[12, "nerfbaselines.train.Trainer.save", false]], "save_depth() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.save_depth", false]], "save_image() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.save_image", false]], "setup_data() (nerfbaselines.train.trainer method)": [[12, "nerfbaselines.train.Trainer.setup_data", false]], "setup_logging() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.setup_logging", false]], "setup_logging() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.setup_logging", false]], "setup_train() (nerfbaselines.communication.remotemethod method)": [[4, "nerfbaselines.communication.RemoteMethod.setup_train", false]], "setup_train() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.setup_train", false]], "setup_train() (nerfbaselines.raymethod method)": [[1, "nerfbaselines.RayMethod.setup_train", false]], "shared_path (nerfbaselines.backends.apptainermethod property)": [[2, "nerfbaselines.backends.ApptainerMethod.shared_path", false]], "shared_path (nerfbaselines.backends.dockermethod property)": [[2, "nerfbaselines.backends.DockerMethod.shared_path", false]], "shared_path (nerfbaselines.communication.remotemethod property)": [[4, "nerfbaselines.communication.RemoteMethod.shared_path", false]], "single() (in module nerfbaselines.datasets.mipnerf360)": [[5, "nerfbaselines.datasets.mipnerf360.single", false]], "srgb_to_linear() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.srgb_to_linear", false]], "ssim() (in module nerfbaselines.metrics)": [[8, "nerfbaselines.metrics.ssim", false]], "start_backend() (in module nerfbaselines.communication)": [[4, "nerfbaselines.communication.start_backend", false]], "supported_camera_models (nerfbaselines.methodinfo attribute)": [[1, "nerfbaselines.MethodInfo.supported_camera_models", false]], "supported_methods() (in module nerfbaselines.registry)": [[9, "nerfbaselines.registry.supported_methods", false]], "test_extra_metrics() (in module nerfbaselines.evaluate)": [[6, "nerfbaselines.evaluate.test_extra_metrics", false]], "to_apptainer() (nerfbaselines.backends.dockermethod class method)": [[2, "nerfbaselines.backends.DockerMethod.to_apptainer", false]], "torchmetrics_ssim() (in module nerfbaselines.metrics)": [[8, "nerfbaselines.metrics.torchmetrics_ssim", false]], "total (nerfbaselines.currentprogress attribute)": [[1, "nerfbaselines.CurrentProgress.total", false]], "train() (nerfbaselines.train.trainer method)": [[12, "nerfbaselines.train.Trainer.train", false]], "train_iteration() (nerfbaselines.communication.remotemethod method)": [[4, "nerfbaselines.communication.RemoteMethod.train_iteration", false]], "train_iteration() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.train_iteration", false]], "train_iteration() (nerfbaselines.raymethod method)": [[1, "nerfbaselines.RayMethod.train_iteration", false]], "train_iteration() (nerfbaselines.train.trainer method)": [[12, "nerfbaselines.train.Trainer.train_iteration", false]], "train_iteration_rays() (nerfbaselines.raymethod method)": [[1, "nerfbaselines.RayMethod.train_iteration_rays", false]], "trainer (class in nerfbaselines.train)": [[12, "nerfbaselines.train.Trainer", false]], "undistort_camera() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.undistort_camera", false]], "unproject() (nerfbaselines.cameras method)": [[1, "nerfbaselines.Cameras.unproject", false]], "viserviewer (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.ViserViewer", false]], "visualize_depth() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.visualize_depth", false]], "warp_image_between_cameras() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.warp_image_between_cameras", false]], "with_image_sizes() (nerfbaselines.cameras method)": [[1, "nerfbaselines.Cameras.with_image_sizes", false]], "with_supported_camera_models() (in module nerfbaselines.render)": [[10, "nerfbaselines.render.with_supported_camera_models", false]], "wrap() (nerfbaselines.backends.apptainer.remoteprocessmethod class method)": [[2, "nerfbaselines.backends.apptainer.RemoteProcessMethod.wrap", false]], "wrap() (nerfbaselines.backends.conda.remoteprocessmethod class method)": [[2, "nerfbaselines.backends.conda.RemoteProcessMethod.wrap", false]], "wrap() (nerfbaselines.backends.docker.remoteprocessmethod class method)": [[2, "nerfbaselines.backends.docker.RemoteProcessMethod.wrap", false]], "wrap() (nerfbaselines.communication.remoteprocessmethod class method)": [[4, "nerfbaselines.communication.RemoteProcessMethod.wrap", false]], "write_to_logger() (nerfbaselines.datasets.multidataseterror method)": [[5, "nerfbaselines.datasets.MultiDatasetError.write_to_logger", false]]}, "objects": {"": [[1, 0, 0, "-", "nerfbaselines"]], "nerfbaselines": [[1, 1, 1, "", "CameraModel"], [1, 1, 1, "", "Cameras"], [1, 1, 1, "", "CurrentProgress"], [1, 1, 1, "", "Indices"], [1, 1, 1, "", "Method"], [1, 1, 1, "", "MethodInfo"], [1, 1, 1, "", "RayMethod"], [2, 0, 0, "-", "backends"], [3, 0, 0, "-", "cameras"], [4, 0, 0, "-", "communication"], [5, 0, 0, "-", "datasets"], [6, 0, 0, "-", "evaluate"], [7, 0, 0, "-", "io"], [8, 0, 0, "-", "metrics"], [9, 0, 0, "-", "registry"], [10, 0, 0, "-", "render"], [11, 0, 0, "-", "results"], [12, 0, 0, "-", "train"], [13, 0, 0, "-", "types"], [14, 0, 0, "-", "upload_results"], [15, 0, 0, "-", "utils"], [16, 0, 0, "-", "viewer"]], "nerfbaselines-download-dataset": [[17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-v", "-v"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", "DATASET"]], "nerfbaselines-evaluate": [[17, 7, 1, "cmdoption-nerfbaselines-evaluate-disable-extra-metrics", "--disable-extra-metrics"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", "PREDICTIONS"]], "nerfbaselines-render": [[17, 7, 1, "cmdoption-nerfbaselines-render-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-render-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-render-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-render-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-split", "--split"], [17, 7, 1, "cmdoption-nerfbaselines-render-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-render-v", "-v"]], "nerfbaselines-render-dataset-results": [[17, 7, 1, "cmdoption-nerfbaselines-render-dataset-results-dataset", "--dataset"], [17, 7, 1, "cmdoption-nerfbaselines-render-dataset-results-method-links", "--method-links"], [17, 7, 1, "cmdoption-nerfbaselines-render-dataset-results-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-dataset-results-output-type", "--output-type"], [17, 7, 1, "cmdoption-nerfbaselines-render-dataset-results-results", "--results"]], "nerfbaselines-shell": [[17, 7, 1, "cmdoption-nerfbaselines-shell-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-shell-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-shell-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-shell-v", "-v"]], "nerfbaselines-train": [[17, 7, 1, "cmdoption-nerfbaselines-train-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-train-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-train-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-train-disable-extra-metrics", "--disable-extra-metrics"], [17, 7, 1, "cmdoption-nerfbaselines-train-disable-output-artifact", "--disable-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-all-iters", "--eval-all-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-single-iters", "--eval-single-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-force-output-artifact", "--force-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-train-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-train-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-train-vis", "--vis"], [17, 7, 1, "cmdoption-nerfbaselines-train-v", "-v"]], "nerfbaselines-viewer": [[17, 7, 1, "cmdoption-nerfbaselines-viewer-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-port", "--port"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-viewer", "--viewer"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-v", "-v"]], "nerfbaselines.CameraModel": [[1, 2, 1, "", "FULL_OPENCV"], [1, 2, 1, "", "OPENCV"], [1, 2, 1, "", "OPENCV_FISHEYE"], [1, 2, 1, "", "PINHOLE"]], "nerfbaselines.Cameras": [[1, 2, 1, "", "camera_types"], [1, 3, 1, "", "cat"], [1, 2, 1, "", "distortion_parameters"], [1, 3, 1, "", "get_rays"], [1, 2, 1, "", "image_sizes"], [1, 3, 1, "", "item"], [1, 2, 1, "", "nears_fars"], [1, 2, 1, "", "normalized_intrinsics"], [1, 2, 1, "", "poses"], [1, 3, 1, "", "project"], [1, 3, 1, "", "unproject"], [1, 3, 1, "", "with_image_sizes"]], "nerfbaselines.CurrentProgress": [[1, 2, 1, "", "i"], [1, 2, 1, "", "image_i"], [1, 2, 1, "", "image_total"], [1, 2, 1, "", "total"]], "nerfbaselines.Indices": [[1, 3, 1, "", "every_iters"]], "nerfbaselines.Method": [[1, 3, 1, "", "get_info"], [1, 3, 1, "", "install"], [1, 3, 1, "", "render"], [1, 3, 1, "", "save"], [1, 3, 1, "", "setup_train"], [1, 3, 1, "", "train_iteration"]], "nerfbaselines.MethodInfo": [[1, 2, 1, "", "batch_size"], [1, 2, 1, "", "eval_batch_size"], [1, 2, 1, "", "loaded_step"], [1, 2, 1, "", "num_iterations"], [1, 2, 1, "", "required_features"], [1, 2, 1, "", "supported_camera_models"]], "nerfbaselines.RayMethod": [[1, 3, 1, "", "render"], [1, 3, 1, "", "render_rays"], [1, 3, 1, "", "setup_train"], [1, 3, 1, "", "train_iteration"], [1, 3, 1, "", "train_iteration_rays"]], "nerfbaselines.backends": [[2, 1, 1, "", "ApptainerMethod"], [2, 1, 1, "", "CondaMethod"], [2, 1, 1, "", "DockerMethod"], [2, 0, 0, "-", "apptainer"], [2, 0, 0, "-", "conda"], [2, 0, 0, "-", "docker"]], "nerfbaselines.backends.ApptainerMethod": [[2, 2, 1, "", "environments_path"], [2, 2, 1, "", "home_path"], [2, 2, 1, "", "image"], [2, 2, 1, "", "mounts"], [2, 4, 1, "", "shared_path"]], "nerfbaselines.backends.CondaMethod": [[2, 2, 1, "", "conda_name"], [2, 2, 1, "", "environment"], [2, 2, 1, "", "environments_path"], [2, 3, 1, "", "get_environment_hash"], [2, 2, 1, "", "install_script"], [2, 2, 1, "", "python_version"]], "nerfbaselines.backends.DockerMethod": [[2, 2, 1, "", "environments_path"], [2, 3, 1, "", "get_dockerfile"], [2, 2, 1, "", "home_path"], [2, 2, 1, "", "image"], [2, 2, 1, "", "mounts"], [2, 4, 1, "", "shared_path"], [2, 3, 1, "", "to_apptainer"]], "nerfbaselines.backends.apptainer": [[2, 1, 1, "", "RemoteProcessMethod"]], "nerfbaselines.backends.apptainer.RemoteProcessMethod": [[2, 2, 1, "", "build_code"], [2, 3, 1, "", "close"], [2, 3, 1, "", "install"], [2, 2, 1, "", "python_path"], [2, 3, 1, "", "wrap"]], "nerfbaselines.backends.conda": [[2, 1, 1, "", "RemoteProcessMethod"]], "nerfbaselines.backends.conda.RemoteProcessMethod": [[2, 2, 1, "", "build_code"], [2, 3, 1, "", "close"], [2, 3, 1, "", "install"], [2, 2, 1, "", "python_path"], [2, 3, 1, "", "wrap"]], "nerfbaselines.backends.docker": [[2, 1, 1, "", "RemoteProcessMethod"], [2, 5, 1, "", "partialmethod"]], "nerfbaselines.backends.docker.RemoteProcessMethod": [[2, 2, 1, "", "build_code"], [2, 3, 1, "", "close"], [2, 3, 1, "", "install"], [2, 2, 1, "", "python_path"], [2, 3, 1, "", "wrap"]], "nerfbaselines.cameras": [[3, 5, 1, "", "interpolate_bilinear"], [3, 5, 1, "", "undistort_camera"], [3, 5, 1, "", "warp_image_between_cameras"]], "nerfbaselines.communication": [[4, 1, 1, "", "ConnectionParams"], [4, 1, 1, "", "RemoteCallable"], [4, 1, 1, "", "RemoteMethod"], [4, 1, 1, "", "RemoteProcessMethod"], [4, 5, 1, "", "inject_callables"], [4, 5, 1, "", "replace_callables"], [4, 5, 1, "", "start_backend"]], "nerfbaselines.communication.ConnectionParams": [[4, 2, 1, "", "authkey"], [4, 2, 1, "", "port"]], "nerfbaselines.communication.RemoteMethod": [[4, 3, 1, "", "call"], [4, 3, 1, "", "close"], [4, 3, 1, "", "decode_args"], [4, 4, 1, "", "encoded_args"], [4, 3, 1, "", "get_info"], [4, 3, 1, "", "render"], [4, 3, 1, "", "save"], [4, 3, 1, "", "setup_train"], [4, 4, 1, "", "shared_path"], [4, 3, 1, "", "train_iteration"]], "nerfbaselines.communication.RemoteProcessMethod": [[4, 2, 1, "", "build_code"], [4, 3, 1, "", "close"], [4, 3, 1, "", "install"], [4, 2, 1, "", "python_path"], [4, 3, 1, "", "wrap"]], "nerfbaselines.datasets": [[5, 1, 1, "", "Dataset"], [5, 6, 1, "", "DatasetNotFoundError"], [5, 6, 1, "", "MultiDatasetError"], [5, 0, 0, "-", "blender"], [5, 0, 0, "-", "colmap"], [5, 5, 1, "", "download_dataset"], [5, 5, 1, "", "load_dataset"], [5, 0, 0, "-", "mipnerf360"], [5, 0, 0, "-", "nerfstudio"]], "nerfbaselines.datasets.Dataset": [[5, 2, 1, "", "cameras"], [5, 2, 1, "", "color_space"], [5, 4, 1, "", "expected_scene_scale"], [5, 2, 1, "", "file_paths"], [5, 2, 1, "", "file_paths_root"], [5, 2, 1, "", "images"], [5, 3, 1, "", "load_features"], [5, 2, 1, "", "metadata"], [5, 2, 1, "", "points3D_rgb"], [5, 2, 1, "", "points3D_xyz"], [5, 2, 1, "", "sampling_mask_paths"], [5, 2, 1, "", "sampling_masks"]], "nerfbaselines.datasets.MultiDatasetError": [[5, 3, 1, "", "write_to_logger"]], "nerfbaselines.datasets.blender": [[5, 5, 1, "", "download_blender_dataset"], [5, 5, 1, "", "load_blender_dataset"]], "nerfbaselines.datasets.colmap": [[5, 1, 1, "", "Camera"], [5, 1, 1, "", "Image"], [5, 1, 1, "", "Point3D"], [5, 5, 1, "", "load_colmap_dataset"], [5, 5, 1, "", "padded_stack"], [5, 5, 1, "", "qvec2rotmat"], [5, 5, 1, "", "read_cameras_binary"], [5, 5, 1, "", "read_cameras_text"], [5, 5, 1, "", "read_images_binary"], [5, 5, 1, "", "read_images_text"], [5, 5, 1, "", "read_points3D_binary"], [5, 5, 1, "", "read_points3D_text"]], "nerfbaselines.datasets.colmap.Image": [[5, 3, 1, "", "qvec2rotmat"]], "nerfbaselines.datasets.mipnerf360": [[5, 5, 1, "", "download_mipnerf360_dataset"], [5, 5, 1, "", "load_colmap_dataset"], [5, 5, 1, "", "load_mipnerf360_dataset"], [5, 5, 1, "", "single"]], "nerfbaselines.datasets.nerfstudio": [[5, 5, 1, "", "download_capture_name"], [5, 5, 1, "", "download_nerfstudio_dataset"], [5, 5, 1, "", "get_train_eval_split_all"], [5, 5, 1, "", "get_train_eval_split_filename"], [5, 5, 1, "", "get_train_eval_split_fraction"], [5, 5, 1, "", "get_train_eval_split_interval"], [5, 5, 1, "", "grab_file_id"], [5, 5, 1, "", "load_from_json"], [5, 5, 1, "", "load_nerfstudio_dataset"], [5, 5, 1, "", "read_points3D_binary"], [5, 5, 1, "", "read_points3D_text"]], "nerfbaselines.evaluate": [[6, 5, 1, "", "compute_metrics"], [6, 5, 1, "", "evaluate"], [6, 5, 1, "", "get_predictions_hashes"], [6, 5, 1, "", "test_extra_metrics"]], "nerfbaselines.io": [[7, 5, 1, "", "open_any"], [7, 5, 1, "", "open_any_directory"]], "nerfbaselines.metrics": [[8, 5, 1, "", "dmpix_ssim"], [8, 5, 1, "", "lpips"], [8, 5, 1, "", "lpips_alex"], [8, 5, 1, "", "lpips_vgg"], [8, 5, 1, "", "mae"], [8, 5, 1, "", "mse"], [8, 5, 1, "", "psnr"], [8, 5, 1, "", "ssim"], [8, 5, 1, "", "torchmetrics_ssim"]], "nerfbaselines.registry": [[9, 1, 1, "", "LazyMethod"], [9, 1, 1, "", "MethodSpec"], [9, 5, 1, "", "auto_register"], [9, 5, 1, "", "get"], [9, 5, 1, "", "register"], [9, 5, 1, "", "supported_methods"]], "nerfbaselines.registry.MethodSpec": [[9, 2, 1, "", "apptainer"], [9, 2, 1, "", "args"], [9, 3, 1, "", "build"], [9, 2, 1, "", "conda"], [9, 2, 1, "", "docker"], [9, 3, 1, "", "get_default_backend"], [9, 4, 1, "", "implemented_backends"], [9, 2, 1, "", "kwargs"], [9, 2, 1, "", "metadata"], [9, 2, 1, "", "method"], [9, 3, 1, "", "register"]], "nerfbaselines.render": [[10, 5, 1, "", "get_checkpoint_sha"], [10, 5, 1, "", "render_all_images"], [10, 5, 1, "", "with_supported_camera_models"]], "nerfbaselines.results": [[11, 5, 1, "", "compile_dataset_results"], [11, 5, 1, "", "format_duration"], [11, 5, 1, "", "format_memory"], [11, 5, 1, "", "get_benchmark_datasets"], [11, 5, 1, "", "get_dataset_info"], [11, 5, 1, "", "load_metrics_from_results"], [11, 5, 1, "", "render_markdown_dataset_results_table"]], "nerfbaselines.train": [[12, 1, 1, "", "IndicesClickType"], [12, 1, 1, "", "Trainer"], [12, 5, 1, "", "compute_exponential_gamma"], [12, 5, 1, "", "make_grid"], [12, 5, 1, "", "method_get_resources_utilization_info"]], "nerfbaselines.train.IndicesClickType": [[12, 3, 1, "", "convert"], [12, 2, 1, "", "name"]], "nerfbaselines.train.Trainer": [[12, 3, 1, "", "close"], [12, 3, 1, "", "ensure_loggers_initialized"], [12, 3, 1, "", "eval_all"], [12, 3, 1, "", "eval_single"], [12, 3, 1, "", "log_metrics"], [12, 3, 1, "", "save"], [12, 3, 1, "", "setup_data"], [12, 3, 1, "", "train"], [12, 3, 1, "", "train_iteration"]], "nerfbaselines.types": [[13, 1, 1, "", "Dataset"], [13, 5, 1, "", "batched"]], "nerfbaselines.types.Dataset": [[13, 2, 1, "", "cameras"], [13, 2, 1, "", "color_space"], [13, 4, 1, "", "expected_scene_scale"], [13, 2, 1, "", "file_paths"], [13, 2, 1, "", "file_paths_root"], [13, 2, 1, "", "images"], [13, 3, 1, "", "load_features"], [13, 2, 1, "", "metadata"], [13, 2, 1, "", "points3D_rgb"], [13, 2, 1, "", "points3D_xyz"], [13, 2, 1, "", "sampling_mask_paths"], [13, 2, 1, "", "sampling_masks"]], "nerfbaselines.upload_results": [[14, 5, 1, "", "prepare_results_for_upload"]], "nerfbaselines.utils": [[15, 1, 1, "", "CancellationToken"], [15, 6, 1, "", "CancelledException"], [15, 1, 1, "", "Formatter"], [15, 6, 1, "", "NoGPUError"], [15, 5, 1, "", "batched"], [15, 5, 1, "", "cancellable"], [15, 5, 1, "", "convert_image_dtype"], [15, 5, 1, "", "get_resources_utilization_info"], [15, 5, 1, "", "handle_cli_error"], [15, 5, 1, "", "image_to_srgb"], [15, 5, 1, "", "is_broadcastable"], [15, 5, 1, "", "linear_to_srgb"], [15, 5, 1, "", "mark_host"], [15, 5, 1, "", "padded_stack"], [15, 5, 1, "", "partialclass"], [15, 5, 1, "", "partialmethod"], [15, 5, 1, "", "read_image"], [15, 5, 1, "", "remap_error"], [15, 5, 1, "", "save_depth"], [15, 5, 1, "", "save_image"], [15, 5, 1, "", "setup_logging"], [15, 5, 1, "", "srgb_to_linear"], [15, 5, 1, "", "visualize_depth"]], "nerfbaselines.utils.CancellationToken": [[15, 3, 1, "", "cancel"], [15, 4, 1, "", "cancelled"], [15, 3, 1, "", "invoke"]], "nerfbaselines.utils.Formatter": [[15, 3, 1, "", "format"]], "nerfbaselines.viewer": [[16, 5, 1, "", "get_c2w"], [16, 5, 1, "", "get_orientation_transform"], [16, 5, 1, "", "get_position_quaternion"], [16, 5, 1, "", "handle_cli_error"], [16, 5, 1, "", "open_any_directory"], [16, 5, 1, "", "qvec2rotmat"], [16, 5, 1, "", "rotation_matrix"], [16, 5, 1, "", "rotmat2qvec"], [16, 5, 1, "", "setup_logging"], [16, 0, 0, "-", "viser"]], "nerfbaselines.viewer.viser": [[16, 1, 1, "", "CancellationToken"], [16, 6, 1, "", "CancelledException"], [16, 1, 1, "", "Dataset"], [16, 1, 1, "", "ViserViewer"], [16, 5, 1, "", "cancellable"], [16, 5, 1, "", "get_c2w"], [16, 5, 1, "", "get_orientation_transform"], [16, 5, 1, "", "get_position_quaternion"], [16, 5, 1, "", "load_dataset"], [16, 5, 1, "", "rotation_matrix"], [16, 5, 1, "", "run_viser_viewer"]], "nerfbaselines.viewer.viser.CancellationToken": [[16, 3, 1, "", "cancel"], [16, 4, 1, "", "cancelled"], [16, 3, 1, "", "invoke"]], "nerfbaselines.viewer.viser.Dataset": [[16, 2, 1, "", "cameras"], [16, 2, 1, "", "color_space"], [16, 4, 1, "", "expected_scene_scale"], [16, 2, 1, "", "file_paths"], [16, 2, 1, "", "file_paths_root"], [16, 2, 1, "", "images"], [16, 3, 1, "", "load_features"], [16, 2, 1, "", "metadata"], [16, 2, 1, "", "points3D_rgb"], [16, 2, 1, "", "points3D_xyz"], [16, 2, 1, "", "sampling_mask_paths"], [16, 2, 1, "", "sampling_masks"]], "nerfbaselines.viewer.viser.ViserViewer": [[16, 3, 1, "", "add_dataset_views"], [16, 3, 1, "", "run"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:cmdoption"}, "terms": {"": [8, 15], "0": [1, 4, 8, 12], "01": 8, "03": 8, "04264": 19, "06706": 19, "09987": 19, "1": [1, 8, 12, 19], "10000": 12, "10902": 19, "11": 8, "12": [1, 3, 15, 19], "12077": 19, "13": 8, "1920": 12, "19tv6kdvgcmg3cgz1bniunbbmd": 5, "2": [1, 12], "200": 19, "2000": 12, "2004": 8, "2023": 5, "2111": 19, "2302": 19, "2304": 19, "2308": 19, "3": [1, 3, 15, 19], "360": 18, "3d": 19, "3d_gaussian_splatting_low": 19, "4": 8, "42": 1, "5": 8, "6": [1, 3, 15, 19], "600": 8, "6006": 16, "612": 8, "A": [6, 8, 11, 19], "If": [5, 6, 8, 12, 15], "It": [8, 12, 19], "Near": 1, "No": 15, "One": 8, "The": [5, 8, 11, 12, 15, 16, 19], "__init__": [1, 3, 15], "abhik": 19, "absolut": 8, "abstract": 1, "acceler": 19, "accept": 12, "achiev": 19, "add": 19, "add_dataset_view": 16, "addapt": 19, "addit": 17, "address": [4, 19], "after": 8, "ahuja": 19, "alex": 19, "alexand": 19, "alias": 19, "all": [5, 10, 17], "allow_alpha": 15, "along": 19, "alreadi": 12, "also": [12, 19], "an": 19, "angjoo": 19, "ani": [8, 9], "anisotrop": 8, "anti": 19, "api": 18, "append": 15, "approach": 19, "approxim": 19, "apptain": [9, 17], "apptainermethod": [2, 9], "ar": [5, 6, 8, 12, 15], "arg": [1, 2, 4, 9, 15, 16, 17], "argument": [12, 17], "arrai": [13, 15], "arriv": 12, "artifact": [14, 17], "arxiv": 19, "assess": 8, "asset": 19, "attribut": 15, "austin": 19, "authkei": 4, "author": 19, "auto_regist": 9, "automat": 19, "avail": [6, 15], "averag": 8, "b": [8, 16], "backend": [0, 9, 17], "background": 12, "background_color": 15, "bandwidth": 8, "bar": 6, "barron": 19, "base": [1, 2, 4, 5, 8, 9, 12, 13, 15, 16, 19], "baseimag": 5, "batch": [13, 15], "batch_siz": [1, 13, 15], "befor": 15, "ben": 19, "benchmark": [11, 14], "bernhard": 19, "better": 8, "between": 8, "big": 17, "binaryio": [7, 15], "bool": [1, 6, 8, 12, 14, 15, 16], "both": 5, "boundari": 1, "bovik": 8, "brent": 19, "brualla": 19, "build": 9, "build_cod": [2, 4], "byte": 4, "c": 8, "c2": 16, "cach": 2, "call": [4, 12, 15], "callabl": [1, 4, 8, 12], "callback": [1, 4], "camera": [0, 1, 4, 5, 13, 16, 18, 19], "camera_id": 5, "camera_typ": 1, "cameramodel": [1, 18], "cameras1": 3, "cameras2": 3, "camp": [17, 19], "can": [5, 8], "cancel": [15, 16], "cancellationtoken": [15, 16], "cancelledexcept": [15, 16], "cannot": 12, "captur": [5, 19], "carri": 15, "case": [8, 19], "cat": 1, "caus": 8, "cc": 5, "centric": 19, "certain": 12, "checkpoint": [4, 12, 17], "christoph": 19, "cl": 15, "class": [1, 2, 4, 5, 9, 12, 13, 15, 16], "classmethod": [1, 2, 4], "cli": 18, "close": [2, 4, 12], "cloud": 19, "colmap": 19, "color": [1, 5, 8, 16], "color_spac": [5, 12, 13, 15, 16], "colorspac": 8, "com": [5, 19], "combin": 19, "command": [12, 17], "commun": 0, "compar": [8, 19], "compat": 12, "compil": 11, "compile_dataset_result": 11, "comput": [8, 15, 16], "compute_exponential_gamma": 12, "compute_metr": 6, "conda": [9, 17], "conda_nam": 2, "condamethod": [2, 9], "condit": 19, "connection_param": 4, "connectionparam": 4, "const": 5, "contain": [6, 11, 17], "context": 12, "convert": 12, "convert_image_dtyp": 15, "convolut": 8, "correct": 12, "coupl": 15, "ctx": 12, "current": [1, 4, 12], "currentprogress": [1, 18], "dampen": 8, "data": [1, 4, 5, 16, 17], "data_rang": 8, "dataset": [0, 1, 4, 10, 11, 12, 13, 16, 18, 19], "datasetnotfounderror": 5, "datefmt": 15, "david": 19, "decode_arg": 4, "default": [1, 4, 8, 15, 17], "defin": 8, "degre": 19, "delaunai": 19, "depend": [6, 17], "depth": [4, 15], "descript": [6, 10, 12], "design": 19, "determin": [8, 15], "develop": 19, "deviat": 8, "dict": [1, 5, 9, 10, 11, 13, 16], "dictionari": [5, 6, 11, 15], "differ": 19, "dim": 8, "direct": 1, "directli": 5, "directori": [6, 14, 17], "disabl": 17, "disable_extra_metr": 6, "distort": 19, "distortion_paramet": 1, "dm_pix": 8, "dmpix_ssim": 8, "doc": 19, "docker": [9, 17], "dockermethod": [2, 9], "doe": 8, "dor": 19, "download": [5, 18], "download_blender_dataset": 5, "download_capture_nam": 5, "download_dataset": 5, "download_mipnerf360_dataset": 5, "download_nerfstudio_dataset": 5, "downscale_factor": 5, "drettaki": 19, "drive": 5, "drive_link": 5, "dtype": 15, "e": 8, "each": 8, "encod": 19, "encoded_arg": 4, "ensure_loggers_initi": 12, "enum": 1, "env": 2, "environ": 2, "environments_path": 2, "error": [5, 8], "estim": 8, "etc": [1, 4], "ethan": 19, "eval": [5, 17], "eval_al": 12, "eval_all_it": [12, 17], "eval_batch_s": 1, "eval_interv": 5, "eval_singl": 12, "eval_single_it": [12, 17], "evalu": [0, 11, 18], "evan": 19, "event": [14, 15], "every_it": 1, "evonn": 19, "exactli": 8, "except": [5, 15, 16], "expected_scal": 15, "expected_scene_scal": [5, 13, 16], "extend": 19, "extens": 19, "extra": [6, 17], "extract": 19, "factori": [1, 4, 5, 9, 13, 16], "fail": 12, "fals": [1, 6, 8, 9, 12, 15, 16], "far": 1, "fast": 19, "featur": [5, 16], "field": 19, "file": [5, 6, 11, 14, 15, 17], "file_id_or_zip_url": 5, "file_path": [5, 13, 16], "file_paths_root": [5, 13, 16], "filenam": 5, "filter": 8, "filter_fn": 8, "final": 17, "final_lr": 12, "first": 8, "float": [5, 8, 11, 12, 15], "float32": 8, "float64": 8, "fmt": 15, "fn": [15, 16], "folder": 5, "forc": [9, 17], "format": [5, 15], "format_dur": 11, "format_memori": 11, "formatexcept": 15, "formatt": 15, "formattim": 15, "fp": 19, "fr": 19, "fraction": 5, "framework": 19, "from": [1, 3, 5, 8, 11, 12, 15, 19], "frozenset": [1, 5, 9, 12, 16], "frustum": 19, "full_opencv": 1, "func": [2, 15], "function": [4, 8], "fungraph": 19, "gaussian": [8, 17, 18], "gaussian_kernel": 8, "gener": 11, "generate_output_artifact": 12, "georg": 19, "georgio": 19, "get": [1, 4, 5, 9, 11], "get_benchmark_dataset": 11, "get_c2w": 16, "get_checkpoint_sha": 10, "get_dataset_info": 11, "get_default_backend": 9, "get_dockerfil": 2, "get_environment_hash": 2, "get_info": [1, 4], "get_orientation_transform": 16, "get_position_quaternion": 16, "get_predictions_hash": 6, "get_rai": 1, "get_resources_utilization_info": 15, "get_train_eval_split_al": 5, "get_train_eval_split_filenam": 5, "get_train_eval_split_fract": 5, "get_train_eval_split_interv": 5, "getmessag": 15, "github": 19, "given": [1, 5], "good": 19, "googl": 5, "gpu": [15, 17], "grab_file_id": 5, "graphic": 19, "grayscal": 8, "grid": 19, "ground": 8, "gt": 6, "gz": 17, "h": 8, "ha": 19, "handl": 19, "handle_cli_error": [15, 16], "hash": [6, 19], "have": 8, "hedman": 19, "height": 5, "henzler": 19, "higher": 8, "home": 2, "home_path": 2, "hostedtoolcach": [1, 3, 15], "hou": 19, "howev": 19, "http": [5, 19], "huge": 17, "i": [1, 4, 8, 12, 15, 19], "id": [5, 19], "ieee": 8, "ignor": 8, "imag": [1, 2, 3, 4, 5, 8, 10, 12, 13, 15, 16, 17], "image_filenam": 5, "image_i": 1, "image_id": 5, "image_s": 1, "image_to_srgb": 15, "image_tot": 1, "images_path": 5, "img": 15, "implement": [8, 19], "implemented_backend": 9, "improv": 19, "index": 8, "indic": [1, 5, 12, 18], "indicesclicktyp": 12, "individu": 8, "info": [1, 4, 11, 19], "inform": 15, "ingp": 19, "initial_lr": 12, "inject_cal": 4, "input": [8, 12, 19], "inria": 19, "instal": [1, 2, 4], "install_script": 2, "instant": [17, 18], "instead": 19, "int": [1, 4, 5, 8, 12], "integr": 19, "interest": 5, "interpolate_bilinear": 3, "interv": 5, "intrins": 19, "invok": [15, 16], "io": [0, 19], "iqjrbg": 5, "is_broadcast": 15, "item": 1, "iter": [1, 4, 7, 10, 16, 17], "its": 12, "jake": 19, "jkulhanek": 19, "jona": 19, "jonathan": 19, "jonbarron": 19, "json": [5, 6, 11, 17], "justin": 19, "k1": 8, "k2": 8, "kamyar": 19, "kanazawa": 19, "keller": 19, "kerbl": 19, "kernel": 8, "kernel_s": 8, "kerr": 19, "keunhong": 19, "kopana": 19, "kristoffersen": 19, "kulhanek": 19, "kwarg": [1, 2, 4, 5, 9, 15, 16], "latest": 17, "lazymethod": 9, "learn": 8, "least": 8, "leimk\u00fchler": 19, "li": 19, "lib": [1, 3, 15], "line": 12, "linear": [5, 12, 13, 16], "linear_to_srgb": 15, "link": 17, "list": [2, 5, 11, 13, 15, 16], "liter": [1, 5, 7, 9, 11, 12, 13, 16], "load": [5, 11], "load_blender_dataset": 5, "load_colmap_dataset": 5, "load_dataset": [5, 16], "load_featur": [5, 13, 16], "load_from_json": 5, "load_metrics_from_result": 11, "load_mipnerf360_dataset": 5, "load_nerfstudio_dataset": 5, "loaded_step": 1, "localhost": 4, "log_metr": 12, "logger": [12, 17], "logrecord": 15, "lower": 8, "lpip": 8, "lpips_alex": 8, "lpips_vgg": 8, "mae": 8, "magnitud": 8, "mai": 12, "make_grid": 12, "map": 8, "mark_host": 15, "mark_onli": [15, 16], "markdown": [11, 17], "martin": 19, "match": 8, "matrix": 16, "matthew": 19, "max": 8, "max_val": 8, "max_width": 12, "maximum": 8, "mcallist": 19, "mean": 8, "measur": 8, "memori": 11, "mesh": 19, "messag": [5, 12, 15], "metadata": [5, 9, 13, 16], "method": [1, 2, 4, 9, 10, 11, 12, 16, 17, 18], "method_get_resources_utilization_info": 12, "method_link": [11, 17], "method_nam": 12, "methodinfo": [1, 4, 18], "methodspec": 9, "metric": [0, 6, 11, 12, 14, 17], "metrics_path": 14, "mildenhal": 19, "min": [8, 19], "mip": 18, "mipnerf360": [17, 19], "miss": 12, "mlp": 19, "mode": [7, 16], "model": [1, 4, 5, 8, 14, 17, 19], "model_path": 14, "modul": [1, 3, 15], "modular": 19, "mount": 2, "mse": 8, "mueller2022inst": 19, "multidataseterror": 5, "multiresolut": 19, "must": [8, 12], "my_id": 4, "m\u00fcller": 19, "name": [1, 5, 9, 11, 12], "nb": 2, "ncol": 12, "ndarrai": [1, 3, 5, 8, 12, 13, 15, 16], "near_far": 15, "nears_far": 1, "need": 17, "nerf": [14, 17, 18], "nerfacto": [17, 19], "nerfbaselin": 0, "nerfstudio": [17, 18], "neural": 19, "ng": 19, "ngp": [17, 18], "nogpuerror": 15, "nois": 8, "none": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17], "normal": 19, "normalized_intrins": 1, "note": 8, "ns_info": 10, "num_it": 12, "num_iter": [1, 4, 12], "number": [1, 4, 5], "numer": 8, "numpi": [1, 3, 5, 13, 15, 16], "nvlab": 19, "o": 17, "obj": 4, "object": [1, 4, 5, 9, 12, 13, 15, 16, 19], "obtain": [5, 11, 19], "offici": 19, "one": [1, 4], "onli": 8, "open_ani": 7, "open_any_directori": [7, 16], "opencv": 1, "opencv_fishey": 1, "oper": 15, "operand": 15, "opt": [1, 3, 15], "optim": [1, 4], "option": [1, 5, 9, 13, 16, 17], "org": 19, "origin": 1, "other": [12, 19], "out": 15, "output": [5, 6, 8, 10, 11, 12, 17], "output_path": 14, "output_queu": 4, "output_typ": 17, "p": [8, 19], "packag": [1, 3, 15], "pad": 12, "padded_stack": [5, 15], "pair": 8, "pallet": 15, "paper": [5, 11, 17, 19], "param": [4, 5, 8, 12], "paramet": [1, 4, 5, 6, 8, 11, 12, 14, 16, 19], "paramtyp": 12, "park": 19, "partialclass": 15, "partialmethod": [2, 15], "patch": 8, "path": [1, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 19], "path_to_model_fil": 5, "pathlib": [5, 12, 13, 16], "pdf": 19, "peak": 8, "per": 8, "perceptu": 8, "perform": 8, "peter": 19, "philipp": 19, "pid": 15, "pinhol": 1, "pixel": 8, "plane": 1, "point": 19, "point2d_idx": 5, "point3d": 5, "point3d_id": 5, "points3d_rgb": [1, 5, 13, 16], "points3d_xyz": [1, 5, 13, 16], "port": [4, 16, 17], "pose": [1, 16, 19], "posixpath": 12, "possibl": 8, "pp": 8, "pratul": 19, "precis": 8, "precondit": 19, "pred": [6, 8], "predict": [6, 8, 14, 17], "predictions_path": 14, "prefix": [2, 12], "prepar": 14, "preparatori": 15, "prepare_results_for_upload": 14, "primit": 19, "problem": 19, "process": [8, 19], "produc": [8, 17], "progress": [1, 4, 6], "progress_callback": [1, 4], "project": 1, "prompt": 12, "properti": [2, 4, 5, 9, 13, 15, 16], "protocol": 1, "provid": 19, "psnr": 8, "py": [1, 3, 15], "python": [1, 2, 3, 4, 9, 15, 17], "python3": [1, 3, 15], "python_path": [2, 4], "python_vers": 2, "qualiti": [8, 19], "qualnam": 1, "qvec": [5, 16], "qvec2rotmat": [5, 16], "r": [7, 8, 16], "radianc": 19, "rai": [1, 19], "rang": 8, "ratio": 8, "raymethod": [1, 18], "read_cameras_binari": 5, "read_cameras_text": 5, "read_imag": 15, "read_images_binari": 5, "read_images_text": 5, "read_points3d_binari": 5, "read_points3d_text": 5, "readcamerasbinari": 5, "readcamerastext": 5, "readimagesbinari": 5, "readimagestext": 5, "readpoints3dbinari": 5, "readpoints3dtext": 5, "real": 19, "reconstruct": 5, "record": 15, "reduc": 6, "refin": 19, "regist": [9, 11], "registri": 0, "remap_error": 15, "remote_kwarg": [2, 4], "remotecal": 4, "remotemethod": [2, 4], "remoteprocessmethod": [2, 4], "render": [0, 1, 4, 18, 19], "render_all_imag": 10, "render_markdown_dataset_results_t": 11, "render_rai": 1, "replace_cal": 4, "repo": 19, "repositori": 11, "repres": 19, "requir": [6, 17], "required_featur": [1, 5, 13, 16], "result": [0, 6, 18], "results_path": 11, "return": [1, 4, 6, 8, 11, 15, 16], "return_map": 8, "reus": 8, "rgb": 5, "ricardo": 19, "root": 2, "rotat": 16, "rotation_matrix": 16, "rotmat2qvec": 16, "ruilong": 19, "run": 16, "run_extra": 6, "run_extra_metr": 12, "run_viser_view": 16, "runner": 2, "runtimeerror": 15, "salahi": 19, "sam": 19, "sampl": 19, "sampling_mask": [5, 13, 16], "sampling_mask_path": [5, 13, 16], "sattler": 19, "save": [1, 4, 12], "save_depth": 15, "save_imag": 15, "save_it": 12, "scene": 19, "schi": 19, "second": [8, 11], "see": 5, "seed": 1, "sequenc": [1, 8], "set": [6, 8], "setup": [1, 4], "setup_data": 12, "setup_log": [15, 16], "setup_train": [1, 4], "sever": 19, "shallow": 19, "shape1": 15, "shape2": 15, "shared_path": [2, 4], "sheikh": 8, "shell": 18, "should": 8, "siggraph": 5, "sigma": 8, "signal": 8, "similar": 8, "simoncelli": 8, "singl": [5, 17], "site": [1, 3, 15], "situat": 12, "size": 8, "skip": 6, "slower": 19, "small": 8, "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "space": 8, "spec": 9, "specif": 5, "specifi": 15, "speed": 19, "spiral": 19, "splat": [17, 18], "split": [5, 16, 17], "squar": 8, "src": 5, "srgb": [5, 12, 13, 15, 16], "srgb_to_linear": 15, "srinivasan": 19, "ssim": 8, "standard": 8, "start": 1, "start_backend": 4, "static": 4, "std": 5, "step": [1, 4, 15], "str": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16], "string": [5, 12, 15], "structur": 8, "studio": 19, "style": 15, "subset": 5, "support": 19, "supported_camera_model": [1, 5, 10, 13, 16], "supported_method": 9, "t": 19, "tabl": 11, "tancik": 19, "tar": 17, "target": 8, "tensor": [5, 8, 15], "tensorboard": [12, 14, 17], "tensorboard_path": 14, "terminal_width": 5, "terranc": 19, "test": 6, "test_dataset": 12, "test_extra_metr": 6, "test_indic": 5, "tetra": [17, 18], "tetrahedr": 19, "tetrahedra": 19, "text": 15, "tf": 8, "thi": [8, 12, 19], "thoma": 19, "time": [15, 19], "to_apptain": 2, "torchmetr": 8, "torchmetrics_ssim": 8, "torsten": 19, "total": 1, "train": [0, 1, 4, 5, 18, 19], "train_dataset": [1, 4, 12], "train_iter": [1, 4, 12], "train_iteration_rai": 1, "train_split_fract": 5, "trainer": [1, 4, 12], "transact": 8, "transform": [8, 16], "true": [5, 6, 8, 14, 15], "truth": 8, "tupl": [1, 2, 4, 5, 8, 9], "tvec": 5, "type": [0, 1, 2, 4, 9, 11, 12, 17], "unbound": 19, "under": 19, "undistort_camera": 3, "uniform": 8, "unproject": 1, "upload": 14, "upload_result": 0, "url": 5, "us": [5, 6, 8, 12, 15, 17, 19], "usestim": 15, "usp": 5, "util": [0, 12], "v": 17, "valid": [14, 15], "valu": [1, 8, 12], "var": 2, "vector": 16, "verbin": 19, "verbos": [15, 16, 17], "veri": 19, "vi": 17, "viewer": [0, 18], "viridi": 15, "viser": 17, "viserview": 16, "visibl": 8, "visit": 5, "visualize_depth": 15, "void": 5, "vol": 8, "w": [7, 8, 16], "wa": [8, 19], "wandb": [12, 17], "wang": [8, 19], "warp_image_between_camera": 3, "web": 19, "weber": 19, "websit": [11, 17], "well": [12, 19], "when": [8, 12, 17], "where": [5, 6], "which": [15, 17, 19], "width": 5, "window": 8, "with_image_s": 1, "with_supported_camera_model": 10, "world": 19, "wrap": [2, 4], "write_to_logg": 5, "writecamerasbinari": 5, "writecamerastext": 5, "writeimagesbinari": 5, "writeimagestext": 5, "writepoints3dbinari": 5, "writepoints3dtext": 5, "written": 6, "x": 5, "x64": [1, 3, 15], "xnp": [1, 3, 15], "xy": [1, 3, 5], "xyz": [1, 5], "yi": 19, "yield": 15, "you": 5, "z": 8, "zero": 1, "zip": [5, 18], "zip_url": 5, "zipnerf": [17, 19]}, "titles": ["API Reference", "nerfbaselines", "nerfbaselines.backends", "nerfbaselines.cameras", "nerfbaselines.communication", "nerfbaselines.datasets", "nerfbaselines.evaluate", "nerfbaselines.io", "nerfbaselines.metrics", "nerfbaselines.registry", "nerfbaselines.render", "nerfbaselines.results", "nerfbaselines.train", "nerfbaselines.types", "nerfbaselines.upload_results", "nerfbaselines.utils", "nerfbaselines.viewer", "nerfbaselines", "NerfBaselines Documentation", "Methods"], "titleterms": {"360": 19, "api": 0, "apptain": 2, "backend": 2, "blender": 5, "camera": 3, "colmap": 5, "commun": 4, "conda": 2, "dataset": [5, 17], "docker": 2, "document": 18, "download": 17, "evalu": [6, 17], "gaussian": 19, "instant": 19, "io": 7, "method": 19, "metric": 8, "mip": 19, "mipnerf360": 5, "nerf": 19, "nerfbaselin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "nerfstudio": [5, 16, 19], "ngp": 19, "refer": [0, 18], "registri": 9, "render": [10, 17], "result": [11, 17], "shell": 17, "splat": 19, "tetra": 19, "train": [12, 17], "type": 13, "upload_result": 14, "util": 15, "viewer": [16, 17], "viser": 16, "zip": 19}})
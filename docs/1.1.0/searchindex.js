Search.setIndex({"alltitles": {"API Reference": [[1, null]], "Acknowledgements": [[19, "acknowledgements"]], "Adding a spec file": [[0, "adding-a-spec-file"]], "Adding new methods": [[0, null]], "Advanced": [[19, null]], "Apptainer": [[20, "apptainer"]], "Blender": [[18, "blender"]], "COLMAP": [[21, "colmap"]], "CamP": [[21, "camp"]], "Citation": [[19, "citation"]], "Communication with the backend": [[15, "communication-with-the-backend"]], "Conda": [[20, "conda"]], "Contents": [[19, "contents"]], "Creating a new method module": [[0, "creating-a-new-method-module"]], "Creating new Dataset instance": [[17, "creating-new-dataset-instance"]], "Custom dataset loader": [[17, null]], "Customizing the dataset": [[23, "customizing-the-dataset"]], "Datasets": [[18, null]], "Docker": [[20, "docker"]], "GS-W": [[21, "gaussian-splatting-wild"]], "Gaussian Opacity Fields": [[21, "gaussian-opacity-fields"]], "Gaussian Splatting": [[21, "gaussian-splatting"]], "Installation": [[20, null]], "Instant NGP": [[21, "instant-ngp"]], "Introduction": [[0, "introduction"], [15, "introduction"], [23, "introduction"]], "Isolated backends": [[15, null]], "K-Planes": [[21, "kplanes"]], "LLFF": [[18, "llff"]], "Launching the viewer": [[22, "launching-the-viewer"]], "Main features": [[19, "main-features"]], "Methods": [[21, null]], "Mip-NeRF 360": [[18, "mipnerf360"], [21, "mipnerf360"]], "Mip-Splatting": [[21, "mip-splatting"]], "NeRF": [[21, "nerf"]], "NeRF On-the-go": [[21, "nerfonthego"]], "NeRF-W (reimplementation)": [[21, "nerfw-reimpl"]], "NerfBaselines documentation": [[19, null]], "NerfStudio": [[21, "nerfacto"]], "Nerfstudio": [[18, "nerfstudio"]], "Obtaining camera poses": [[23, "obtaining-camera-poses"]], "Photo Tourism": [[18, "phototourism"]], "Pre-requisites (NVIDIA GPU)": [[20, "pre-requisites-nvidia-gpu"]], "Public benchmark results": [[22, "public-benchmark-results"]], "Quickstart": [[22, null]], "Reference": [[19, null]], "Registering the loader": [[17, "registering-the-loader"]], "Registering the method with NerfBaselines": [[0, "registering-the-method-with-nerfbaselines"]], "Release the method": [[0, "release-the-method"]], "Rendering a camera trajectory": [[22, "rendering-a-camera-trajectory"]], "Rendering images": [[22, "rendering-images"]], "SeaThru-NeRF": [[18, "seathru-nerf"], [21, "seathru-nerf"]], "Tanks and Temples": [[18, "tanksandtemples"]], "TensoRF": [[21, "tensorf"]], "Testing the method": [[0, "testing-the-method"]], "Tetra-NeRF": [[21, "tetra-nerf"]], "Training a model": [[22, "training-a-model"]], "Using custom data": [[23, null]], "WildGaussians": [[21, "wild-gaussians"]], "Writing dataset loader function": [[17, "writing-dataset-loader-function"]], "Zip-NeRF": [[21, "zipnerf"]], "build": [[16, "nerfbaselines-web-build"]], "dev": [[16, "nerfbaselines-web-dev"]], "download-dataset": [[16, "nerfbaselines-download-dataset"]], "evaluate": [[16, "nerfbaselines-evaluate"]], "export-demo": [[16, "nerfbaselines-export-demo"]], "fix-checkpoint": [[16, "nerfbaselines-fix-checkpoint"]], "fix-output-artifact": [[16, "nerfbaselines-fix-output-artifact"]], "generate-dataset-results": [[16, "nerfbaselines-generate-dataset-results"]], "install-method": [[16, "nerfbaselines-install-method"]], "nerfbaselines": [[2, null], [16, null]], "nerfbaselines.backends": [[3, null]], "nerfbaselines.backends.protocol_shm_pickle": [[3, "module-nerfbaselines.backends.protocol_shm_pickle"]], "nerfbaselines.backends.protocol_tcp_pickle": [[3, "module-nerfbaselines.backends.protocol_tcp_pickle"]], "nerfbaselines.cameras": [[4, null]], "nerfbaselines.datasets": [[5, null]], "nerfbaselines.datasets.blender": [[5, "module-nerfbaselines.datasets.blender"]], "nerfbaselines.datasets.bundler": [[5, "module-nerfbaselines.datasets.bundler"]], "nerfbaselines.datasets.colmap": [[5, "module-nerfbaselines.datasets.colmap"]], "nerfbaselines.datasets.llff": [[5, "module-nerfbaselines.datasets.llff"]], "nerfbaselines.datasets.mipnerf360": [[5, "module-nerfbaselines.datasets.mipnerf360"]], "nerfbaselines.datasets.nerfonthego": [[5, "module-nerfbaselines.datasets.nerfonthego"]], "nerfbaselines.datasets.nerfstudio": [[5, "module-nerfbaselines.datasets.nerfstudio"]], "nerfbaselines.datasets.phototourism": [[5, "module-nerfbaselines.datasets.phototourism"]], "nerfbaselines.datasets.seathru_nerf": [[5, "module-nerfbaselines.datasets.seathru_nerf"]], "nerfbaselines.datasets.tanksandtemples": [[5, "module-nerfbaselines.datasets.tanksandtemples"]], "nerfbaselines.evaluation": [[6, null]], "nerfbaselines.io": [[7, null]], "nerfbaselines.logging": [[8, null]], "nerfbaselines.metrics": [[9, null]], "nerfbaselines.results": [[10, null]], "nerfbaselines.training": [[11, null]], "nerfbaselines.utils": [[12, null]], "nerfbaselines.viewer": [[13, null]], "nerfbaselines.web": [[14, null]], "render": [[16, "nerfbaselines-render"]], "render-trajectory": [[16, "nerfbaselines-render-trajectory"]], "shell": [[16, "nerfbaselines-shell"]], "test-method": [[16, "nerfbaselines-test-method"]], "train": [[16, "nerfbaselines-train"]], "viewer": [[16, "nerfbaselines-viewer"]], "web": [[16, "nerfbaselines-web"]]}, "docnames": ["adding-new-methods", "api/modules", "api/nerfbaselines", "api/nerfbaselines.backends", "api/nerfbaselines.cameras", "api/nerfbaselines.datasets", "api/nerfbaselines.evaluation", "api/nerfbaselines.io", "api/nerfbaselines.logging", "api/nerfbaselines.metrics", "api/nerfbaselines.results", "api/nerfbaselines.training", "api/nerfbaselines.utils", "api/nerfbaselines.viewer", "api/nerfbaselines.web", "backends", "cli", "custom-dataset-loader", "datasets", "index", "installation", "methods", "quickstart", "using-custom-data"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxext.opengraph": 1}, "filenames": ["adding-new-methods.md", "api/modules.rst", "api/nerfbaselines.rst", "api/nerfbaselines.backends.rst", "api/nerfbaselines.cameras.rst", "api/nerfbaselines.datasets.rst", "api/nerfbaselines.evaluation.rst", "api/nerfbaselines.io.rst", "api/nerfbaselines.logging.rst", "api/nerfbaselines.metrics.rst", "api/nerfbaselines.results.rst", "api/nerfbaselines.training.rst", "api/nerfbaselines.utils.rst", "api/nerfbaselines.viewer.rst", "api/nerfbaselines.web.rst", "backends.md", "cli.rst", "custom-dataset-loader.md", "datasets.md", "index.md", "installation.md", "methods.md", "quickstart.md", "using-custom-data.md"], "indexentries": {"--backend": [[16, "cmdoption-nerfbaselines-export-demo-backend", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [16, "cmdoption-nerfbaselines-install-method-backend", false], [16, "cmdoption-nerfbaselines-render-backend", false], [16, "cmdoption-nerfbaselines-render-trajectory-backend", false], [16, "cmdoption-nerfbaselines-shell-backend", false], [16, "cmdoption-nerfbaselines-test-method-backend", false], [16, "cmdoption-nerfbaselines-train-backend", false], [16, "cmdoption-nerfbaselines-viewer-backend", false]], "--base-path": [[16, "cmdoption-nerfbaselines-web-build-base-path", false]], "--checkpoint": [[16, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [16, "cmdoption-nerfbaselines-render-checkpoint", false], [16, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [16, "cmdoption-nerfbaselines-train-checkpoint", false], [16, "cmdoption-nerfbaselines-viewer-checkpoint", false]], "--data": [[16, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [16, "cmdoption-nerfbaselines-render-data", false], [16, "cmdoption-nerfbaselines-test-method-data", false], [16, "cmdoption-nerfbaselines-train-data", false], [16, "cmdoption-nerfbaselines-viewer-data", false], [16, "cmdoption-nerfbaselines-web-build-data", false], [16, "cmdoption-nerfbaselines-web-dev-data", false]], "--dataset": [[16, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false]], "--datasets": [[16, "cmdoption-nerfbaselines-web-build-datasets", false], [16, "cmdoption-nerfbaselines-web-dev-datasets", false]], "--disable-output-artifact": [[16, "cmdoption-nerfbaselines-train-disable-output-artifact", false]], "--docs": [[16, "cmdoption-nerfbaselines-web-build-docs", false], [16, "cmdoption-nerfbaselines-web-dev-docs", false]], "--eval-all-iters": [[16, "cmdoption-nerfbaselines-train-eval-all-iters", false]], "--eval-few-iters": [[16, "cmdoption-nerfbaselines-train-eval-few-iters", false]], "--force": [[16, "cmdoption-nerfbaselines-fix-output-artifact-force", false], [16, "cmdoption-nerfbaselines-install-method-force", false]], "--force-output-artifact": [[16, "cmdoption-nerfbaselines-train-force-output-artifact", false]], "--full": [[16, "cmdoption-nerfbaselines-test-method-full", false]], "--inplace": [[16, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false]], "--input": [[16, "cmdoption-nerfbaselines-fix-output-artifact-input", false]], "--logger": [[16, "cmdoption-nerfbaselines-train-logger", false]], "--method": [[16, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [16, "cmdoption-nerfbaselines-install-method-method", false], [16, "cmdoption-nerfbaselines-shell-method", false], [16, "cmdoption-nerfbaselines-test-method-method", false], [16, "cmdoption-nerfbaselines-train-method", false]], "--method-links": [[16, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false]], "--new-checkpoint": [[16, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false]], "--output": [[16, "cmdoption-nerfbaselines-download-dataset-o", false], [16, "cmdoption-nerfbaselines-evaluate-o", false], [16, "cmdoption-nerfbaselines-export-demo-o", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [16, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [16, "cmdoption-nerfbaselines-render-output", false], [16, "cmdoption-nerfbaselines-render-trajectory-output", false], [16, "cmdoption-nerfbaselines-train-output", false], [16, "cmdoption-nerfbaselines-web-build-output", false]], "--output-names": [[16, "cmdoption-nerfbaselines-render-trajectory-output-names", false]], "--output-type": [[16, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false]], "--port": [[16, "cmdoption-nerfbaselines-viewer-port", false]], "--presets": [[16, "cmdoption-nerfbaselines-fix-checkpoint-presets", false], [16, "cmdoption-nerfbaselines-test-method-presets", false], [16, "cmdoption-nerfbaselines-train-presets", false]], "--rebuild-checkpoint": [[16, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false]], "--rerun-evaluation": [[16, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false]], "--rerun-render": [[16, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false]], "--resolution": [[16, "cmdoption-nerfbaselines-render-trajectory-resolution", false]], "--results": [[16, "cmdoption-nerfbaselines-generate-dataset-results-results", false]], "--save-iters": [[16, "cmdoption-nerfbaselines-train-save-iters", false]], "--set": [[16, "cmdoption-nerfbaselines-fix-checkpoint-set", false], [16, "cmdoption-nerfbaselines-test-method-set", false], [16, "cmdoption-nerfbaselines-train-set", false]], "--spec": [[16, "cmdoption-nerfbaselines-install-method-spec", false]], "--split": [[16, "cmdoption-nerfbaselines-render-split", false]], "--steps": [[16, "cmdoption-nerfbaselines-test-method-steps", false]], "--trajectory": [[16, "cmdoption-nerfbaselines-render-trajectory-trajectory", false]], "--verbose": [[16, "cmdoption-nerfbaselines-download-dataset-v", false], [16, "cmdoption-nerfbaselines-export-demo-v", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-v", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-v", false], [16, "cmdoption-nerfbaselines-install-method-v", false], [16, "cmdoption-nerfbaselines-render-trajectory-v", false], [16, "cmdoption-nerfbaselines-render-v", false], [16, "cmdoption-nerfbaselines-shell-v", false], [16, "cmdoption-nerfbaselines-test-method-v", false], [16, "cmdoption-nerfbaselines-train-v", false], [16, "cmdoption-nerfbaselines-viewer-v", false]], "-o": [[16, "cmdoption-nerfbaselines-download-dataset-o", false], [16, "cmdoption-nerfbaselines-evaluate-o", false], [16, "cmdoption-nerfbaselines-export-demo-o", false]], "-v": [[16, "cmdoption-nerfbaselines-download-dataset-v", false], [16, "cmdoption-nerfbaselines-export-demo-v", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-v", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-v", false], [16, "cmdoption-nerfbaselines-install-method-v", false], [16, "cmdoption-nerfbaselines-render-trajectory-v", false], [16, "cmdoption-nerfbaselines-render-v", false], [16, "cmdoption-nerfbaselines-shell-v", false], [16, "cmdoption-nerfbaselines-test-method-v", false], [16, "cmdoption-nerfbaselines-train-v", false], [16, "cmdoption-nerfbaselines-viewer-v", false]], "accumulate_metrics() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[5, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[6, "nerfbaselines.evaluation.DefaultEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.evaluationprotocol method)": [[2, "nerfbaselines.EvaluationProtocol.accumulate_metrics", false]], "add_embedding() (nerfbaselines.logger method)": [[2, "nerfbaselines.Logger.add_embedding", false]], "add_embedding() (nerfbaselines.loggerevent method)": [[2, "nerfbaselines.LoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.baselogger method)": [[8, "nerfbaselines.logging.BaseLogger.add_embedding", false]], "add_embedding() (nerfbaselines.logging.baseloggerevent method)": [[8, "nerfbaselines.logging.BaseLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.tensorboardloggerevent method)": [[8, "nerfbaselines.logging.TensorboardLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.wandbloggerevent method)": [[8, "nerfbaselines.logging.WandbLoggerEvent.add_embedding", false]], "add_event() (nerfbaselines.logger method)": [[2, "nerfbaselines.Logger.add_event", false]], "add_event() (nerfbaselines.logging.baselogger method)": [[8, "nerfbaselines.logging.BaseLogger.add_event", false]], "add_event() (nerfbaselines.logging.concatlogger method)": [[8, "nerfbaselines.logging.ConcatLogger.add_event", false]], "add_event() (nerfbaselines.logging.tensorboardlogger method)": [[8, "nerfbaselines.logging.TensorboardLogger.add_event", false]], "add_event() (nerfbaselines.logging.wandblogger method)": [[8, "nerfbaselines.logging.WandbLogger.add_event", false]], "add_histogram() (nerfbaselines.loggerevent method)": [[2, "nerfbaselines.LoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.logging.tensorboardloggerevent method)": [[8, "nerfbaselines.logging.TensorboardLoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.logging.wandbloggerevent method)": [[8, "nerfbaselines.logging.WandbLoggerEvent.add_histogram", false]], "add_hparams() (nerfbaselines.logging.baselogger method)": [[8, "nerfbaselines.logging.BaseLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.concatlogger method)": [[8, "nerfbaselines.logging.ConcatLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.tensorboardlogger method)": [[8, "nerfbaselines.logging.TensorboardLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.wandblogger method)": [[8, "nerfbaselines.logging.WandbLogger.add_hparams", false]], "add_image() (nerfbaselines.logger method)": [[2, "nerfbaselines.Logger.add_image", false]], "add_image() (nerfbaselines.loggerevent method)": [[2, "nerfbaselines.LoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.baselogger method)": [[8, "nerfbaselines.logging.BaseLogger.add_image", false]], "add_image() (nerfbaselines.logging.baseloggerevent method)": [[8, "nerfbaselines.logging.BaseLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.tensorboardloggerevent method)": [[8, "nerfbaselines.logging.TensorboardLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.wandbloggerevent method)": [[8, "nerfbaselines.logging.WandbLoggerEvent.add_image", false]], "add_plot() (nerfbaselines.loggerevent method)": [[2, "nerfbaselines.LoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.logging.baseloggerevent method)": [[8, "nerfbaselines.logging.BaseLoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.logging.wandbloggerevent method)": [[8, "nerfbaselines.logging.WandbLoggerEvent.add_plot", false]], "add_scalar() (nerfbaselines.logger method)": [[2, "nerfbaselines.Logger.add_scalar", false]], "add_scalar() (nerfbaselines.loggerevent method)": [[2, "nerfbaselines.LoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.baselogger method)": [[8, "nerfbaselines.logging.BaseLogger.add_scalar", false]], "add_scalar() (nerfbaselines.logging.baseloggerevent method)": [[8, "nerfbaselines.logging.BaseLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.tensorboardloggerevent method)": [[8, "nerfbaselines.logging.TensorboardLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.wandbloggerevent method)": [[8, "nerfbaselines.logging.WandbLoggerEvent.add_scalar", false]], "add_text() (nerfbaselines.logger method)": [[2, "nerfbaselines.Logger.add_text", false]], "add_text() (nerfbaselines.loggerevent method)": [[2, "nerfbaselines.LoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.baselogger method)": [[8, "nerfbaselines.logging.BaseLogger.add_text", false]], "add_text() (nerfbaselines.logging.baseloggerevent method)": [[8, "nerfbaselines.logging.BaseLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.tensorboardloggerevent method)": [[8, "nerfbaselines.logging.TensorboardLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.wandbloggerevent method)": [[8, "nerfbaselines.logging.WandbLoggerEvent.add_text", false]], "appearance (nerfbaselines.trajectorykeyframe attribute)": [[2, "nerfbaselines.TrajectoryKeyframe.appearance", false]], "appearance_weights (nerfbaselines.trajectoryframe attribute)": [[2, "nerfbaselines.TrajectoryFrame.appearance_weights", false]], "appearances (nerfbaselines.trajectory attribute)": [[2, "nerfbaselines.Trajectory.appearances", false]], "apply() (nerfbaselines.genericcameras method)": [[2, "nerfbaselines.GenericCameras.apply", false]], "apply_colormap() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.apply_colormap", false]], "apply_transform() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.apply_transform", false]], "apptainer (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.apptainer", false]], "apptainerbackend (class in nerfbaselines.backends)": [[3, "nerfbaselines.backends.ApptainerBackend", false]], "apptainerbackendspec (class in nerfbaselines.backends)": [[3, "nerfbaselines.backends.ApptainerBackendSpec", false]], "ascending (nerfbaselines.results.metricinfo attribute)": [[10, "nerfbaselines.results.MetricInfo.ascending", false]], "backend (class in nerfbaselines.backends)": [[3, "nerfbaselines.backends.Backend", false]], "backends_order (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.backends_order", false]], "baselogger (class in nerfbaselines.logging)": [[8, "nerfbaselines.logging.BaseLogger", false]], "baseloggerevent (class in nerfbaselines.logging)": [[8, "nerfbaselines.logging.BaseLoggerEvent", false]], "batch_size (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.batch_size", false]], "build() (in module nerfbaselines.web)": [[14, "nerfbaselines.web.build", false]], "build_evaluation_protocol() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.build_evaluation_protocol", false]], "build_logger() (in module nerfbaselines.training)": [[11, "nerfbaselines.training.build_logger", false]], "build_method_class() (in module nerfbaselines)": [[2, "nerfbaselines.build_method_class", false]], "build_script (nerfbaselines.backends.dockerbackendspec attribute)": [[3, "nerfbaselines.backends.DockerBackendSpec.build_script", false]], "camera_model (nerfbaselines.trajectory attribute)": [[2, "nerfbaselines.Trajectory.camera_model", false]], "camera_model_from_int() (in module nerfbaselines)": [[2, "nerfbaselines.camera_model_from_int", false]], "camera_model_to_int() (in module nerfbaselines)": [[2, "nerfbaselines.camera_model_to_int", false]], "camera_models (nerfbaselines.genericcameras property)": [[2, "nerfbaselines.GenericCameras.camera_models", false]], "cameras (class in nerfbaselines)": [[2, "nerfbaselines.Cameras", false]], "cameras (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.cameras", false]], "cameras (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.cameras", false]], "cancel() (nerfbaselines.utils.cancellationtoken method)": [[12, "nerfbaselines.utils.CancellationToken.cancel", false]], "cancel_if_requested() (nerfbaselines.utils.cancellationtoken method)": [[12, "nerfbaselines.utils.CancellationToken.cancel_if_requested", false]], "cancellationtoken (class in nerfbaselines.utils)": [[12, "nerfbaselines.utils.CancellationToken", false]], "cancelledexception": [[12, "nerfbaselines.utils.CancelledException", false]], "cat() (nerfbaselines.genericcameras class method)": [[2, "nerfbaselines.GenericCameras.cat", false]], "close() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[3, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.close", false]], "close() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[3, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.close", false]], "command": [[16, "cmdoption-nerfbaselines-shell-arg-COMMAND", false]], "compile_dataset_results() (in module nerfbaselines.results)": [[10, "nerfbaselines.results.compile_dataset_results", false]], "compute_metrics() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.compute_metrics", false]], "concatlogger (class in nerfbaselines.logging)": [[8, "nerfbaselines.logging.ConcatLogger", false]], "concatloggerevent (class in nerfbaselines.logging)": [[8, "nerfbaselines.logging.ConcatLoggerEvent", false]], "conda (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.conda", false]], "conda_spec (nerfbaselines.backends.apptainerbackendspec attribute)": [[3, "nerfbaselines.backends.ApptainerBackendSpec.conda_spec", false]], "conda_spec (nerfbaselines.backends.dockerbackendspec attribute)": [[3, "nerfbaselines.backends.DockerBackendSpec.conda_spec", false]], "condabackend (class in nerfbaselines.backends)": [[3, "nerfbaselines.backends.CondaBackend", false]], "condabackendspec (class in nerfbaselines.backends)": [[3, "nerfbaselines.backends.CondaBackendSpec", false]], "connect_worker() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[3, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.connect_worker", false]], "connect_worker() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[3, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.connect_worker", false]], "connectionclosed": [[3, "nerfbaselines.backends.protocol_shm_pickle.ConnectionClosed", false]], "convert_image_dtype() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.convert_image_dtype", false]], "dataset": [[16, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false]], "dataset (class in nerfbaselines)": [[2, "nerfbaselines.Dataset", false]], "dataset_index_select() (in module nerfbaselines.datasets)": [[5, "nerfbaselines.datasets.dataset_index_select", false]], "dataset_load_features() (in module nerfbaselines.datasets)": [[5, "nerfbaselines.datasets.dataset_load_features", false]], "datasetinfo (class in nerfbaselines.results)": [[10, "nerfbaselines.results.DatasetInfo", false]], "datasetloaderspec (class in nerfbaselines)": [[2, "nerfbaselines.DatasetLoaderSpec", false]], "datasetnotfounderror": [[2, "nerfbaselines.DatasetNotFoundError", false]], "datasetspec (class in nerfbaselines)": [[2, "nerfbaselines.DatasetSpec", false]], "datasetspecmetadata (class in nerfbaselines)": [[2, "nerfbaselines.DatasetSpecMetadata", false]], "default_appearance (nerfbaselines.imagesetinterpolationsource attribute)": [[2, "nerfbaselines.ImageSetInterpolationSource.default_appearance", false]], "default_appearance (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[2, "nerfbaselines.KochanekBartelsInterpolationSource.default_appearance", false]], "default_cuda_archs (nerfbaselines.backends.apptainerbackendspec attribute)": [[3, "nerfbaselines.backends.ApptainerBackendSpec.default_cuda_archs", false]], "default_cuda_archs (nerfbaselines.backends.dockerbackendspec attribute)": [[3, "nerfbaselines.backends.DockerBackendSpec.default_cuda_archs", false]], "default_fov (nerfbaselines.imagesetinterpolationsource attribute)": [[2, "nerfbaselines.ImageSetInterpolationSource.default_fov", false]], "default_fov (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[2, "nerfbaselines.KochanekBartelsInterpolationSource.default_fov", false]], "default_metric (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.default_metric", false]], "default_metric (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.default_metric", false]], "default_transition_duration (nerfbaselines.imagesetinterpolationsource attribute)": [[2, "nerfbaselines.ImageSetInterpolationSource.default_transition_duration", false]], "default_transition_duration (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[2, "nerfbaselines.KochanekBartelsInterpolationSource.default_transition_duration", false]], "defaultevaluationprotocol (class in nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.DefaultEvaluationProtocol", false]], "description (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.description", false]], "description (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.description", false]], "description (nerfbaselines.results.metricinfo attribute)": [[10, "nerfbaselines.results.MetricInfo.description", false]], "deserialize_nb_info() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.deserialize_nb_info", false]], "distortion_parameters (nerfbaselines.genericcameras property)": [[2, "nerfbaselines.GenericCameras.distortion_parameters", false]], "dmpix_ssim() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.dmpix_ssim", false]], "docker (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.docker", false]], "dockerbackend (class in nerfbaselines.backends)": [[3, "nerfbaselines.backends.DockerBackend", false]], "dockerbackendspec (class in nerfbaselines.backends)": [[3, "nerfbaselines.backends.DockerBackendSpec", false]], "download_blender_dataset() (in module nerfbaselines.datasets.blender)": [[5, "nerfbaselines.datasets.blender.download_blender_dataset", false]], "download_dataset() (in module nerfbaselines.datasets)": [[5, "nerfbaselines.datasets.download_dataset", false]], "download_dataset_function (nerfbaselines.datasetspec attribute)": [[2, "nerfbaselines.DatasetSpec.download_dataset_function", false]], "download_llff_dataset() (in module nerfbaselines.datasets.llff)": [[5, "nerfbaselines.datasets.llff.download_llff_dataset", false]], "download_mipnerf360_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[5, "nerfbaselines.datasets.mipnerf360.download_mipnerf360_dataset", false]], "download_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.download_nerfstudio_dataset", false]], "download_phototourism_dataset() (in module nerfbaselines.datasets.phototourism)": [[5, "nerfbaselines.datasets.phototourism.download_phototourism_dataset", false]], "download_seathru_nerf_dataset() (in module nerfbaselines.datasets.seathru_nerf)": [[5, "nerfbaselines.datasets.seathru_nerf.download_seathru_nerf_dataset", false]], "download_tanksandtemples_dataset() (in module nerfbaselines.datasets.tanksandtemples)": [[5, "nerfbaselines.datasets.tanksandtemples.download_tanksandtemples_dataset", false]], "downloaddatasetfunction (class in nerfbaselines)": [[2, "nerfbaselines.DownloadDatasetFunction", false]], "embedding (nerfbaselines.optimizeembeddingsoutput attribute)": [[2, "nerfbaselines.OptimizeEmbeddingsOutput.embedding", false]], "embedding (nerfbaselines.trajectoryframeappearance attribute)": [[2, "nerfbaselines.TrajectoryFrameAppearance.embedding", false]], "embedding_train_index (nerfbaselines.trajectoryframeappearance attribute)": [[2, "nerfbaselines.TrajectoryFrameAppearance.embedding_train_index", false]], "environment_name (nerfbaselines.backends.apptainerbackendspec attribute)": [[3, "nerfbaselines.backends.ApptainerBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.condabackendspec attribute)": [[3, "nerfbaselines.backends.CondaBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.dockerbackendspec attribute)": [[3, "nerfbaselines.backends.DockerBackendSpec.environment_name", false]], "eval_all() (in module nerfbaselines.training)": [[11, "nerfbaselines.training.eval_all", false]], "eval_all() (nerfbaselines.training.trainer method)": [[11, "nerfbaselines.training.Trainer.eval_all", false]], "eval_batch_size (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.eval_batch_size", false]], "eval_few() (in module nerfbaselines.training)": [[11, "nerfbaselines.training.eval_few", false]], "eval_few() (nerfbaselines.training.trainer method)": [[11, "nerfbaselines.training.Trainer.eval_few", false]], "evaluate() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.evaluate", false]], "evaluate() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[5, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[6, "nerfbaselines.evaluation.DefaultEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.evaluationprotocol method)": [[2, "nerfbaselines.EvaluationProtocol.evaluate", false]], "evaluation_protocol (nerfbaselines.datasetspec attribute)": [[2, "nerfbaselines.DatasetSpec.evaluation_protocol", false]], "evaluation_protocol_class (nerfbaselines.evaluationprotocolspec attribute)": [[2, "nerfbaselines.EvaluationProtocolSpec.evaluation_protocol_class", false]], "evaluationprotocol (class in nerfbaselines)": [[2, "nerfbaselines.EvaluationProtocol", false]], "evaluationprotocolspec (class in nerfbaselines)": [[2, "nerfbaselines.EvaluationProtocolSpec", false]], "every_iters() (nerfbaselines.utils.indices class method)": [[12, "nerfbaselines.utils.Indices.every_iters", false]], "format_duration() (in module nerfbaselines.results)": [[10, "nerfbaselines.results.format_duration", false]], "format_memory() (in module nerfbaselines.results)": [[10, "nerfbaselines.results.format_memory", false]], "forward_port() (in module nerfbaselines.backends)": [[3, "nerfbaselines.backends.forward_port", false]], "fov (nerfbaselines.trajectorykeyframe attribute)": [[2, "nerfbaselines.TrajectoryKeyframe.fov", false]], "fps (nerfbaselines.trajectory attribute)": [[2, "nerfbaselines.Trajectory.fps", false]], "frames (nerfbaselines.trajectory attribute)": [[2, "nerfbaselines.Trajectory.frames", false]], "genericcameras (class in nerfbaselines)": [[2, "nerfbaselines.GenericCameras", false]], "get_backend() (in module nerfbaselines.backends)": [[3, "nerfbaselines.backends.get_backend", false]], "get_checkpoint_sha() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.get_checkpoint_sha", false]], "get_dataset_info() (in module nerfbaselines.results)": [[10, "nerfbaselines.results.get_dataset_info", false]], "get_dataset_loader_spec() (in module nerfbaselines)": [[2, "nerfbaselines.get_dataset_loader_spec", false]], "get_dataset_spec() (in module nerfbaselines)": [[2, "nerfbaselines.get_dataset_spec", false]], "get_evaluation_protocol_spec() (in module nerfbaselines)": [[2, "nerfbaselines.get_evaluation_protocol_spec", false]], "get_forwarded_ports() (in module nerfbaselines.backends)": [[3, "nerfbaselines.backends.get_forwarded_ports", false]], "get_image_pixels() (in module nerfbaselines.cameras)": [[4, "nerfbaselines.cameras.get_image_pixels", false]], "get_implemented_backends() (in module nerfbaselines.backends)": [[3, "nerfbaselines.backends.get_implemented_backends", false]], "get_info() (nerfbaselines.method method)": [[2, "nerfbaselines.Method.get_info", false]], "get_logger() (nerfbaselines.training.trainer method)": [[11, "nerfbaselines.training.Trainer.get_logger", false]], "get_logger_spec() (in module nerfbaselines)": [[2, "nerfbaselines.get_logger_spec", false]], "get_method_info() (nerfbaselines.method class method)": [[2, "nerfbaselines.Method.get_method_info", false]], "get_method_info_from_spec() (in module nerfbaselines.results)": [[10, "nerfbaselines.results.get_method_info_from_spec", false]], "get_method_sha() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.get_method_sha", false]], "get_method_spec() (in module nerfbaselines)": [[2, "nerfbaselines.get_method_spec", false]], "get_metrics_hash() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.get_metrics_hash", false]], "get_mounts() (in module nerfbaselines.backends)": [[3, "nerfbaselines.backends.get_mounts", false]], "get_name() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[5, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[6, "nerfbaselines.evaluation.DefaultEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.evaluationprotocol method)": [[2, "nerfbaselines.EvaluationProtocol.get_name", false]], "get_predictions_sha() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.get_predictions_sha", false]], "get_presets_and_config_overrides() (in module nerfbaselines.training)": [[11, "nerfbaselines.training.get_presets_and_config_overrides", false]], "get_rays() (in module nerfbaselines.cameras)": [[4, "nerfbaselines.cameras.get_rays", false]], "get_resources_utilization_info() (in module nerfbaselines.training)": [[11, "nerfbaselines.training.get_resources_utilization_info", false]], "get_supported_dataset_loaders() (in module nerfbaselines)": [[2, "nerfbaselines.get_supported_dataset_loaders", false]], "get_supported_datasets() (in module nerfbaselines)": [[2, "nerfbaselines.get_supported_datasets", false]], "get_supported_evaluation_protocols() (in module nerfbaselines)": [[2, "nerfbaselines.get_supported_evaluation_protocols", false]], "get_supported_loggers() (in module nerfbaselines)": [[2, "nerfbaselines.get_supported_loggers", false]], "get_supported_methods() (in module nerfbaselines)": [[2, "nerfbaselines.get_supported_methods", false]], "get_torch_checkpoint_sha() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.get_torch_checkpoint_sha", false]], "get_train_embedding() (nerfbaselines.method method)": [[2, "nerfbaselines.Method.get_train_embedding", false]], "get_transform_and_scale() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.get_transform_and_scale", false]], "get_worker_configuration() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[3, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.get_worker_configuration", false]], "get_worker_configuration() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[3, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.get_worker_configuration", false]], "gpu_memory (nerfbaselines.training.resourcesutilizationinfo attribute)": [[11, "nerfbaselines.training.ResourcesUtilizationInfo.gpu_memory", false]], "gpu_name (nerfbaselines.training.resourcesutilizationinfo attribute)": [[11, "nerfbaselines.training.ResourcesUtilizationInfo.gpu_name", false]], "home_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[3, "nerfbaselines.backends.ApptainerBackendSpec.home_path", false]], "home_path (nerfbaselines.backends.dockerbackendspec attribute)": [[3, "nerfbaselines.backends.DockerBackendSpec.home_path", false]], "hparams (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.hparams", false]], "id (nerfbaselines.datasetloaderspec attribute)": [[2, "nerfbaselines.DatasetLoaderSpec.id", false]], "id (nerfbaselines.datasetspec attribute)": [[2, "nerfbaselines.DatasetSpec.id", false]], "id (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.id", false]], "id (nerfbaselines.evaluationprotocolspec attribute)": [[2, "nerfbaselines.EvaluationProtocolSpec.id", false]], "id (nerfbaselines.loggerspec attribute)": [[2, "nerfbaselines.LoggerSpec.id", false]], "id (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.id", false]], "id (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.id", false]], "id (nerfbaselines.results.metricinfo attribute)": [[10, "nerfbaselines.results.MetricInfo.id", false]], "id (nerfbaselines.results.sceneinfo attribute)": [[10, "nerfbaselines.results.SceneInfo.id", false]], "image (nerfbaselines.backends.apptainerbackendspec attribute)": [[3, "nerfbaselines.backends.ApptainerBackendSpec.image", false]], "image (nerfbaselines.backends.dockerbackendspec attribute)": [[3, "nerfbaselines.backends.DockerBackendSpec.image", false]], "image_paths (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.image_paths", false]], "image_paths (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.image_paths", false]], "image_paths_root (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.image_paths_root", false]], "image_paths_root (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.image_paths_root", false]], "image_size (nerfbaselines.trajectory attribute)": [[2, "nerfbaselines.Trajectory.image_size", false]], "image_sizes (nerfbaselines.genericcameras property)": [[2, "nerfbaselines.GenericCameras.image_sizes", false]], "image_to_srgb() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.image_to_srgb", false]], "images (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.images", false]], "images (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.images", false]], "images_points3d_indices (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.images_points3D_indices", false]], "images_points3d_indices (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.images_points3D_indices", false]], "imagesetinterpolationsource (class in nerfbaselines)": [[2, "nerfbaselines.ImageSetInterpolationSource", false]], "implementation_status (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.implementation_status", false]], "indices (class in nerfbaselines.utils)": [[12, "nerfbaselines.utils.Indices", false]], "install() (nerfbaselines.backends.apptainerbackend method)": [[3, "nerfbaselines.backends.ApptainerBackend.install", false]], "install() (nerfbaselines.backends.backend method)": [[3, "nerfbaselines.backends.Backend.install", false]], "install() (nerfbaselines.backends.condabackend method)": [[3, "nerfbaselines.backends.CondaBackend.install", false]], "install() (nerfbaselines.backends.dockerbackend method)": [[3, "nerfbaselines.backends.DockerBackend.install", false]], "install_script (nerfbaselines.backends.condabackendspec attribute)": [[3, "nerfbaselines.backends.CondaBackendSpec.install_script", false]], "instance_call() (nerfbaselines.backends.backend method)": [[3, "nerfbaselines.backends.Backend.instance_call", false]], "instance_call() (nerfbaselines.backends.simplebackend method)": [[3, "nerfbaselines.backends.SimpleBackend.instance_call", false]], "instance_del() (nerfbaselines.backends.backend method)": [[3, "nerfbaselines.backends.Backend.instance_del", false]], "instance_del() (nerfbaselines.backends.simplebackend method)": [[3, "nerfbaselines.backends.SimpleBackend.instance_del", false]], "interpolate_bilinear() (in module nerfbaselines.cameras)": [[4, "nerfbaselines.cameras.interpolate_bilinear", false]], "interpolation (nerfbaselines.imagesetinterpolationsource attribute)": [[2, "nerfbaselines.ImageSetInterpolationSource.interpolation", false]], "interpolation (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[2, "nerfbaselines.KochanekBartelsInterpolationSource.interpolation", false]], "intrinsics (nerfbaselines.genericcameras property)": [[2, "nerfbaselines.GenericCameras.intrinsics", false]], "intrinsics (nerfbaselines.trajectoryframe attribute)": [[2, "nerfbaselines.TrajectoryFrame.intrinsics", false]], "invert_transform() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.invert_transform", false]], "is_cycle (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[2, "nerfbaselines.KochanekBartelsInterpolationSource.is_cycle", false]], "item() (nerfbaselines.genericcameras method)": [[2, "nerfbaselines.GenericCameras.item", false]], "keyframes (nerfbaselines.imagesetinterpolationsource attribute)": [[2, "nerfbaselines.ImageSetInterpolationSource.keyframes", false]], "keyframes (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[2, "nerfbaselines.KochanekBartelsInterpolationSource.keyframes", false]], "kochanekbartelsinterpolationsource (class in nerfbaselines)": [[2, "nerfbaselines.KochanekBartelsInterpolationSource", false]], "licenses (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.licenses", false]], "licenses (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.licenses", false]], "licensespec (class in nerfbaselines)": [[2, "nerfbaselines.LicenseSpec", false]], "link (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.link", false]], "link (nerfbaselines.outputartifact attribute)": [[2, "nerfbaselines.OutputArtifact.link", false]], "link (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.link", false]], "link (nerfbaselines.results.metricinfo attribute)": [[10, "nerfbaselines.results.MetricInfo.link", false]], "load_blender_dataset() (in module nerfbaselines.datasets.blender)": [[5, "nerfbaselines.datasets.blender.load_blender_dataset", false]], "load_bundler_dataset() (in module nerfbaselines.datasets.bundler)": [[5, "nerfbaselines.datasets.bundler.load_bundler_dataset", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.colmap)": [[5, "nerfbaselines.datasets.colmap.load_colmap_dataset", false]], "load_dataset() (in module nerfbaselines.datasets)": [[5, "nerfbaselines.datasets.load_dataset", false]], "load_dataset_function (nerfbaselines.datasetloaderspec attribute)": [[2, "nerfbaselines.DatasetLoaderSpec.load_dataset_function", false]], "load_llff_dataset() (in module nerfbaselines.datasets.llff)": [[5, "nerfbaselines.datasets.llff.load_llff_dataset", false]], "load_metrics_from_results() (in module nerfbaselines.results)": [[10, "nerfbaselines.results.load_metrics_from_results", false]], "load_mipnerf360_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[5, "nerfbaselines.datasets.mipnerf360.load_mipnerf360_dataset", false]], "load_nerfonthego_dataset() (in module nerfbaselines.datasets.nerfonthego)": [[5, "nerfbaselines.datasets.nerfonthego.load_nerfonthego_dataset", false]], "load_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[5, "nerfbaselines.datasets.nerfstudio.load_nerfstudio_dataset", false]], "load_phototourism_dataset() (in module nerfbaselines.datasets.phototourism)": [[5, "nerfbaselines.datasets.phototourism.load_phototourism_dataset", false]], "load_seathru_nerf_dataset() (in module nerfbaselines.datasets.seathru_nerf)": [[5, "nerfbaselines.datasets.seathru_nerf.load_seathru_nerf_dataset", false]], "load_tanksandtemples_dataset() (in module nerfbaselines.datasets.tanksandtemples)": [[5, "nerfbaselines.datasets.tanksandtemples.load_tanksandtemples_dataset", false]], "load_trajectory() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.load_trajectory", false]], "loaddatasetfunction (class in nerfbaselines)": [[2, "nerfbaselines.LoadDatasetFunction", false]], "loaded_checkpoint (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.loaded_checkpoint", false]], "loaded_step (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.loaded_step", false]], "log_metrics() (in module nerfbaselines.logging)": [[8, "nerfbaselines.logging.log_metrics", false]], "logger (class in nerfbaselines)": [[2, "nerfbaselines.Logger", false]], "logger_class (nerfbaselines.loggerspec attribute)": [[2, "nerfbaselines.LoggerSpec.logger_class", false]], "loggerevent (class in nerfbaselines)": [[2, "nerfbaselines.LoggerEvent", false]], "loggerspec (class in nerfbaselines)": [[2, "nerfbaselines.LoggerSpec", false]], "lpips() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.lpips", false]], "lpips_alex() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.lpips_alex", false]], "lpips_vgg() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.lpips_vgg", false]], "mae() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.mae", false]], "make_image_grid() (in module nerfbaselines.training)": [[11, "nerfbaselines.training.make_image_grid", false]], "memory (nerfbaselines.training.resourcesutilizationinfo attribute)": [[11, "nerfbaselines.training.ResourcesUtilizationInfo.memory", false]], "metadata (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.metadata", false]], "metadata (nerfbaselines.datasetspec attribute)": [[2, "nerfbaselines.DatasetSpec.metadata", false]], "metadata (nerfbaselines.genericcameras property)": [[2, "nerfbaselines.GenericCameras.metadata", false]], "metadata (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.metadata", false]], "metadata (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.metadata", false]], "method (class in nerfbaselines)": [[2, "nerfbaselines.Method", false]], "method_class (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.method_class", false]], "method_id (nerfbaselines.methodinfo attribute)": [[2, "nerfbaselines.MethodInfo.method_id", false]], "method_id (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.method_id", false]], "methodinfo (class in nerfbaselines)": [[2, "nerfbaselines.MethodInfo", false]], "methodspec (class in nerfbaselines)": [[2, "nerfbaselines.MethodSpec", false]], "metricinfo (class in nerfbaselines.results)": [[10, "nerfbaselines.results.MetricInfo", false]], "metrics (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.metrics", false]], "metrics (nerfbaselines.optimizeembeddingsoutput attribute)": [[2, "nerfbaselines.OptimizeEmbeddingsOutput.metrics", false]], "metrics (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.metrics", false]], "metricsaccumulator (class in nerfbaselines.training)": [[11, "nerfbaselines.training.MetricsAccumulator", false]], "modelinfo (class in nerfbaselines)": [[2, "nerfbaselines.ModelInfo", false]], "module": [[2, "module-nerfbaselines", false], [3, "module-nerfbaselines.backends", false], [3, "module-nerfbaselines.backends.protocol_shm_pickle", false], [3, "module-nerfbaselines.backends.protocol_tcp_pickle", false], [4, "module-nerfbaselines.cameras", false], [5, "module-nerfbaselines.datasets", false], [5, "module-nerfbaselines.datasets.blender", false], [5, "module-nerfbaselines.datasets.bundler", false], [5, "module-nerfbaselines.datasets.colmap", false], [5, "module-nerfbaselines.datasets.llff", false], [5, "module-nerfbaselines.datasets.mipnerf360", false], [5, "module-nerfbaselines.datasets.nerfonthego", false], [5, "module-nerfbaselines.datasets.nerfstudio", false], [5, "module-nerfbaselines.datasets.phototourism", false], [5, "module-nerfbaselines.datasets.seathru_nerf", false], [5, "module-nerfbaselines.datasets.tanksandtemples", false], [6, "module-nerfbaselines.evaluation", false], [7, "module-nerfbaselines.io", false], [8, "module-nerfbaselines.logging", false], [9, "module-nerfbaselines.metrics", false], [10, "module-nerfbaselines.results", false], [11, "module-nerfbaselines.training", false], [12, "module-nerfbaselines.utils", false], [13, "module-nerfbaselines.viewer", false], [14, "module-nerfbaselines.web", false]], "mount() (in module nerfbaselines.backends)": [[3, "nerfbaselines.backends.mount", false]], "mse() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.mse", false]], "name (nerfbaselines.backends.apptainerbackend attribute)": [[3, "nerfbaselines.backends.ApptainerBackend.name", false]], "name (nerfbaselines.backends.backend attribute)": [[3, "nerfbaselines.backends.Backend.name", false]], "name (nerfbaselines.backends.condabackend attribute)": [[3, "nerfbaselines.backends.CondaBackend.name", false]], "name (nerfbaselines.backends.dockerbackend attribute)": [[3, "nerfbaselines.backends.DockerBackend.name", false]], "name (nerfbaselines.backends.simplebackend attribute)": [[3, "nerfbaselines.backends.SimpleBackend.name", false]], "name (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.name", false]], "name (nerfbaselines.licensespec attribute)": [[2, "nerfbaselines.LicenseSpec.name", false]], "name (nerfbaselines.renderoutputtype attribute)": [[2, "nerfbaselines.RenderOutputType.name", false]], "name (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.name", false]], "name (nerfbaselines.results.metricinfo attribute)": [[10, "nerfbaselines.results.MetricInfo.name", false]], "name (nerfbaselines.results.sceneinfo attribute)": [[10, "nerfbaselines.results.SceneInfo.name", false]], "nears_fars (nerfbaselines.genericcameras property)": [[2, "nerfbaselines.GenericCameras.nears_fars", false]], "nerfbaselines": [[2, "module-nerfbaselines", false]], "nerfbaselines-download-dataset command line option": [[16, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false], [16, "cmdoption-nerfbaselines-download-dataset-o", false], [16, "cmdoption-nerfbaselines-download-dataset-v", false]], "nerfbaselines-evaluate command line option": [[16, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false], [16, "cmdoption-nerfbaselines-evaluate-o", false]], "nerfbaselines-export-demo command line option": [[16, "cmdoption-nerfbaselines-export-demo-backend", false], [16, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [16, "cmdoption-nerfbaselines-export-demo-o", false], [16, "cmdoption-nerfbaselines-export-demo-v", false]], "nerfbaselines-fix-checkpoint command line option": [[16, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-presets", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-set", false], [16, "cmdoption-nerfbaselines-fix-checkpoint-v", false]], "nerfbaselines-fix-output-artifact command line option": [[16, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-force", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-input", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false], [16, "cmdoption-nerfbaselines-fix-output-artifact-v", false]], "nerfbaselines-generate-dataset-results command line option": [[16, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false], [16, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false], [16, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [16, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false], [16, "cmdoption-nerfbaselines-generate-dataset-results-results", false]], "nerfbaselines-install-method command line option": [[16, "cmdoption-nerfbaselines-install-method-backend", false], [16, "cmdoption-nerfbaselines-install-method-force", false], [16, "cmdoption-nerfbaselines-install-method-method", false], [16, "cmdoption-nerfbaselines-install-method-spec", false], [16, "cmdoption-nerfbaselines-install-method-v", false]], "nerfbaselines-render command line option": [[16, "cmdoption-nerfbaselines-render-backend", false], [16, "cmdoption-nerfbaselines-render-checkpoint", false], [16, "cmdoption-nerfbaselines-render-data", false], [16, "cmdoption-nerfbaselines-render-output", false], [16, "cmdoption-nerfbaselines-render-split", false], [16, "cmdoption-nerfbaselines-render-v", false]], "nerfbaselines-render-trajectory command line option": [[16, "cmdoption-nerfbaselines-render-trajectory-backend", false], [16, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [16, "cmdoption-nerfbaselines-render-trajectory-output", false], [16, "cmdoption-nerfbaselines-render-trajectory-output-names", false], [16, "cmdoption-nerfbaselines-render-trajectory-resolution", false], [16, "cmdoption-nerfbaselines-render-trajectory-trajectory", false], [16, "cmdoption-nerfbaselines-render-trajectory-v", false]], "nerfbaselines-shell command line option": [[16, "cmdoption-nerfbaselines-shell-arg-COMMAND", false], [16, "cmdoption-nerfbaselines-shell-backend", false], [16, "cmdoption-nerfbaselines-shell-method", false], [16, "cmdoption-nerfbaselines-shell-v", false]], "nerfbaselines-test-method command line option": [[16, "cmdoption-nerfbaselines-test-method-backend", false], [16, "cmdoption-nerfbaselines-test-method-data", false], [16, "cmdoption-nerfbaselines-test-method-full", false], [16, "cmdoption-nerfbaselines-test-method-method", false], [16, "cmdoption-nerfbaselines-test-method-presets", false], [16, "cmdoption-nerfbaselines-test-method-set", false], [16, "cmdoption-nerfbaselines-test-method-steps", false], [16, "cmdoption-nerfbaselines-test-method-v", false]], "nerfbaselines-train command line option": [[16, "cmdoption-nerfbaselines-train-backend", false], [16, "cmdoption-nerfbaselines-train-checkpoint", false], [16, "cmdoption-nerfbaselines-train-data", false], [16, "cmdoption-nerfbaselines-train-disable-output-artifact", false], [16, "cmdoption-nerfbaselines-train-eval-all-iters", false], [16, "cmdoption-nerfbaselines-train-eval-few-iters", false], [16, "cmdoption-nerfbaselines-train-force-output-artifact", false], [16, "cmdoption-nerfbaselines-train-logger", false], [16, "cmdoption-nerfbaselines-train-method", false], [16, "cmdoption-nerfbaselines-train-output", false], [16, "cmdoption-nerfbaselines-train-presets", false], [16, "cmdoption-nerfbaselines-train-save-iters", false], [16, "cmdoption-nerfbaselines-train-set", false], [16, "cmdoption-nerfbaselines-train-v", false]], "nerfbaselines-viewer command line option": [[16, "cmdoption-nerfbaselines-viewer-backend", false], [16, "cmdoption-nerfbaselines-viewer-checkpoint", false], [16, "cmdoption-nerfbaselines-viewer-data", false], [16, "cmdoption-nerfbaselines-viewer-port", false], [16, "cmdoption-nerfbaselines-viewer-v", false]], "nerfbaselines-web-build command line option": [[16, "cmdoption-nerfbaselines-web-build-base-path", false], [16, "cmdoption-nerfbaselines-web-build-data", false], [16, "cmdoption-nerfbaselines-web-build-datasets", false], [16, "cmdoption-nerfbaselines-web-build-docs", false], [16, "cmdoption-nerfbaselines-web-build-output", false]], "nerfbaselines-web-dev command line option": [[16, "cmdoption-nerfbaselines-web-dev-data", false], [16, "cmdoption-nerfbaselines-web-dev-datasets", false], [16, "cmdoption-nerfbaselines-web-dev-docs", false]], "nerfbaselines.backends": [[3, "module-nerfbaselines.backends", false]], "nerfbaselines.backends.protocol_shm_pickle": [[3, "module-nerfbaselines.backends.protocol_shm_pickle", false]], "nerfbaselines.backends.protocol_tcp_pickle": [[3, "module-nerfbaselines.backends.protocol_tcp_pickle", false]], "nerfbaselines.cameras": [[4, "module-nerfbaselines.cameras", false]], "nerfbaselines.datasets": [[5, "module-nerfbaselines.datasets", false]], "nerfbaselines.datasets.blender": [[5, "module-nerfbaselines.datasets.blender", false]], "nerfbaselines.datasets.bundler": [[5, "module-nerfbaselines.datasets.bundler", false]], "nerfbaselines.datasets.colmap": [[5, "module-nerfbaselines.datasets.colmap", false]], "nerfbaselines.datasets.llff": [[5, "module-nerfbaselines.datasets.llff", false]], "nerfbaselines.datasets.mipnerf360": [[5, "module-nerfbaselines.datasets.mipnerf360", false]], "nerfbaselines.datasets.nerfonthego": [[5, "module-nerfbaselines.datasets.nerfonthego", false]], "nerfbaselines.datasets.nerfstudio": [[5, "module-nerfbaselines.datasets.nerfstudio", false]], "nerfbaselines.datasets.phototourism": [[5, "module-nerfbaselines.datasets.phototourism", false]], "nerfbaselines.datasets.seathru_nerf": [[5, "module-nerfbaselines.datasets.seathru_nerf", false]], "nerfbaselines.datasets.tanksandtemples": [[5, "module-nerfbaselines.datasets.tanksandtemples", false]], "nerfbaselines.evaluation": [[6, "module-nerfbaselines.evaluation", false]], "nerfbaselines.io": [[7, "module-nerfbaselines.io", false]], "nerfbaselines.logging": [[8, "module-nerfbaselines.logging", false]], "nerfbaselines.metrics": [[9, "module-nerfbaselines.metrics", false]], "nerfbaselines.results": [[10, "module-nerfbaselines.results", false]], "nerfbaselines.training": [[11, "module-nerfbaselines.training", false]], "nerfbaselines.utils": [[12, "module-nerfbaselines.utils", false]], "nerfbaselines.viewer": [[13, "module-nerfbaselines.viewer", false]], "nerfbaselines.web": [[14, "module-nerfbaselines.web", false]], "nerfevaluationprotocol (class in nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.NerfEvaluationProtocol", false]], "nerfwevaluationprotocol (class in nerfbaselines.datasets.phototourism)": [[5, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol", false]], "new_cameras() (in module nerfbaselines)": [[2, "nerfbaselines.new_cameras", false]], "new_dataset() (in module nerfbaselines)": [[2, "nerfbaselines.new_dataset", false]], "new_nb_info() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.new_nb_info", false]], "num_iterations (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.num_iterations", false]], "num_iterations (nerfbaselines.training.trainer property)": [[11, "nerfbaselines.training.Trainer.num_iterations", false]], "numpy_from_base64() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.numpy_from_base64", false]], "numpy_to_base64() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.numpy_to_base64", false]], "open_any() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.open_any", false]], "open_any_directory() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.open_any_directory", false]], "optimize_embeddings() (nerfbaselines.method method)": [[2, "nerfbaselines.Method.optimize_embeddings", false]], "optimizeembeddingsoutput (class in nerfbaselines)": [[2, "nerfbaselines.OptimizeEmbeddingsOutput", false]], "output_artifacts (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.output_artifacts", false]], "output_type_dtypes (nerfbaselines.renderoptions attribute)": [[2, "nerfbaselines.RenderOptions.output_type_dtypes", false]], "outputartifact (class in nerfbaselines)": [[2, "nerfbaselines.OutputArtifact", false]], "outputs (nerfbaselines.renderoptions attribute)": [[2, "nerfbaselines.RenderOptions.outputs", false]], "pad_poses() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.pad_poses", false]], "padded_stack() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.padded_stack", false]], "paper_authors (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.paper_authors", false]], "paper_authors (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.paper_authors", false]], "paper_link (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.paper_link", false]], "paper_link (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.paper_link", false]], "paper_title (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.paper_title", false]], "paper_title (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.paper_title", false]], "path_is_video() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.path_is_video", false]], "points3d_rgb (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.points3D_rgb", false]], "points3d_xyz (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.points3D_xyz", false]], "pop() (nerfbaselines.training.metricsaccumulator method)": [[11, "nerfbaselines.training.MetricsAccumulator.pop", false]], "pose (nerfbaselines.trajectoryframe attribute)": [[2, "nerfbaselines.TrajectoryFrame.pose", false]], "pose (nerfbaselines.trajectorykeyframe attribute)": [[2, "nerfbaselines.TrajectoryKeyframe.pose", false]], "poses (nerfbaselines.genericcameras property)": [[2, "nerfbaselines.GenericCameras.poses", false]], "predictions": [[16, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false]], "presets (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.presets", false]], "project() (in module nerfbaselines.cameras)": [[4, "nerfbaselines.cameras.project", false]], "protocol_name (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol property)": [[3, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.protocol_name", false]], "protocol_name (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol property)": [[3, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.protocol_name", false]], "psnr() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.psnr", false]], "python_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[3, "nerfbaselines.backends.ApptainerBackendSpec.python_path", false]], "python_path (nerfbaselines.backends.dockerbackendspec attribute)": [[3, "nerfbaselines.backends.DockerBackendSpec.python_path", false]], "python_version (nerfbaselines.backends.condabackendspec attribute)": [[3, "nerfbaselines.backends.CondaBackendSpec.python_version", false]], "quaternion_conjugate() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.quaternion_conjugate", false]], "quaternion_multiply() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.quaternion_multiply", false]], "quaternion_to_rotation_matrix() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.quaternion_to_rotation_matrix", false]], "read_image() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.read_image", false]], "receive() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[3, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.receive", false]], "receive() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[3, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.receive", false]], "register() (in module nerfbaselines)": [[2, "nerfbaselines.register", false]], "render() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[5, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.render", false]], "render() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[6, "nerfbaselines.evaluation.DefaultEvaluationProtocol.render", false]], "render() (nerfbaselines.evaluationprotocol method)": [[2, "nerfbaselines.EvaluationProtocol.render", false]], "render() (nerfbaselines.method method)": [[2, "nerfbaselines.Method.render", false]], "render_all_images() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.render_all_images", false]], "render_frames() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.render_frames", false]], "render_markdown_dataset_results_table() (in module nerfbaselines.results)": [[10, "nerfbaselines.results.render_markdown_dataset_results_table", false]], "render_output (nerfbaselines.optimizeembeddingsoutput attribute)": [[2, "nerfbaselines.OptimizeEmbeddingsOutput.render_output", false]], "renderoptions (class in nerfbaselines)": [[2, "nerfbaselines.RenderOptions", false]], "renderoutputtype (class in nerfbaselines)": [[2, "nerfbaselines.RenderOutputType", false]], "replace() (nerfbaselines.genericcameras method)": [[2, "nerfbaselines.GenericCameras.replace", false]], "replace_user (nerfbaselines.backends.dockerbackendspec attribute)": [[3, "nerfbaselines.backends.DockerBackendSpec.replace_user", false]], "required_features (nerfbaselines.methodinfo attribute)": [[2, "nerfbaselines.MethodInfo.required_features", false]], "required_features (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.required_features", false]], "required_features (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.required_features", false]], "resourcesutilizationinfo (class in nerfbaselines.training)": [[11, "nerfbaselines.training.ResourcesUtilizationInfo", false]], "rotate_spherical_harmonics() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.rotate_spherical_harmonics", false]], "rotation_matrix_to_quaternion() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.rotation_matrix_to_quaternion", false]], "run_inside_eval_container() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.run_inside_eval_container", false]], "run_on_host() (in module nerfbaselines.backends)": [[3, "nerfbaselines.backends.run_on_host", false]], "run_viser_viewer() (in module nerfbaselines.viewer)": [[13, "nerfbaselines.viewer.run_viser_viewer", false]], "sampling_mask_paths (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.sampling_mask_paths", false]], "sampling_mask_paths (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.sampling_mask_paths", false]], "sampling_mask_paths_root (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.sampling_mask_paths_root", false]], "sampling_mask_paths_root (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.sampling_mask_paths_root", false]], "sampling_masks (nerfbaselines.dataset attribute)": [[2, "nerfbaselines.Dataset.sampling_masks", false]], "sampling_masks (nerfbaselines.unloadeddataset attribute)": [[2, "nerfbaselines.UnloadedDataset.sampling_masks", false]], "save() (nerfbaselines.method method)": [[2, "nerfbaselines.Method.save", false]], "save() (nerfbaselines.training.trainer method)": [[11, "nerfbaselines.training.Trainer.save", false]], "save_cameras_npz() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.save_cameras_npz", false]], "save_depth() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.save_depth", false]], "save_evaluation_results() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.save_evaluation_results", false]], "save_image() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.save_image", false]], "save_output_artifact() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.save_output_artifact", false]], "save_predictions() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.save_predictions", false]], "save_trajectory() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.save_trajectory", false]], "sceneinfo (class in nerfbaselines.results)": [[10, "nerfbaselines.results.SceneInfo", false]], "scenes (nerfbaselines.datasetspecmetadata attribute)": [[2, "nerfbaselines.DatasetSpecMetadata.scenes", false]], "scenes (nerfbaselines.results.datasetinfo attribute)": [[10, "nerfbaselines.results.DatasetInfo.scenes", false]], "send() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[3, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.send", false]], "send() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[3, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.send", false]], "serialize_evaluation_results() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.serialize_evaluation_results", false]], "serialize_nb_info() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.serialize_nb_info", false]], "sharedmemoryprotocol (class in nerfbaselines.backends.protocol_shm_pickle)": [[3, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol", false]], "shell() (nerfbaselines.backends.apptainerbackend method)": [[3, "nerfbaselines.backends.ApptainerBackend.shell", false]], "shell() (nerfbaselines.backends.backend method)": [[3, "nerfbaselines.backends.Backend.shell", false]], "shell() (nerfbaselines.backends.condabackend method)": [[3, "nerfbaselines.backends.CondaBackend.shell", false]], "shell() (nerfbaselines.backends.dockerbackend method)": [[3, "nerfbaselines.backends.DockerBackend.shell", false]], "simplebackend (class in nerfbaselines.backends)": [[3, "nerfbaselines.backends.SimpleBackend", false]], "source (nerfbaselines.trajectory attribute)": [[2, "nerfbaselines.Trajectory.source", false]], "ssim() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.ssim", false]], "start_dev_server() (in module nerfbaselines.web)": [[14, "nerfbaselines.web.start_dev_server", false]], "start_host() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[3, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.start_host", false]], "start_host() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[3, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.start_host", false]], "static_call() (nerfbaselines.backends.backend method)": [[3, "nerfbaselines.backends.Backend.static_call", false]], "static_call() (nerfbaselines.backends.simplebackend method)": [[3, "nerfbaselines.backends.SimpleBackend.static_call", false]], "supported_camera_models (nerfbaselines.methodinfo attribute)": [[2, "nerfbaselines.MethodInfo.supported_camera_models", false]], "supported_camera_models (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.supported_camera_models", false]], "supported_camera_models (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.supported_camera_models", false]], "supported_outputs (nerfbaselines.methodinfo attribute)": [[2, "nerfbaselines.MethodInfo.supported_outputs", false]], "supported_outputs (nerfbaselines.methodspec attribute)": [[2, "nerfbaselines.MethodSpec.supported_outputs", false]], "supported_outputs (nerfbaselines.modelinfo attribute)": [[2, "nerfbaselines.ModelInfo.supported_outputs", false]], "tcppickleprotocol (class in nerfbaselines.backends.protocol_tcp_pickle)": [[3, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol", false]], "tension (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[2, "nerfbaselines.KochanekBartelsInterpolationSource.tension", false]], "tensorboardlogger (class in nerfbaselines.logging)": [[8, "nerfbaselines.logging.TensorboardLogger", false]], "tensorboardloggerevent (class in nerfbaselines.logging)": [[8, "nerfbaselines.logging.TensorboardLoggerEvent", false]], "torchmetrics_ssim() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.torchmetrics_ssim", false]], "train() (nerfbaselines.training.trainer method)": [[11, "nerfbaselines.training.Trainer.train", false]], "train_iteration() (nerfbaselines.method method)": [[2, "nerfbaselines.Method.train_iteration", false]], "train_iteration() (nerfbaselines.training.trainer method)": [[11, "nerfbaselines.training.Trainer.train_iteration", false]], "trainer (class in nerfbaselines.training)": [[11, "nerfbaselines.training.Trainer", false]], "trajectory (class in nerfbaselines)": [[2, "nerfbaselines.Trajectory", false]], "trajectory_get_cameras() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.trajectory_get_cameras", false]], "trajectory_get_embeddings() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.trajectory_get_embeddings", false]], "trajectoryframe (class in nerfbaselines)": [[2, "nerfbaselines.TrajectoryFrame", false]], "trajectoryframeappearance (class in nerfbaselines)": [[2, "nerfbaselines.TrajectoryFrameAppearance", false]], "trajectorykeyframe (class in nerfbaselines)": [[2, "nerfbaselines.TrajectoryKeyframe", false]], "transition_duration (nerfbaselines.trajectorykeyframe attribute)": [[2, "nerfbaselines.TrajectoryKeyframe.transition_duration", false]], "type (nerfbaselines.imagesetinterpolationsource attribute)": [[2, "nerfbaselines.ImageSetInterpolationSource.type", false]], "type (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[2, "nerfbaselines.KochanekBartelsInterpolationSource.type", false]], "type (nerfbaselines.renderoutputtype attribute)": [[2, "nerfbaselines.RenderOutputType.type", false]], "undistort_camera() (in module nerfbaselines.cameras)": [[4, "nerfbaselines.cameras.undistort_camera", false]], "unloadeddataset (class in nerfbaselines)": [[2, "nerfbaselines.UnloadedDataset", false]], "unpad_poses() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.unpad_poses", false]], "unproject() (in module nerfbaselines.cameras)": [[4, "nerfbaselines.cameras.unproject", false]], "update() (nerfbaselines.training.metricsaccumulator method)": [[11, "nerfbaselines.training.MetricsAccumulator.update", false]], "url (nerfbaselines.licensespec attribute)": [[2, "nerfbaselines.LicenseSpec.url", false]], "visualize_depth() (in module nerfbaselines.utils)": [[12, "nerfbaselines.utils.visualize_depth", false]], "wait_for_worker() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[3, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.wait_for_worker", false]], "wait_for_worker() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[3, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.wait_for_worker", false]], "wandblogger (class in nerfbaselines.logging)": [[8, "nerfbaselines.logging.WandbLogger", false]], "wandbloggerevent (class in nerfbaselines.logging)": [[8, "nerfbaselines.logging.WandbLoggerEvent", false]], "warp_image_between_cameras() (in module nerfbaselines.cameras)": [[4, "nerfbaselines.cameras.warp_image_between_cameras", false]], "wget() (in module nerfbaselines.io)": [[7, "nerfbaselines.io.wget", false]], "with_supported_camera_models() (in module nerfbaselines.evaluation)": [[6, "nerfbaselines.evaluation.with_supported_camera_models", false]]}, "objects": {"": [[2, 0, 0, "-", "nerfbaselines"]], "nerfbaselines": [[2, 1, 1, "", "Cameras"], [2, 1, 1, "", "Dataset"], [2, 1, 1, "", "DatasetLoaderSpec"], [2, 3, 1, "", "DatasetNotFoundError"], [2, 1, 1, "", "DatasetSpec"], [2, 1, 1, "", "DatasetSpecMetadata"], [2, 1, 1, "", "DownloadDatasetFunction"], [2, 1, 1, "", "EvaluationProtocol"], [2, 1, 1, "", "EvaluationProtocolSpec"], [2, 1, 1, "", "GenericCameras"], [2, 1, 1, "", "ImageSetInterpolationSource"], [2, 1, 1, "", "KochanekBartelsInterpolationSource"], [2, 1, 1, "", "LicenseSpec"], [2, 1, 1, "", "LoadDatasetFunction"], [2, 1, 1, "", "Logger"], [2, 1, 1, "", "LoggerEvent"], [2, 1, 1, "", "LoggerSpec"], [2, 1, 1, "", "Method"], [2, 1, 1, "", "MethodInfo"], [2, 1, 1, "", "MethodSpec"], [2, 1, 1, "", "ModelInfo"], [2, 1, 1, "", "OptimizeEmbeddingsOutput"], [2, 1, 1, "", "OutputArtifact"], [2, 1, 1, "", "RenderOptions"], [2, 1, 1, "", "RenderOutputType"], [2, 1, 1, "", "Trajectory"], [2, 1, 1, "", "TrajectoryFrame"], [2, 1, 1, "", "TrajectoryFrameAppearance"], [2, 1, 1, "", "TrajectoryKeyframe"], [2, 1, 1, "", "UnloadedDataset"], [3, 0, 0, "-", "backends"], [2, 6, 1, "", "build_method_class"], [2, 6, 1, "", "camera_model_from_int"], [2, 6, 1, "", "camera_model_to_int"], [4, 0, 0, "-", "cameras"], [5, 0, 0, "-", "datasets"], [6, 0, 0, "-", "evaluation"], [2, 6, 1, "", "get_dataset_loader_spec"], [2, 6, 1, "", "get_dataset_spec"], [2, 6, 1, "", "get_evaluation_protocol_spec"], [2, 6, 1, "", "get_logger_spec"], [2, 6, 1, "", "get_method_spec"], [2, 6, 1, "", "get_supported_dataset_loaders"], [2, 6, 1, "", "get_supported_datasets"], [2, 6, 1, "", "get_supported_evaluation_protocols"], [2, 6, 1, "", "get_supported_loggers"], [2, 6, 1, "", "get_supported_methods"], [7, 0, 0, "-", "io"], [8, 0, 0, "-", "logging"], [9, 0, 0, "-", "metrics"], [2, 6, 1, "", "new_cameras"], [2, 6, 1, "", "new_dataset"], [2, 6, 1, "", "register"], [10, 0, 0, "-", "results"], [11, 0, 0, "-", "training"], [12, 0, 0, "-", "utils"], [13, 0, 0, "-", "viewer"], [14, 0, 0, "-", "web"]], "nerfbaselines-download-dataset": [[16, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "--output"], [16, 7, 1, "cmdoption-nerfbaselines-download-dataset-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "-o"], [16, 7, 1, "cmdoption-nerfbaselines-download-dataset-v", "-v"], [16, 7, 1, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", "DATASET"]], "nerfbaselines-evaluate": [[16, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "--output"], [16, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "-o"], [16, 7, 1, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", "PREDICTIONS"]], "nerfbaselines-export-demo": [[16, 7, 1, "cmdoption-nerfbaselines-export-demo-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-export-demo-checkpoint", "--checkpoint"], [16, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "--output"], [16, 7, 1, "cmdoption-nerfbaselines-export-demo-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "-o"], [16, 7, 1, "cmdoption-nerfbaselines-export-demo-v", "-v"]], "nerfbaselines-fix-checkpoint": [[16, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", "--checkpoint"], [16, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-data", "--data"], [16, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-method", "--method"], [16, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", "--new-checkpoint"], [16, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-presets", "--presets"], [16, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-set", "--set"], [16, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-v", "-v"]], "nerfbaselines-fix-output-artifact": [[16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-data", "--data"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-force", "--force"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-inplace", "--inplace"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-input", "--input"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-method", "--method"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-output", "--output"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", "--rebuild-checkpoint"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", "--rerun-evaluation"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", "--rerun-render"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-v", "-v"]], "nerfbaselines-generate-dataset-results": [[16, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-dataset", "--dataset"], [16, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-method-links", "--method-links"], [16, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output", "--output"], [16, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output-type", "--output-type"], [16, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-results", "--results"]], "nerfbaselines-install-method": [[16, 7, 1, "cmdoption-nerfbaselines-install-method-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-install-method-force", "--force"], [16, 7, 1, "cmdoption-nerfbaselines-install-method-method", "--method"], [16, 7, 1, "cmdoption-nerfbaselines-install-method-spec", "--spec"], [16, 7, 1, "cmdoption-nerfbaselines-install-method-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-install-method-v", "-v"]], "nerfbaselines-render": [[16, 7, 1, "cmdoption-nerfbaselines-render-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-render-checkpoint", "--checkpoint"], [16, 7, 1, "cmdoption-nerfbaselines-render-data", "--data"], [16, 7, 1, "cmdoption-nerfbaselines-render-output", "--output"], [16, 7, 1, "cmdoption-nerfbaselines-render-split", "--split"], [16, 7, 1, "cmdoption-nerfbaselines-render-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-render-v", "-v"]], "nerfbaselines-render-trajectory": [[16, 7, 1, "cmdoption-nerfbaselines-render-trajectory-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-render-trajectory-checkpoint", "--checkpoint"], [16, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output", "--output"], [16, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output-names", "--output-names"], [16, 7, 1, "cmdoption-nerfbaselines-render-trajectory-resolution", "--resolution"], [16, 7, 1, "cmdoption-nerfbaselines-render-trajectory-trajectory", "--trajectory"], [16, 7, 1, "cmdoption-nerfbaselines-render-trajectory-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-render-trajectory-v", "-v"]], "nerfbaselines-shell": [[16, 7, 1, "cmdoption-nerfbaselines-shell-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-shell-method", "--method"], [16, 7, 1, "cmdoption-nerfbaselines-shell-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-shell-v", "-v"], [16, 7, 1, "cmdoption-nerfbaselines-shell-arg-COMMAND", "COMMAND"]], "nerfbaselines-test-method": [[16, 7, 1, "cmdoption-nerfbaselines-test-method-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-test-method-data", "--data"], [16, 7, 1, "cmdoption-nerfbaselines-test-method-full", "--full"], [16, 7, 1, "cmdoption-nerfbaselines-test-method-method", "--method"], [16, 7, 1, "cmdoption-nerfbaselines-test-method-presets", "--presets"], [16, 7, 1, "cmdoption-nerfbaselines-test-method-set", "--set"], [16, 7, 1, "cmdoption-nerfbaselines-test-method-steps", "--steps"], [16, 7, 1, "cmdoption-nerfbaselines-test-method-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-test-method-v", "-v"]], "nerfbaselines-train": [[16, 7, 1, "cmdoption-nerfbaselines-train-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-train-checkpoint", "--checkpoint"], [16, 7, 1, "cmdoption-nerfbaselines-train-data", "--data"], [16, 7, 1, "cmdoption-nerfbaselines-train-disable-output-artifact", "--disable-output-artifact"], [16, 7, 1, "cmdoption-nerfbaselines-train-eval-all-iters", "--eval-all-iters"], [16, 7, 1, "cmdoption-nerfbaselines-train-eval-few-iters", "--eval-few-iters"], [16, 7, 1, "cmdoption-nerfbaselines-train-force-output-artifact", "--force-output-artifact"], [16, 7, 1, "cmdoption-nerfbaselines-train-logger", "--logger"], [16, 7, 1, "cmdoption-nerfbaselines-train-method", "--method"], [16, 7, 1, "cmdoption-nerfbaselines-train-output", "--output"], [16, 7, 1, "cmdoption-nerfbaselines-train-presets", "--presets"], [16, 7, 1, "cmdoption-nerfbaselines-train-save-iters", "--save-iters"], [16, 7, 1, "cmdoption-nerfbaselines-train-set", "--set"], [16, 7, 1, "cmdoption-nerfbaselines-train-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-train-v", "-v"]], "nerfbaselines-viewer": [[16, 7, 1, "cmdoption-nerfbaselines-viewer-backend", "--backend"], [16, 7, 1, "cmdoption-nerfbaselines-viewer-checkpoint", "--checkpoint"], [16, 7, 1, "cmdoption-nerfbaselines-viewer-data", "--data"], [16, 7, 1, "cmdoption-nerfbaselines-viewer-port", "--port"], [16, 7, 1, "cmdoption-nerfbaselines-viewer-v", "--verbose"], [16, 7, 1, "cmdoption-nerfbaselines-viewer-v", "-v"]], "nerfbaselines-web-build": [[16, 7, 1, "cmdoption-nerfbaselines-web-build-base-path", "--base-path"], [16, 7, 1, "cmdoption-nerfbaselines-web-build-data", "--data"], [16, 7, 1, "cmdoption-nerfbaselines-web-build-datasets", "--datasets"], [16, 7, 1, "cmdoption-nerfbaselines-web-build-docs", "--docs"], [16, 7, 1, "cmdoption-nerfbaselines-web-build-output", "--output"]], "nerfbaselines-web-dev": [[16, 7, 1, "cmdoption-nerfbaselines-web-dev-data", "--data"], [16, 7, 1, "cmdoption-nerfbaselines-web-dev-datasets", "--datasets"], [16, 7, 1, "cmdoption-nerfbaselines-web-dev-docs", "--docs"]], "nerfbaselines.Dataset": [[2, 2, 1, "", "cameras"], [2, 2, 1, "", "image_paths"], [2, 2, 1, "", "image_paths_root"], [2, 2, 1, "", "images"], [2, 2, 1, "", "images_points3D_indices"], [2, 2, 1, "", "metadata"], [2, 2, 1, "", "points3D_rgb"], [2, 2, 1, "", "points3D_xyz"], [2, 2, 1, "", "sampling_mask_paths"], [2, 2, 1, "", "sampling_mask_paths_root"], [2, 2, 1, "", "sampling_masks"]], "nerfbaselines.DatasetLoaderSpec": [[2, 2, 1, "", "id"], [2, 2, 1, "", "load_dataset_function"]], "nerfbaselines.DatasetSpec": [[2, 2, 1, "", "download_dataset_function"], [2, 2, 1, "", "evaluation_protocol"], [2, 2, 1, "", "id"], [2, 2, 1, "", "metadata"]], "nerfbaselines.DatasetSpecMetadata": [[2, 2, 1, "", "default_metric"], [2, 2, 1, "", "description"], [2, 2, 1, "", "id"], [2, 2, 1, "", "licenses"], [2, 2, 1, "", "link"], [2, 2, 1, "", "metrics"], [2, 2, 1, "", "name"], [2, 2, 1, "", "paper_authors"], [2, 2, 1, "", "paper_link"], [2, 2, 1, "", "paper_title"], [2, 2, 1, "", "scenes"]], "nerfbaselines.EvaluationProtocol": [[2, 4, 1, "", "accumulate_metrics"], [2, 4, 1, "", "evaluate"], [2, 4, 1, "", "get_name"], [2, 4, 1, "", "render"]], "nerfbaselines.EvaluationProtocolSpec": [[2, 2, 1, "", "evaluation_protocol_class"], [2, 2, 1, "", "id"]], "nerfbaselines.GenericCameras": [[2, 4, 1, "", "apply"], [2, 5, 1, "", "camera_models"], [2, 4, 1, "", "cat"], [2, 5, 1, "", "distortion_parameters"], [2, 5, 1, "", "image_sizes"], [2, 5, 1, "", "intrinsics"], [2, 4, 1, "", "item"], [2, 5, 1, "", "metadata"], [2, 5, 1, "", "nears_fars"], [2, 5, 1, "", "poses"], [2, 4, 1, "", "replace"]], "nerfbaselines.ImageSetInterpolationSource": [[2, 2, 1, "", "default_appearance"], [2, 2, 1, "", "default_fov"], [2, 2, 1, "", "default_transition_duration"], [2, 2, 1, "", "interpolation"], [2, 2, 1, "", "keyframes"], [2, 2, 1, "", "type"]], "nerfbaselines.KochanekBartelsInterpolationSource": [[2, 2, 1, "", "default_appearance"], [2, 2, 1, "", "default_fov"], [2, 2, 1, "", "default_transition_duration"], [2, 2, 1, "", "interpolation"], [2, 2, 1, "", "is_cycle"], [2, 2, 1, "", "keyframes"], [2, 2, 1, "", "tension"], [2, 2, 1, "", "type"]], "nerfbaselines.LicenseSpec": [[2, 2, 1, "", "name"], [2, 2, 1, "", "url"]], "nerfbaselines.Logger": [[2, 4, 1, "", "add_embedding"], [2, 4, 1, "", "add_event"], [2, 4, 1, "", "add_image"], [2, 4, 1, "", "add_scalar"], [2, 4, 1, "", "add_text"]], "nerfbaselines.LoggerEvent": [[2, 4, 1, "", "add_embedding"], [2, 4, 1, "", "add_histogram"], [2, 4, 1, "", "add_image"], [2, 4, 1, "", "add_plot"], [2, 4, 1, "", "add_scalar"], [2, 4, 1, "", "add_text"]], "nerfbaselines.LoggerSpec": [[2, 2, 1, "", "id"], [2, 2, 1, "", "logger_class"]], "nerfbaselines.Method": [[2, 4, 1, "", "get_info"], [2, 4, 1, "", "get_method_info"], [2, 4, 1, "", "get_train_embedding"], [2, 4, 1, "", "optimize_embeddings"], [2, 4, 1, "", "render"], [2, 4, 1, "", "save"], [2, 4, 1, "", "train_iteration"]], "nerfbaselines.MethodInfo": [[2, 2, 1, "", "method_id"], [2, 2, 1, "", "required_features"], [2, 2, 1, "", "supported_camera_models"], [2, 2, 1, "", "supported_outputs"]], "nerfbaselines.MethodSpec": [[2, 2, 1, "", "apptainer"], [2, 2, 1, "", "backends_order"], [2, 2, 1, "", "conda"], [2, 2, 1, "", "docker"], [2, 2, 1, "", "id"], [2, 2, 1, "", "implementation_status"], [2, 2, 1, "", "metadata"], [2, 2, 1, "", "method_class"], [2, 2, 1, "", "output_artifacts"], [2, 2, 1, "", "presets"], [2, 2, 1, "", "required_features"], [2, 2, 1, "", "supported_camera_models"], [2, 2, 1, "", "supported_outputs"]], "nerfbaselines.ModelInfo": [[2, 2, 1, "", "batch_size"], [2, 2, 1, "", "eval_batch_size"], [2, 2, 1, "", "hparams"], [2, 2, 1, "", "loaded_checkpoint"], [2, 2, 1, "", "loaded_step"], [2, 2, 1, "", "method_id"], [2, 2, 1, "", "num_iterations"], [2, 2, 1, "", "required_features"], [2, 2, 1, "", "supported_camera_models"], [2, 2, 1, "", "supported_outputs"]], "nerfbaselines.OptimizeEmbeddingsOutput": [[2, 2, 1, "", "embedding"], [2, 2, 1, "", "metrics"], [2, 2, 1, "", "render_output"]], "nerfbaselines.OutputArtifact": [[2, 2, 1, "", "link"]], "nerfbaselines.RenderOptions": [[2, 2, 1, "", "output_type_dtypes"], [2, 2, 1, "", "outputs"]], "nerfbaselines.RenderOutputType": [[2, 2, 1, "", "name"], [2, 2, 1, "", "type"]], "nerfbaselines.Trajectory": [[2, 2, 1, "", "appearances"], [2, 2, 1, "", "camera_model"], [2, 2, 1, "", "fps"], [2, 2, 1, "", "frames"], [2, 2, 1, "", "image_size"], [2, 2, 1, "", "source"]], "nerfbaselines.TrajectoryFrame": [[2, 2, 1, "", "appearance_weights"], [2, 2, 1, "", "intrinsics"], [2, 2, 1, "", "pose"]], "nerfbaselines.TrajectoryFrameAppearance": [[2, 2, 1, "", "embedding"], [2, 2, 1, "", "embedding_train_index"]], "nerfbaselines.TrajectoryKeyframe": [[2, 2, 1, "", "appearance"], [2, 2, 1, "", "fov"], [2, 2, 1, "", "pose"], [2, 2, 1, "", "transition_duration"]], "nerfbaselines.UnloadedDataset": [[2, 2, 1, "", "cameras"], [2, 2, 1, "", "image_paths"], [2, 2, 1, "", "image_paths_root"], [2, 2, 1, "", "images"], [2, 2, 1, "", "images_points3D_indices"], [2, 2, 1, "", "metadata"], [2, 2, 1, "", "points3D_rgb"], [2, 2, 1, "", "points3D_xyz"], [2, 2, 1, "", "sampling_mask_paths"], [2, 2, 1, "", "sampling_mask_paths_root"], [2, 2, 1, "", "sampling_masks"]], "nerfbaselines.backends": [[3, 1, 1, "", "ApptainerBackend"], [3, 1, 1, "", "ApptainerBackendSpec"], [3, 1, 1, "", "Backend"], [3, 1, 1, "", "CondaBackend"], [3, 1, 1, "", "CondaBackendSpec"], [3, 1, 1, "", "DockerBackend"], [3, 1, 1, "", "DockerBackendSpec"], [3, 1, 1, "", "SimpleBackend"], [3, 6, 1, "", "forward_port"], [3, 6, 1, "", "get_backend"], [3, 6, 1, "", "get_forwarded_ports"], [3, 6, 1, "", "get_implemented_backends"], [3, 6, 1, "", "get_mounts"], [3, 6, 1, "", "mount"], [3, 0, 0, "-", "protocol_shm_pickle"], [3, 0, 0, "-", "protocol_tcp_pickle"], [3, 6, 1, "", "run_on_host"]], "nerfbaselines.backends.ApptainerBackend": [[3, 4, 1, "", "install"], [3, 2, 1, "", "name"], [3, 4, 1, "", "shell"]], "nerfbaselines.backends.ApptainerBackendSpec": [[3, 2, 1, "", "conda_spec"], [3, 2, 1, "", "default_cuda_archs"], [3, 2, 1, "", "environment_name"], [3, 2, 1, "", "home_path"], [3, 2, 1, "", "image"], [3, 2, 1, "", "python_path"]], "nerfbaselines.backends.Backend": [[3, 4, 1, "", "install"], [3, 4, 1, "", "instance_call"], [3, 4, 1, "", "instance_del"], [3, 2, 1, "", "name"], [3, 4, 1, "", "shell"], [3, 4, 1, "", "static_call"]], "nerfbaselines.backends.CondaBackend": [[3, 4, 1, "", "install"], [3, 2, 1, "", "name"], [3, 4, 1, "", "shell"]], "nerfbaselines.backends.CondaBackendSpec": [[3, 2, 1, "", "environment_name"], [3, 2, 1, "", "install_script"], [3, 2, 1, "", "python_version"]], "nerfbaselines.backends.DockerBackend": [[3, 4, 1, "", "install"], [3, 2, 1, "", "name"], [3, 4, 1, "", "shell"]], "nerfbaselines.backends.DockerBackendSpec": [[3, 2, 1, "", "build_script"], [3, 2, 1, "", "conda_spec"], [3, 2, 1, "", "default_cuda_archs"], [3, 2, 1, "", "environment_name"], [3, 2, 1, "", "home_path"], [3, 2, 1, "", "image"], [3, 2, 1, "", "python_path"], [3, 2, 1, "", "replace_user"]], "nerfbaselines.backends.SimpleBackend": [[3, 4, 1, "", "instance_call"], [3, 4, 1, "", "instance_del"], [3, 2, 1, "", "name"], [3, 4, 1, "", "static_call"]], "nerfbaselines.backends.protocol_shm_pickle": [[3, 3, 1, "", "ConnectionClosed"], [3, 1, 1, "", "SharedMemoryProtocol"]], "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol": [[3, 4, 1, "", "close"], [3, 4, 1, "", "connect_worker"], [3, 4, 1, "", "get_worker_configuration"], [3, 5, 1, "", "protocol_name"], [3, 4, 1, "", "receive"], [3, 4, 1, "", "send"], [3, 4, 1, "", "start_host"], [3, 4, 1, "", "wait_for_worker"]], "nerfbaselines.backends.protocol_tcp_pickle": [[3, 1, 1, "", "TCPPickleProtocol"]], "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol": [[3, 4, 1, "", "close"], [3, 4, 1, "", "connect_worker"], [3, 4, 1, "", "get_worker_configuration"], [3, 5, 1, "", "protocol_name"], [3, 4, 1, "", "receive"], [3, 4, 1, "", "send"], [3, 4, 1, "", "start_host"], [3, 4, 1, "", "wait_for_worker"]], "nerfbaselines.cameras": [[4, 6, 1, "", "get_image_pixels"], [4, 6, 1, "", "get_rays"], [4, 6, 1, "", "interpolate_bilinear"], [4, 6, 1, "", "project"], [4, 6, 1, "", "undistort_camera"], [4, 6, 1, "", "unproject"], [4, 6, 1, "", "warp_image_between_cameras"]], "nerfbaselines.datasets": [[5, 0, 0, "-", "blender"], [5, 0, 0, "-", "bundler"], [5, 0, 0, "-", "colmap"], [5, 6, 1, "", "dataset_index_select"], [5, 6, 1, "", "dataset_load_features"], [5, 6, 1, "", "download_dataset"], [5, 0, 0, "-", "llff"], [5, 6, 1, "", "load_dataset"], [5, 0, 0, "-", "mipnerf360"], [5, 0, 0, "-", "nerfonthego"], [5, 0, 0, "-", "nerfstudio"], [5, 0, 0, "-", "phototourism"], [5, 0, 0, "-", "seathru_nerf"], [5, 0, 0, "-", "tanksandtemples"]], "nerfbaselines.datasets.blender": [[5, 6, 1, "", "download_blender_dataset"], [5, 6, 1, "", "load_blender_dataset"]], "nerfbaselines.datasets.bundler": [[5, 6, 1, "", "load_bundler_dataset"]], "nerfbaselines.datasets.colmap": [[5, 6, 1, "", "load_colmap_dataset"]], "nerfbaselines.datasets.llff": [[5, 6, 1, "", "download_llff_dataset"], [5, 6, 1, "", "load_llff_dataset"]], "nerfbaselines.datasets.mipnerf360": [[5, 6, 1, "", "download_mipnerf360_dataset"], [5, 6, 1, "", "load_mipnerf360_dataset"]], "nerfbaselines.datasets.nerfonthego": [[5, 6, 1, "", "load_nerfonthego_dataset"]], "nerfbaselines.datasets.nerfstudio": [[5, 6, 1, "", "download_nerfstudio_dataset"], [5, 6, 1, "", "load_nerfstudio_dataset"]], "nerfbaselines.datasets.phototourism": [[5, 1, 1, "", "NerfWEvaluationProtocol"], [5, 6, 1, "", "download_phototourism_dataset"], [5, 6, 1, "", "load_phototourism_dataset"]], "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol": [[5, 4, 1, "", "accumulate_metrics"], [5, 4, 1, "", "evaluate"], [5, 4, 1, "", "get_name"], [5, 4, 1, "", "render"]], "nerfbaselines.datasets.seathru_nerf": [[5, 6, 1, "", "download_seathru_nerf_dataset"], [5, 6, 1, "", "load_seathru_nerf_dataset"]], "nerfbaselines.datasets.tanksandtemples": [[5, 6, 1, "", "download_tanksandtemples_dataset"], [5, 6, 1, "", "load_tanksandtemples_dataset"]], "nerfbaselines.evaluation": [[6, 1, 1, "", "DefaultEvaluationProtocol"], [6, 1, 1, "", "NerfEvaluationProtocol"], [6, 6, 1, "", "build_evaluation_protocol"], [6, 6, 1, "", "compute_metrics"], [6, 6, 1, "", "evaluate"], [6, 6, 1, "", "path_is_video"], [6, 6, 1, "", "render_all_images"], [6, 6, 1, "", "render_frames"], [6, 6, 1, "", "run_inside_eval_container"], [6, 6, 1, "", "trajectory_get_cameras"], [6, 6, 1, "", "trajectory_get_embeddings"], [6, 6, 1, "", "with_supported_camera_models"]], "nerfbaselines.evaluation.DefaultEvaluationProtocol": [[6, 4, 1, "", "accumulate_metrics"], [6, 4, 1, "", "evaluate"], [6, 4, 1, "", "get_name"], [6, 4, 1, "", "render"]], "nerfbaselines.io": [[7, 6, 1, "", "deserialize_nb_info"], [7, 6, 1, "", "get_checkpoint_sha"], [7, 6, 1, "", "get_method_sha"], [7, 6, 1, "", "get_metrics_hash"], [7, 6, 1, "", "get_predictions_sha"], [7, 6, 1, "", "get_torch_checkpoint_sha"], [7, 6, 1, "", "load_trajectory"], [7, 6, 1, "", "new_nb_info"], [7, 6, 1, "", "numpy_from_base64"], [7, 6, 1, "", "numpy_to_base64"], [7, 6, 1, "", "open_any"], [7, 6, 1, "", "open_any_directory"], [7, 6, 1, "", "read_image"], [7, 6, 1, "", "save_cameras_npz"], [7, 6, 1, "", "save_depth"], [7, 6, 1, "", "save_evaluation_results"], [7, 6, 1, "", "save_image"], [7, 6, 1, "", "save_output_artifact"], [7, 6, 1, "", "save_predictions"], [7, 6, 1, "", "save_trajectory"], [7, 6, 1, "", "serialize_evaluation_results"], [7, 6, 1, "", "serialize_nb_info"], [7, 6, 1, "", "wget"]], "nerfbaselines.logging": [[8, 1, 1, "", "BaseLogger"], [8, 1, 1, "", "BaseLoggerEvent"], [8, 1, 1, "", "ConcatLogger"], [8, 1, 1, "", "ConcatLoggerEvent"], [8, 1, 1, "", "TensorboardLogger"], [8, 1, 1, "", "TensorboardLoggerEvent"], [8, 1, 1, "", "WandbLogger"], [8, 1, 1, "", "WandbLoggerEvent"], [8, 6, 1, "", "log_metrics"]], "nerfbaselines.logging.BaseLogger": [[8, 4, 1, "", "add_embedding"], [8, 4, 1, "", "add_event"], [8, 4, 1, "", "add_hparams"], [8, 4, 1, "", "add_image"], [8, 4, 1, "", "add_scalar"], [8, 4, 1, "", "add_text"]], "nerfbaselines.logging.BaseLoggerEvent": [[8, 4, 1, "", "add_embedding"], [8, 4, 1, "", "add_image"], [8, 4, 1, "", "add_plot"], [8, 4, 1, "", "add_scalar"], [8, 4, 1, "", "add_text"]], "nerfbaselines.logging.ConcatLogger": [[8, 4, 1, "", "add_event"], [8, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLogger": [[8, 4, 1, "", "add_event"], [8, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLoggerEvent": [[8, 4, 1, "", "add_embedding"], [8, 4, 1, "", "add_histogram"], [8, 4, 1, "", "add_image"], [8, 4, 1, "", "add_scalar"], [8, 4, 1, "", "add_text"]], "nerfbaselines.logging.WandbLogger": [[8, 4, 1, "", "add_event"], [8, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.WandbLoggerEvent": [[8, 4, 1, "", "add_embedding"], [8, 4, 1, "", "add_histogram"], [8, 4, 1, "", "add_image"], [8, 4, 1, "", "add_plot"], [8, 4, 1, "", "add_scalar"], [8, 4, 1, "", "add_text"]], "nerfbaselines.metrics": [[9, 6, 1, "", "dmpix_ssim"], [9, 6, 1, "", "lpips"], [9, 6, 1, "", "lpips_alex"], [9, 6, 1, "", "lpips_vgg"], [9, 6, 1, "", "mae"], [9, 6, 1, "", "mse"], [9, 6, 1, "", "psnr"], [9, 6, 1, "", "ssim"], [9, 6, 1, "", "torchmetrics_ssim"]], "nerfbaselines.results": [[10, 1, 1, "", "DatasetInfo"], [10, 1, 1, "", "MetricInfo"], [10, 1, 1, "", "SceneInfo"], [10, 6, 1, "", "compile_dataset_results"], [10, 6, 1, "", "format_duration"], [10, 6, 1, "", "format_memory"], [10, 6, 1, "", "get_dataset_info"], [10, 6, 1, "", "get_method_info_from_spec"], [10, 6, 1, "", "load_metrics_from_results"], [10, 6, 1, "", "render_markdown_dataset_results_table"]], "nerfbaselines.results.DatasetInfo": [[10, 2, 1, "", "default_metric"], [10, 2, 1, "", "description"], [10, 2, 1, "", "id"], [10, 2, 1, "", "licenses"], [10, 2, 1, "", "link"], [10, 2, 1, "", "metrics"], [10, 2, 1, "", "name"], [10, 2, 1, "", "paper_authors"], [10, 2, 1, "", "paper_link"], [10, 2, 1, "", "paper_title"], [10, 2, 1, "", "scenes"]], "nerfbaselines.results.MetricInfo": [[10, 2, 1, "", "ascending"], [10, 2, 1, "", "description"], [10, 2, 1, "", "id"], [10, 2, 1, "", "link"], [10, 2, 1, "", "name"]], "nerfbaselines.results.SceneInfo": [[10, 2, 1, "", "id"], [10, 2, 1, "", "name"]], "nerfbaselines.training": [[11, 1, 1, "", "MetricsAccumulator"], [11, 1, 1, "", "ResourcesUtilizationInfo"], [11, 1, 1, "", "Trainer"], [11, 6, 1, "", "build_logger"], [11, 6, 1, "", "eval_all"], [11, 6, 1, "", "eval_few"], [11, 6, 1, "", "get_presets_and_config_overrides"], [11, 6, 1, "", "get_resources_utilization_info"], [11, 6, 1, "", "make_image_grid"]], "nerfbaselines.training.MetricsAccumulator": [[11, 4, 1, "", "pop"], [11, 4, 1, "", "update"]], "nerfbaselines.training.ResourcesUtilizationInfo": [[11, 2, 1, "", "gpu_memory"], [11, 2, 1, "", "gpu_name"], [11, 2, 1, "", "memory"]], "nerfbaselines.training.Trainer": [[11, 4, 1, "", "eval_all"], [11, 4, 1, "", "eval_few"], [11, 4, 1, "", "get_logger"], [11, 5, 1, "", "num_iterations"], [11, 4, 1, "", "save"], [11, 4, 1, "", "train"], [11, 4, 1, "", "train_iteration"]], "nerfbaselines.utils": [[12, 1, 1, "", "CancellationToken"], [12, 3, 1, "", "CancelledException"], [12, 1, 1, "", "Indices"], [12, 6, 1, "", "apply_colormap"], [12, 6, 1, "", "apply_transform"], [12, 6, 1, "", "convert_image_dtype"], [12, 6, 1, "", "get_transform_and_scale"], [12, 6, 1, "", "image_to_srgb"], [12, 6, 1, "", "invert_transform"], [12, 6, 1, "", "pad_poses"], [12, 6, 1, "", "padded_stack"], [12, 6, 1, "", "quaternion_conjugate"], [12, 6, 1, "", "quaternion_multiply"], [12, 6, 1, "", "quaternion_to_rotation_matrix"], [12, 6, 1, "", "rotate_spherical_harmonics"], [12, 6, 1, "", "rotation_matrix_to_quaternion"], [12, 6, 1, "", "unpad_poses"], [12, 6, 1, "", "visualize_depth"]], "nerfbaselines.utils.CancellationToken": [[12, 4, 1, "", "cancel"], [12, 4, 1, "", "cancel_if_requested"]], "nerfbaselines.utils.Indices": [[12, 4, 1, "", "every_iters"]], "nerfbaselines.viewer": [[13, 6, 1, "", "run_viser_viewer"]], "nerfbaselines.web": [[14, 6, 1, "", "build"], [14, 6, 1, "", "start_dev_server"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:method", "5": "py:property", "6": "py:function", "7": "std:cmdoption"}, "terms": {"": [0, 9, 11, 12, 16, 17, 20, 22, 23], "0": [0, 9, 12, 17, 18, 19, 21, 23], "0031308": 12, "00889": 18, "01": 9, "03": 9, "04": 20, "04264": [18, 21], "055": 12, "06706": 21, "07973x": 19, "08447": 21, "08934": [18, 21], "095": 19, "09517": 21, "09987": 21, "1": [0, 9, 11, 12, 17, 21, 23], "10": [12, 17, 18], "100": 0, "10000": 11, "10241": 21, "10772": 21, "1085": 12, "10902": 21, "11": [0, 9], "12": [12, 21], "12077": [18, 21], "12em": 19, "13": [9, 19], "134217728": 3, "15704": 21, "16493": 21, "17": 0, "18715": 21, "1905": 18, "1920": 11, "19tv6kdvgcmg3cgz1bniunbbmd": 5, "1e": 0, "1em": 19, "2": [0, 2, 5, 11, 12, 17, 18, 21], "200": 21, "2000": 11, "2003": [18, 21], "2004": 9, "2023": 5, "2024": 19, "2111": [18, 21], "22": 20, "2203": 21, "23": [12, 19], "2301": 21, "2302": [18, 21], "2304": 21, "2308": 21, "2311": 21, "2403": 21, "2404": 21, "2405": 21, "2407": 21, "2514": 12, "2t": 19, "3": [0, 12, 15, 17, 21], "30000": 22, "360": 22, "3d": [17, 18, 21, 22], "3d_gaussian_splatting_low": 21, "3dg": [19, 21], "3x3": 12, "3x4": [12, 17], "4": [5, 9, 12, 17, 21], "4654": 12, "4x4": 12, "5": 9, "6": [12, 21], "600": 9, "6006": 13, "612": 9, "8": [15, 18, 19], "90254": 19, "92": 12, "A": [6, 9, 10, 11, 12, 15, 17, 18, 19, 21], "But": 19, "By": [12, 17, 22], "For": [0, 12, 15, 19, 20, 22], "If": [0, 5, 6, 9, 10, 12, 15, 16, 17, 19, 20, 22, 23], "In": [0, 12, 15, 17, 20, 22, 23], "It": [2, 9, 11, 12, 15, 18, 21, 22], "Near": 2, "No": 12, "On": 20, "One": 9, "Or": 23, "The": [0, 2, 5, 6, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23], "There": [0, 17, 23], "These": [15, 23], "To": [0, 20, 22], "_": 5, "__init__": 0, "_incompletedataset": 2, "_load_camera": 17, "_loaded_step": 0, "_state": 0, "_type": 11, "abhik": [18, 21], "abhishek": 18, "abl": 23, "about": 17, "absolut": [9, 17], "abstract": 2, "acceler": 21, "accept": [0, 15], "access": [12, 15, 20], "accumul": [16, 21], "accumulate_metr": [2, 5, 6], "achiev": 21, "acquir": 18, "actual": 12, "ad": [17, 19, 23], "adam": 0, "add": [0, 8, 20, 21, 23], "add_embed": [2, 8], "add_ev": [2, 8], "add_histogram": [2, 8], "add_hparam": 8, "add_imag": [2, 8], "add_plot": [2, 8], "add_scalar": [2, 8], "add_text": [2, 8], "addapt": 21, "addit": 20, "address": 21, "adopt": 21, "advanc": 18, "affect": 23, "after": [9, 11, 12, 15, 21, 22, 23], "ag": 20, "agenc": 19, "ahuja": [18, 21], "aim": 19, "akkaynak": [18, 21], "alex": 21, "alexand": [18, 21], "algorithm": 12, "alia": 21, "alias": [18, 21], "align": 22, "all": [0, 2, 6, 11, 14, 16, 17, 19, 20, 22], "allow": [0, 12, 20, 21, 22], "allow_alpha": 12, "almost": 12, "along": 21, "alpha": 12, "alreadi": [12, 22, 23], "also": [0, 12, 15, 17, 19, 20, 21, 22, 23], "altern": 0, "alwai": 23, "amit": [18, 21], "an": [0, 2, 12, 15, 17, 18, 20, 21], "andrea": 21, "angjoo": [18, 21], "ani": [0, 2, 8, 9, 10, 11, 12, 20], "anisotrop": 9, "anoth": [12, 23], "anpei": 21, "anti": [18, 21], "apach": [18, 21], "apchenstu": 21, "api": 19, "app": 18, "appear": [0, 2, 12, 18, 21, 22], "appearance_weight": 2, "append": 17, "appli": [2, 11, 12, 16], "applied_preset": [7, 11], "apply_colormap": 12, "apply_transform": 12, "approach": 21, "approxim": 21, "apptain": [2, 3, 15, 16, 21], "apptainerbackend": 3, "apptainerbackendspec": 3, "apt": 20, "ar": [0, 2, 5, 9, 11, 12, 15, 16, 17, 18, 19, 20, 23], "arang": 17, "archiv": 22, "arg": [0, 2, 3, 8, 16], "argument": [0, 11, 16, 17, 20, 22, 23], "arno": 18, "around": 18, "arrai": [7, 12, 15, 17], "articl": 19, "artifact": [7, 21], "arxiv": [18, 19, 21], "ascend": 10, "aselin": 19, "aspect": 0, "assert": 0, "assess": 9, "asset": 21, "assum": [12, 17, 22, 23], "attach": 15, "attempt": 15, "attribut": 5, "austin": [18, 21], "authkei": 3, "author": [0, 18, 19, 21], "auto": [11, 16], "automat": [2, 11, 17, 19, 21, 22, 23], "avail": [0, 6, 15, 19, 20, 21], "averag": [9, 11], "avoid": 20, "axes_label": [2, 8], "b": [9, 19], "back": 21, "backend": [0, 1, 2, 16, 19, 20, 21, 22], "backend_nam": [2, 6, 16], "backends_ord": 2, "background": [11, 12, 18, 22], "background_color": 12, "backward": 0, "bake": 21, "bandwidth": 9, "bar": [6, 12], "barron": [18, 21], "bartel": 2, "base": [0, 2, 3, 5, 6, 8, 9, 10, 11, 12, 16, 18, 21, 22], "base_path": [14, 16], "baselogg": 8, "baseloggerev": 8, "bash": 20, "bash_profil": 20, "bashrc": 20, "batch_siz": 2, "becaus": 20, "been": 12, "befor": 22, "beforehand": 23, "being": [15, 20], "believ": 17, "below": 12, "ben": [18, 21], "benchmark": [7, 18, 19, 21], "benjamin": 21, "bernhard": 21, "better": [9, 21, 22], "between": [9, 15, 19, 23], "bias": 22, "big": 19, "bin": [20, 23], "binari": 15, "binaryio": 7, "binbin": 21, "bind": 0, "bit": 12, "black": 12, "blend": 12, "blender": [0, 21, 22], "bmild": 18, "bookkeep": 23, "bool": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12], "both": [15, 18], "bottom": [12, 19], "bovik": 9, "boyang": 21, "brandenburg": 18, "brent": [18, 19, 21], "browser": 22, "brualla": 21, "bsd": 21, "buffer": 15, "build": [2, 8, 11, 14, 15, 17], "build_evaluation_protocol": 6, "build_logg": 11, "build_method_class": 2, "build_script": 3, "built": [15, 20], "bundler_fil": 5, "byte": 7, "c": [0, 9, 15, 18, 23], "call": [0, 11, 15, 17], "callabl": [2, 9, 11], "camera": [0, 1, 2, 5, 6, 7, 17, 18, 21], "camera_model": [2, 5, 17], "camera_model_from_int": 2, "camera_model_to_int": [2, 17], "cameras1": 4, "cameras2": 4, "camp": 16, "can": [0, 5, 9, 12, 15, 17, 19, 20, 21, 22, 23], "cancel": 12, "cancel_if_request": 12, "cancellationtoken": 12, "cancelledexcept": 12, "capabl": 0, "captur": [5, 18, 21], "case": [0, 9, 12, 15, 17, 21, 22, 23], "casual": 21, "cat": 2, "caus": 9, "cayon": 18, "cc": 18, "center_i": 17, "center_x": 17, "centric": [17, 18, 21, 23], "certainli": 12, "chair": 5, "chang": [2, 21], "channel": 12, "charset": 19, "check": [12, 20], "checkpoint": [0, 2, 19, 22], "checkpoint_data": 7, "chen": 21, "choos": [15, 22], "chosen": 15, "christoph": 21, "chume": 21, "cite": 19, "ckpt": 0, "ckpt_meta": 0, "cl": 0, "class": [0, 2, 3, 5, 6, 8, 10, 11, 12], "classmethod": [0, 2, 12], "cli": [19, 20, 23], "close": 3, "closest": 12, "cloud": [21, 22], "code": [0, 18], "coeffici": 12, "coeur": 18, "collect": [18, 21], "colmap": [16, 17, 18, 23], "colmap_path": 5, "color": [0, 2, 5, 6, 8, 9, 12, 16, 21], "color_backscatt": 21, "color_clean": 21, "color_spac": 12, "colormap": 12, "colorspac": 9, "column": 12, "com": [5, 18, 20, 21], "combin": 21, "comma": [15, 16], "command": [0, 16, 20, 22, 23], "commit": 8, "common": [15, 17], "commun": 17, "compact": 21, "compar": [9, 19, 21], "comparison": 0, "compil": 10, "compile_dataset_result": 10, "complic": 0, "compon": [12, 21], "compress": 22, "comput": [0, 6, 9, 11, 18], "compute_metr": 6, "concatlogg": 8, "concatloggerev": 8, "concept": 15, "conda": [0, 2, 3, 15, 16, 21, 23], "conda_spec": 3, "condabackend": 3, "condabackendspec": 3, "condit": [18, 21], "config": 11, "config_overrid": [0, 2, 7, 11, 16], "configur": 20, "conflict": 20, "conjug": 12, "connect": [15, 22], "connect_work": 3, "connectionclos": 3, "connectionerror": 3, "consid": [12, 17], "consist": [18, 19, 21, 23], "construct": [17, 22], "contain": [0, 6, 10, 15, 16, 17, 18, 20, 22, 23], "content": [0, 17, 18, 21, 23], "context": 12, "contextmanag": [2, 8], "continu": 15, "contribut": 17, "convent": [12, 17], "converg": 12, "convers": 12, "convert": [12, 17], "convert_image_dtyp": [0, 12], "convolut": 9, "coordin": 17, "coordinate_system": 5, "copi": 0, "copy_": 0, "corner": 19, "correct": [17, 23], "correctli": 0, "correspond": [12, 22], "could": 23, "cover": 0, "cpu": 0, "creat": [12, 22, 23], "csv": 17, "ctk": 20, "cu118": 0, "curl": 20, "current": [2, 12, 15, 19, 20, 22], "custom": [19, 21], "cvpr2023": [18, 21], "cx": [2, 5], "cy": [2, 5], "cz": 19, "czech": 19, "d": [20, 21], "dai": 18, "dampen": 9, "dan": [18, 21], "data": [0, 2, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22], "data_path": 16, "data_rang": 9, "databas": 23, "database_path": 23, "dataset": [0, 1, 2, 6, 7, 10, 11, 14, 19, 21, 22], "dataset_index_select": [5, 17], "dataset_load_featur": 5, "dataset_metadata": 11, "datasetinfo": 10, "datasetloaderspec": 2, "datasetnotfounderror": 2, "datasetspec": 2, "datasetspecmetadata": 2, "david": [18, 21], "db": 23, "de": 21, "dearmor": 20, "deb": 20, "deborah": [18, 21], "decid": 23, "declar": 0, "decompos": 12, "def": [0, 17], "default": [0, 2, 9, 12, 15, 16, 17, 18, 20, 22, 23], "default_appear": 2, "default_cuda_arch": 3, "default_fov": 2, "default_metr": [2, 10], "default_transition_dur": 2, "defaultevaluationprotocol": 6, "defin": 9, "degre": 21, "delaunai": 21, "demonstr": 0, "demuc": 21, "dens": 21, "depend": [0, 10, 15, 20, 23], "depth": [2, 12, 16, 21], "depth_mean": 21, "derya": [18, 21], "describ": [0, 20], "descript": [2, 6, 7, 8, 10], "deserialize_nb_info": 7, "design": 21, "detach": 0, "detail": 19, "detect": [17, 22, 23], "determin": [0, 9], "develop": [0, 18, 21], "deviat": 9, "dict": [0, 2, 5, 6, 7, 8, 10, 11], "dictionari": [5, 6, 10, 17], "differ": [0, 12, 15, 18, 19, 21, 22], "differenct": 22, "difficult": 19, "difficulti": 19, "dim": 9, "dimens": 12, "dimension": 21, "directli": [5, 23], "directori": [0, 5, 6, 7, 11, 16, 17, 22, 23], "disabl": 16, "disagn": 21, "discov": 0, "discover": 0, "display_nam": [2, 8], "distort": [2, 17, 21], "distortion_map": 21, "distortion_paramet": [2, 17], "distractor": 21, "distribut": 20, "dm_pix": 9, "dmpix_ssim": 9, "do": [0, 12, 17, 23], "doc": [14, 16, 21], "docker": [2, 3, 15, 16, 21, 22], "dockerbackend": 3, "dockerbackendspec": 3, "dockerfil": 15, "document": [16, 17, 23], "doe": [9, 12, 20, 21, 23], "doi": 12, "don": 0, "done": 19, "dongbin": 21, "dor": [18, 21], "download": [0, 5, 15, 18, 19, 20, 22], "download_blender_dataset": 5, "download_dataset": 5, "download_dataset_funct": 2, "download_llff_dataset": 5, "download_mipnerf360_dataset": 5, "download_nerfstudio_dataset": 5, "download_phototourism_dataset": 5, "download_seathru_nerf_dataset": 5, "download_tanksandtemples_dataset": 5, "downloaddatasetfunct": 2, "downscal": 23, "downscale_factor": [5, 23], "downscale_loaded_factor": 23, "drettaki": 21, "drive": 5, "drive_link": 5, "driver": 20, "drum": 5, "dtype": [0, 12, 17], "dump": 0, "dx": 12, "dynam": 21, "e": [0, 9, 16, 17, 19, 22, 23], "each": [2, 9, 12, 15, 17, 18, 20, 23], "easi": [0, 19, 20], "easier": 0, "easiest": [0, 15], "easili": [0, 19], "eastbeanzhang": 21, "edu": 18, "educ": 19, "effici": 21, "eigenvalu": 12, "either": [0, 5, 15, 18, 21], "elev": 18, "els": [0, 12, 17], "embed": [0, 2, 6, 8, 18, 21, 22], "embedding_train_index": 2, "enabl": [0, 20, 21, 22], "encapsul": 15, "encod": 21, "end": [15, 21, 22], "endpoint": 17, "enliang": 21, "ensur": [6, 17, 23], "environ": [0, 15, 16, 18, 20, 23], "environment_nam": [0, 3], "equival": 12, "erf": 19, "error": [2, 9, 12], "especi": 19, "establish": 15, "estim": 9, "etc": [0, 17, 20, 22, 23], "ethan": [18, 21], "eval": [0, 16], "eval_al": 11, "eval_all_it": [11, 16], "eval_batch_s": 2, "eval_few": 11, "eval_few_it": [11, 16], "evalu": [0, 1, 2, 5, 10, 12, 18, 19, 22], "evaluation_protocol": [2, 6, 7, 11], "evaluation_protocol_class": 2, "evaluationprotocol": [2, 5, 6, 11], "evaluationprotocolspec": 2, "evan": 21, "event": [7, 8], "everi": 12, "every_it": 12, "everyth": 22, "evonn": [18, 21], "exactli": 9, "exampl": [0, 12, 17, 22, 23], "except": [2, 3, 12], "exhaustive_match": 23, "exist": [0, 16, 19, 23], "exist_ok": 0, "expand": 0, "expected_scal": 12, "experi": 22, "explicit": [17, 21, 23], "explicitli": 17, "exploit": 21, "explor": 18, "export": [0, 20], "express": 12, "expro": 19, "extend": [21, 22], "extens": [19, 21, 22], "extern": [0, 22], "extra": 6, "extract": [21, 22], "f": [0, 5, 17], "face": [18, 23], "factor": [21, 23], "fail": 15, "fallback": 15, "fals": [3, 5, 6, 9, 12, 17], "famou": 18, "far": [2, 17], "fast": [0, 21], "faster": 15, "fastest": 15, "featur": [0, 5, 21], "feature_extractor": 23, "few": [0, 16], "ficu": 5, "field": [10, 16, 17, 18, 23], "file": [6, 7, 10, 16, 17, 22, 23], "filter": [2, 9], "filter_fn": 9, "final": [0, 11, 16, 21], "finish": 22, "first": [0, 9, 15, 17, 20], "fishey": 18, "fit": 17, "five": 18, "fix": [18, 21], "float": [0, 2, 5, 6, 8, 9, 10, 11, 12, 17], "float32": [0, 9, 17], "float64": 9, "fn": 2, "focal": 17, "focal_i": 17, "focal_x": 17, "folder": [5, 22], "follow": [0, 12, 17, 19, 20, 21, 22, 23], "footprint": 21, "forc": 16, "forg": [20, 23], "form": [17, 18], "format": [5, 22, 23], "format_dur": 10, "format_memori": 10, "formula": 12, "forward": [18, 23], "forward_port": 3, "found": [0, 15, 20], "foundat": 19, "fountain": 18, "four": 18, "fov": 2, "fp": [2, 6, 21], "fr": 21, "frahm": 21, "frame": [2, 6, 18, 22], "framework": [0, 18, 19, 21], "frederik": 21, "free": 21, "fridovich": 21, "from": [0, 2, 5, 6, 9, 10, 11, 12, 15, 16, 17, 20, 21, 22, 23], "from_numpi": 0, "frozenset": [0, 2, 5, 11], "frustum": [21, 22], "fssl": 20, "full": [0, 16, 19, 22], "full_opencv": [2, 5, 21], "function": [0, 3, 9, 11, 12], "fungraph": 21, "further": 22, "fx": 2, "fy": 2, "g": [0, 16, 17, 20, 22, 23], "garden": 22, "gate": 18, "gaussian": [9, 16, 22], "gaussian_kernel": 9, "ga\u010dr": 19, "geiger": 21, "gener": [10, 15, 17, 21], "generate_output_artifact": 11, "genericcamera": [2, 4], "geometri": 21, "georg": 21, "georgio": 21, "get": [2, 10, 20, 22], "get_backend": 3, "get_checkpoint_sha": 7, "get_dataset_info": 10, "get_dataset_loader_spec": 2, "get_dataset_spec": 2, "get_evaluation_protocol_spec": 2, "get_forwarded_port": 3, "get_image_pixel": 4, "get_implemented_backend": 3, "get_info": [0, 2], "get_logg": 11, "get_logger_spec": 2, "get_method_info": [0, 2], "get_method_info_from_spec": 10, "get_method_sha": 7, "get_method_spec": 2, "get_metrics_hash": 7, "get_mount": 3, "get_nam": [2, 5, 6], "get_predictions_sha": 7, "get_presets_and_config_overrid": 11, "get_rai": 4, "get_resources_utilization_info": 11, "get_supported_dataset": 2, "get_supported_dataset_load": 2, "get_supported_evaluation_protocol": 2, "get_supported_logg": 2, "get_supported_method": 2, "get_torch_checkpoint_sha": 7, "get_train_embed": [0, 2], "get_transform_and_scal": 12, "get_worker_configur": 3, "giacomo": 21, "github": [18, 19, 20, 21], "githubusercont": 20, "give": 20, "given": [2, 11, 12], "good": [20, 21], "googl": 5, "googleapi": 18, "gpg": 20, "gpgkei": 20, "gpu_memori": 11, "gpu_nam": 11, "grant": 19, "graphic": 21, "graviti": 22, "grayscal": 9, "great": [19, 23], "grid": 21, "ground": [9, 18], "ground_truth_sha": 7, "group": 20, "gt": 6, "guid": [0, 17, 22, 23], "guidanc": 12, "gz": [16, 22], "h": [0, 9, 17], "ha": [12, 20, 21], "handl": 21, "hao": 21, "haoqian": 21, "happen": 12, "harmon": 12, "has_scal": 12, "hash": [7, 21], "have": [0, 9, 10, 12, 17, 18, 19, 20, 22, 23], "haven": [20, 22], "hedman": [18, 21], "height": [17, 19], "help": [0, 22, 23], "helper": 17, "henzler": 21, "here": [0, 20, 22, 23], "higher": 9, "highest": 15, "histogram": 8, "home": 20, "home_path": 3, "homogen": 12, "host": 15, "hostnam": 3, "hotdog": 5, "hou": 21, "how": [0, 23], "howev": [0, 17, 21, 23], "hparam": [0, 2, 8], "hparam_plugin_metr": 8, "hpc": [15, 20], "http": [0, 5, 12, 18, 20, 21], "huang": 21, "huge": 21, "hyperparamet": 0, "i": [0, 2, 5, 6, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23], "id": [0, 2, 6, 10, 16, 17, 18, 19, 21, 23], "identifi": 8, "ieee": 9, "ignor": 9, "imag": [0, 2, 3, 4, 6, 8, 9, 11, 12, 15, 16, 17, 18, 19, 21, 23], "image_nam": 17, "image_path": [2, 17, 23], "image_paths_root": [2, 17], "image_s": [0, 2, 4, 17], "image_to_srgb": 12, "images_path": 5, "images_points3d_indic": [2, 5, 21], "imagesetinterpolationsourc": 2, "img": 19, "implement": [0, 9, 10, 15, 17, 19, 20, 21, 22, 23], "implementation_statu": 2, "import": [0, 10, 17], "improv": 21, "includ": [12, 16, 18], "include_doc": [14, 16], "increas": 19, "index": [0, 2, 9], "indic": [5, 11, 12, 17], "individu": [9, 22], "indoor": 18, "industri": 18, "infer": 0, "info": [0, 2, 6, 7, 10, 17, 18, 21, 23], "inform": [0, 17, 23], "infra": 19, "ingp": 21, "initi": [0, 2, 11, 15, 16], "initial_color": 0, "inplac": 16, "input": [9, 12, 16, 21, 22], "inria": 21, "insid": 15, "inspect": 22, "instal": [0, 3, 15, 19, 22, 23], "install_script": [0, 3], "instanc": 3, "instance_cal": 3, "instance_del": 3, "instant": 16, "instead": [19, 21, 22], "instruct": [0, 20, 23], "int": [0, 2, 3, 5, 6, 8, 9, 11, 12], "int32": 17, "integ": 17, "integr": [0, 21], "interact": [20, 22], "interest": 5, "interfac": [0, 15, 19], "intermedi": 18, "interpol": 2, "interpolate_bilinear": 4, "interrupt": 3, "intrins": [2, 17, 18, 21], "invert": 12, "invert_transform": 12, "io": [1, 18, 20, 21], "iqjrbg": 5, "is_cycl": 2, "isol": [19, 20], "issu": 0, "item": [0, 2], "iter": [0, 2, 5, 6, 7, 12, 16], "its": 0, "itself": 12, "itzhack": 12, "j": 12, "jaesik": 18, "jake": [18, 21], "jan": 21, "jingyi": 21, "jkulhanek": 21, "johann": 21, "join": [0, 17], "jona": [19, 21], "jonathan": [18, 21], "jonbarron": [18, 21], "journal": 19, "jpg": [17, 23], "json": [0, 6, 10, 16, 17, 22, 23], "julia": 21, "just": [0, 12], "justin": [18, 21], "k": 17, "k1": [9, 17], "k2": [9, 17], "k3": 17, "k4": 17, "k5": 17, "k6": 17, "kalantari": 18, "kamyar": [18, 21], "kanazawa": [18, 21], "kar": 18, "keil": 21, "keller": 21, "kerbl": 21, "kernel": 9, "kernel_s": 9, "kerr": [18, 21], "keunhong": 21, "keyfram": 2, "keyr": 20, "keyword": 17, "khademi": 18, "knapitsch": 18, "know": 23, "kochanek": 2, "kochanekbartelsinterpolationsourc": 2, "koltun": 18, "kopana": 21, "korman": [18, 21], "kplane": [16, 21], "kristoffersen": [18, 21], "kulhanek": [19, 21], "kulhanek2024nerfbaselin": 19, "kwarg": [0, 2, 3, 5, 8, 17], "l": 20, "lab": 18, "label": [2, 8], "landmark": 18, "larg": [18, 21], "larger": 23, "laser": 18, "last": [11, 12], "later": 22, "latest": [16, 20], "latter": 15, "lazi": 11, "learn": 9, "least": [9, 17], "left": [12, 18, 19], "lego": [0, 5], "leimk\u00fchler": 21, "len": [0, 17, 18], "less": 18, "let": [0, 17, 22, 23], "level": [19, 20], "levi": [18, 21], "levy_seathru": [18, 21], "li": [18, 21], "libnvidia": 20, "licens": [2, 10, 18, 21], "licensespec": [2, 10], "light": 18, "like": [17, 19], "linalgerror": 12, "line": [20, 23], "linear": 12, "link": [0, 2, 10, 16], "linspac": 17, "linux": [15, 20], "list": [0, 2, 5, 6, 8, 10, 11, 12, 15, 16, 17, 19, 20, 22], "liter": [2, 3, 5, 6, 7, 10, 11, 14], "llff": 21, "load": [0, 5, 10, 17, 23], "load_blender_dataset": 5, "load_bundler_dataset": 5, "load_colmap_dataset": 5, "load_dataset": 5, "load_dataset_funct": [2, 17], "load_featur": 5, "load_llff_dataset": 5, "load_metrics_from_result": 10, "load_mipnerf360_dataset": 5, "load_my_dataset": 17, "load_nerfonthego_dataset": 5, "load_nerfstudio_dataset": 5, "load_phototourism_dataset": 5, "load_seathru_nerf_dataset": 5, "load_state_dict": 0, "load_tanksandtemples_dataset": 5, "load_trajectori": 7, "loaddatasetfunct": 2, "loaded_checkpoint": [0, 2], "loaded_step": [0, 2], "loader": [2, 19, 23], "local": [12, 20], "log": [1, 22], "log_metr": 8, "logdir": 8, "logger": [2, 8, 11, 16, 22], "logger_class": 2, "loggerev": [2, 8], "loggerspec": 2, "long": [12, 18], "loss": 0, "low": 21, "lower": 9, "lpip": [6, 9], "lpips_alex": 9, "lpips_vgg": 9, "lr": 0, "lutz": 21, "m": [17, 18, 20], "maco": 15, "mae": 9, "magnitud": 9, "mai": [12, 15, 23], "main": [0, 12, 15, 20], "make": [0, 12], "make_image_grid": 11, "makedir": 0, "manag": 12, "mani": [0, 17], "map": [9, 17], "mapper": 23, "marc": 21, "markdown": [10, 16], "martin": 21, "mask": 17, "match": [0, 9, 21], "materi": 5, "matplotlib": 12, "matric": [2, 12, 17], "matrix": [12, 17], "matthew": [18, 21], "matthewtancik": [18, 21], "max": 9, "max_message_s": 3, "max_val": 9, "max_width": 11, "maximum": [9, 12], "mcallist": [18, 21], "mean": [9, 15], "meanti": 21, "measur": 9, "media": [18, 21], "memori": [10, 11, 15, 21], "merg": [0, 11], "mesh": 21, "messag": [3, 15], "metadata": [0, 2, 10, 11, 16, 17, 23], "method": [2, 3, 5, 6, 7, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23], "method_class": [0, 2], "method_id": [0, 2], "method_link": [10, 16], "method_nam": 16, "method_spec": [3, 11], "methodinfo": [2, 10], "methodspec": [2, 3, 10, 11], "metric": [1, 2, 5, 6, 7, 8, 10, 11, 18, 19, 22], "metricinfo": 10, "metrics_list": 7, "metrics_path": 7, "metricsaccumul": 11, "mic": 5, "michael": 21, "might": 23, "mildenhal": [18, 21], "min": [9, 21], "minghan": 21, "miniforg": 20, "miniforge3": 20, "minim": 19, "ministri": 19, "mip": [16, 22], "mipnerf": 21, "mipnerf360": [16, 18, 21, 22], "mirror": 18, "mit": 21, "mkdir": 23, "mlp": 21, "mobil": 18, "mode": 7, "model": [0, 2, 7, 9, 16, 21], "model_path": 7, "modelinfo": [0, 2], "modif": 21, "modifi": 21, "modul": 12, "modular": [18, 21], "more": [0, 12, 17], "most": [15, 19], "mount": 3, "mp4": [16, 22], "mse": 9, "mse_loss": 0, "much": [0, 23], "mueller2022inst": 21, "multi": 21, "multipl": [0, 15, 21], "multipli": 12, "multiresolut": 21, "must": [0, 9], "mv": 21, "my": [0, 17, 23], "my_dataload": 17, "my_dataloader_spec": 17, "my_method": 0, "my_method_spec": 0, "mymethod": 0, "m\u00fcller": 21, "n": [2, 17, 18, 19], "naama": [18, 21], "name": [2, 3, 5, 10, 16, 17], "navig": 20, "nb": [17, 23], "nb_info": [6, 7, 11, 13], "nbsp": 19, "ncol": 11, "ndarrai": [2, 4, 5, 6, 7, 8, 9, 11, 12], "ndc": 18, "ndim": 12, "near_far": 12, "nearest": 12, "nears_far": [2, 17], "necessari": [0, 15, 23], "need": [0, 2, 17, 20, 22, 23], "nerf": [7, 16, 19, 22], "nerf_neural_radiance_fields_in_scattering_media_cvpr_2023_pap": [18, 21], "nerfacto": [16, 21], "nerfbaselin": [1, 15, 17, 20, 22, 23], "nerfbaselines_backend": [16, 20], "nerfbaselines_protocol": 15, "nerfbaselines_regist": 0, "nerfevaluationprotocol": 6, "nerfonthego": [16, 21], "nerfstudio": [19, 22], "nerfw": [16, 18, 21], "nerfwevaluationprotocol": 5, "neural": [18, 21], "new": [16, 19, 23], "new_artifact": 16, "new_camera": [2, 17], "new_checkpoint": 16, "new_dataset": [2, 17], "new_nb_info": 7, "next": [0, 20, 22, 23], "ng": [18, 21], "ngp": 16, "nima": 18, "niujinshuchong": 21, "nn": 0, "no_grad": 0, "noah": 18, "nois": 9, "non": 12, "none": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "normal": 21, "note": [9, 12, 15, 21, 23], "notic": 23, "notimplementederror": 0, "notrequir": [2, 10], "novel": [19, 21], "now": [0, 12, 17, 20, 23], "np": [6, 17], "nsvf": 21, "num_bin": [2, 8], "num_iter": [0, 2, 11], "num_param": 2, "number": [0, 12, 16], "numer": [9, 12], "numpi": [0, 15, 17], "numpy_from_base64": 7, "numpy_to_base64": 7, "nvlab": 21, "nx3x3": 12, "o": [0, 16, 17, 20], "object": [0, 3, 8, 11, 12, 17, 18, 21, 23], "obtain": [5, 10, 11, 18, 21], "occlus": 18, "offer": 20, "offici": [0, 19, 21, 22, 23], "often": 20, "ohk3": 19, "onc": 0, "one": [2, 15, 23], "onli": [0, 2, 9, 15, 21, 22, 23], "opac": 16, "open": [0, 17], "open_ani": 7, "open_any_directori": 7, "openaccess": [18, 21], "opencv": [0, 2, 5, 17, 21], "opencv_fishey": [2, 5, 21], "opengl": 5, "oper": [12, 20], "oppos": 0, "optim": [0, 2, 18], "optim_st": 0, "optimize_embed": [0, 2], "optimizeembeddingsoutput": 2, "option": [0, 2, 5, 6, 11, 16, 17, 22], "orbit": 18, "orchestr": 15, "order": [0, 15, 17, 20, 23], "org": [0, 12, 18, 21], "organ": 19, "origin": [0, 21, 23], "orthogon": 12, "ortiz": 18, "other": [0, 17, 20, 21, 23], "otherwis": [2, 15, 21, 23], "our": [0, 22], "out": 5, "outdoor": 18, "output": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 21, 22], "output_artifact": 2, "output_nam": [6, 16], "output_path": [7, 23], "output_typ": 16, "output_type_dtyp": 2, "outputartifact": 2, "outsid": 18, "overlap": 23, "overrid": [0, 11, 16], "overwrit": 16, "own": [17, 22], "p": [3, 9, 12, 18, 21], "p1": 17, "p2": 17, "packag": [15, 20, 22], "pad": [11, 12], "pad_pos": 12, "padded_stack": 12, "page": [16, 19, 20], "pair": 9, "pallet": 12, "paper": [0, 5, 10, 12, 16, 18, 19, 21], "paper_author": [2, 10], "paper_link": [2, 10], "paper_titl": [2, 10], "param": [0, 9], "paramet": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 21, 23], "parametr": 18, "park": [18, 21], "pass": [0, 12], "patch": 9, "path": [0, 2, 3, 5, 6, 7, 8, 10, 16, 17, 20, 21, 23], "path_is_video": 6, "pd": 3, "pdf": [18, 21], "peak": 9, "pearl": [18, 21], "peihao": 21, "peleg": [18, 21], "peng": 21, "per": [9, 21], "perceptu": 9, "perform": [0, 9, 21, 22], "perman": 0, "perspect": 17, "peter": [18, 21], "philipp": 21, "phone": 18, "photo": 22, "photo_tour": 18, "phototour": 18, "pickl": 15, "pid": 11, "pinhol": [0, 2, 5, 21], "pip": [0, 20], "pipelin": 21, "pixel": 9, "pixelwis": 21, "place": [17, 18, 23], "placehold": 16, "plane": [2, 17], "pleas": [19, 20, 22, 23], "ply": 17, "point": [17, 21, 22, 23], "points3d": [17, 23], "points3d_indic": 17, "points3d_rgb": [2, 5, 17, 21], "points3d_xyz": [0, 2, 5, 17, 21], "poisson": 21, "pollefei": 21, "polycam": 18, "pop": 11, "port": [3, 13, 16], "pose": [2, 12, 17, 18, 21, 22], "posit": 19, "possibl": [0, 9], "power": 19, "pp": 9, "pragu": 19, "pratul": [18, 21], "pre": 15, "precis": 9, "precondit": 21, "pred": [0, 6, 9], "predefin": 0, "predict": [0, 2, 5, 6, 7, 9, 16, 22], "predictions_path": 7, "predictions_sha": 7, "prefix": [8, 17], "prepar": 7, "present": [16, 20], "preset": [0, 2, 11, 16], "pretti": 12, "previou": 22, "primarili": 21, "primit": 21, "print": 22, "prior": 23, "prioriti": 2, "privileg": 20, "problem": 21, "process": [9, 11, 15, 17, 18, 20, 21, 22], "produc": [9, 12, 16], "progress": 6, "project": [4, 19], "properti": [2, 3, 11], "protocol": [2, 6, 15, 18, 19], "protocol_nam": 3, "provid": [0, 2, 11, 15, 16, 19, 21], "psnr": 9, "pth": 0, "public": [0, 19], "publish": 23, "pull": [0, 15, 17], "pure": 12, "purpos": [0, 21], "pwd": 0, "py": [0, 17], "python": [0, 2, 3, 15, 16, 17, 21], "python_path": 3, "python_vers": [0, 3], "pytorch": [0, 6], "q": 12, "q1": 12, "q2": 12, "qian": 18, "qin": 21, "qualiti": [9, 21], "quaternion": 12, "quaternion_conjug": 12, "quaternion_multipli": 12, "quaternion_to_rotation_matrix": 12, "quickstart": 19, "quit": 12, "r": [0, 2, 7, 9, 12, 17], "radianc": [18, 21], "radiu": 18, "rai": 21, "rais": [0, 2, 12], "ramamoorthi": [18, 21], "ran": 23, "rand_idx": 0, "randint": 0, "random": 0, "rang": [9, 12], "rank": 21, "ratio": 9, "ravi": [18, 21], "raw": 20, "reach": 21, "read": 17, "read_imag": 7, "reader": 17, "readi": [15, 23], "real": 21, "realist": 18, "rebuild": 16, "receiv": 3, "recht": 21, "recommend": [0, 15, 20, 23], "reconstruct": [18, 21], "reduc": [6, 23], "refer": [21, 22], "refin": 21, "regist": 2, "registri": [0, 15], "reimpl": [16, 21], "reimplement": 19, "rel": [12, 19, 23], "releas": [15, 19, 20, 23], "reli": [15, 20], "remoteprocessrpcbackend": 3, "remov": 12, "ren": [18, 21], "render": [0, 2, 5, 6, 19, 21], "render_all_imag": 6, "render_fram": 6, "render_markdown_dataset_results_t": 10, "render_output": 2, "renderopt": 2, "renderoutputtyp": 2, "replac": 2, "replace_us": 3, "repo": 21, "report": [0, 21], "repositori": [0, 10, 16], "repres": [12, 18, 21], "represent": 18, "reproduc": [0, 2, 19], "republ": 19, "request": [0, 17], "requir": [0, 2, 3, 16, 19, 20, 21, 22], "required_featur": [0, 2], "rerun": 16, "resav": 0, "rescal": 22, "research": [19, 21], "reshap": 17, "resiz": 23, "resize_full_imag": 5, "resolut": [16, 23], "resources_utilization_info": 7, "resourcesutilizationinfo": 11, "restart": 20, "restor": 0, "result": [0, 1, 6, 12, 19, 23], "results_path": 10, "return": [0, 2, 5, 6, 9, 10, 11, 12, 17], "return_map": 9, "reus": 9, "revers": 15, "rgb": 17, "ricardo": 21, "richard": 18, "right": 18, "robust": 12, "rodrigo": 18, "root": 23, "rosenbaum": [18, 21], "rot": 12, "rotat": 12, "rotate_spherical_harmon": 12, "rotation_matrix_to_quaternion": 12, "row": [12, 17], "ruilong": [18, 21], "run": [0, 12, 15, 16, 19, 21, 22, 23], "run_inside_eval_contain": 6, "run_lpips_vgg": 6, "run_on_host": 3, "run_viser_view": 13, "runtim": 20, "rwn17": 21, "sacr": 18, "safer": 23, "salahi": [18, 21], "sam": 21, "same": [0, 17, 19, 20, 23], "sampl": [0, 17, 21], "sampling_mask": 2, "sampling_mask_path": [2, 17], "sampling_mask_paths_root": [2, 17], "sampling_masks_path": 5, "sara": 21, "sarafridov": 21, "satisfi": 0, "sattler": [19, 21], "save": [0, 2, 11, 16, 22], "save_cameras_npz": 7, "save_depth": 7, "save_evaluation_result": 7, "save_imag": 7, "save_it": [11, 16], "save_output_artifact": 7, "save_predict": 7, "save_trajectori": 7, "scalar": 12, "scale": [12, 18], "scanner": 18, "scatter": [18, 21], "scene": [2, 5, 10, 17, 18, 21, 22, 23], "sceneinfo": 10, "schi": 21, "schoenberger2016mv": 21, "sch\u0151nberger": 21, "scienc": 19, "script": 22, "sea": [18, 21], "seamless": 21, "seathru": 16, "second": [9, 10], "section": [19, 22], "sed": 20, "see": [0, 12, 17, 19, 20, 22], "seen": 22, "seitz": 18, "select": [2, 15, 21], "selector": 19, "self": [0, 2], "semi": 18, "send": 3, "sent": 15, "separ": [15, 16], "sequenc": [2, 3, 8, 9, 15, 18], "serial": 15, "serialize_evaluation_result": 7, "serialize_nb_info": 7, "server": 15, "set": [2, 6, 9, 11, 12, 15, 16, 18, 20, 22, 23], "setdiff1d": 17, "setup": [15, 19], "sever": [19, 21], "sgs24": 19, "sh": 20, "shallow": 21, "shape": [12, 17], "share": [15, 20], "shared_memory_nam": 3, "shared_memory_s": 3, "sharedmemoryprotocol": 3, "sheikh": 9, "shell": 3, "ship": 5, "shm": 15, "should": [0, 9, 10, 11, 17, 22, 23], "show": [0, 22, 23], "side": 18, "siggraph": 5, "sigma": 9, "sign": 20, "signal": 9, "similar": [0, 9, 20], "simon": [18, 21], "simoncelli": 9, "simpl": 0, "simplebackend": 3, "simpler": 12, "simpli": [0, 23], "simplifi": 17, "sinc": 23, "singl": [0, 2, 22], "singular": 15, "size": [2, 9, 12, 17, 23], "skip": [0, 22, 23], "slice": [5, 12], "slow": 20, "slower": [12, 21], "small": [9, 18], "smaller": 23, "snave": 18, "so": [0, 19], "solut": 12, "some": [12, 15, 20, 22], "someth": 12, "songyou": 21, "sort": 2, "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 20], "space": [9, 12, 18, 21], "spars": [21, 23], "spec": [2, 3, 10, 11, 16, 17], "special": [11, 16], "specif": [2, 15, 22], "specifi": [0, 12, 17, 22, 23], "speed": 21, "sphere": 18, "spheric": 12, "spinlock": 15, "spiral": 21, "splat": [16, 22], "split": [5, 11, 16, 17, 18, 22, 23], "sport": 19, "squar": 9, "src": 19, "srgb": 12, "srinivasan": [18, 21], "ssim": 9, "stabl": 20, "stack": [12, 17], "standard": [9, 22], "start": [0, 15, 20, 22], "start_dev_serv": 14, "start_host": 3, "stat": 0, "state_dict": 0, "static": [12, 21], "static_cal": 3, "step": [0, 2, 8, 11, 12, 16, 21, 23], "stereo": 21, "steven": 18, "stop": 12, "storag": 18, "str": [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14], "strongli": 0, "structur": [9, 17], "studio": [18, 21], "style": 19, "su": 21, "subdirectori": 8, "suboptim": 15, "subsequ": 15, "subset": [5, 12, 18], "successfulli": 0, "sudo": 20, "suffici": 15, "sum": 11, "summari": 8, "sun": 21, "super": 0, "suppli": 16, "support": [0, 2, 15, 19, 20, 21, 22, 23], "supported_camera_model": [0, 2, 5, 6], "supported_output": [0, 2], "surfac": 21, "svg": 19, "switch": 19, "synchron": 15, "synthesi": [18, 19, 21], "synthet": 18, "system": [15, 17, 20, 23], "systemctl": 20, "szeliski": 18, "t": [0, 2, 18, 20, 21, 22], "t2": 18, "tabl": 10, "tag": [2, 8], "take": [11, 15, 17, 18], "tali": [18, 21], "tancik": [18, 21], "tank": 22, "tanksandtempl": 18, "tar": [16, 22], "target": 9, "tcp": 15, "tcppickleprotocol": 3, "tdataset": 5, "technic": 19, "tee": 20, "templ": 22, "tension": 2, "tensor": [0, 7, 9, 12, 21], "tensorboard": [7, 8, 16, 22], "tensorboard_path": 7, "tensorboardlogg": 8, "tensorboardloggerev": 8, "tensorf": 16, "tensori": 21, "term": 12, "termin": 22, "terranc": [18, 21], "test": [5, 17, 18, 22, 23], "test_dataset": 11, "test_indic": [5, 17], "test_list": 23, "tester": 21, "tetra": 16, "tetrahedr": 21, "tetrahedra": 21, "text": [2, 8], "tf": 9, "th": 18, "than": 12, "thank": 19, "thecvf": [18, 21], "thei": [15, 19, 20], "them": [12, 19], "therefor": [0, 19, 23], "thi": [0, 9, 11, 12, 15, 17, 19, 20, 21, 22, 23], "thoma": 21, "though": 12, "thread": 12, "three": [0, 15, 18], "through": [17, 19], "throughout": 12, "thru": [18, 21], "time": [15, 18, 21], "timeout": 3, "titl": [2, 8, 19], "token": 12, "tool": 20, "toolkit": 20, "top": 19, "torch": 0, "torchmetr": 9, "torchmetrics_ssim": 9, "torchvis": 0, "torsten": [19, 21], "total": 12, "total_train_tim": 7, "tourism": 22, "tourist": 18, "train": [0, 1, 2, 5, 12, 17, 18, 21, 23], "train_dataset": [0, 2, 11], "train_dataset_metadata": 7, "train_iter": [0, 2, 11], "train_list": 23, "trainer": [2, 11], "trajectori": [2, 6, 7, 18], "trajectory_get_camera": 6, "trajectory_get_embed": 6, "trajectoryfram": 2, "trajectoryframeappear": 2, "trajectorykeyfram": 2, "transact": 9, "transfer": 15, "transform": [9, 12], "transient": 21, "transition_dur": 2, "treibitz": [18, 21], "trevi": 18, "tri": 0, "true": [0, 5, 6, 7, 9], "truth": [9, 18], "try": [17, 22], "ttensor": [2, 4, 12], "ttensor_co": 2, "tupl": [2, 3, 4, 5, 6, 9, 11, 12, 14], "tutori": [0, 23], "two": [0, 12], "txt": 23, "type": [2, 10, 11, 12, 15, 16, 17, 23], "typeddict": [2, 3, 10, 11], "ubuntu": 20, "uint8": 17, "unam": 20, "unbound": [18, 21], "uncertainti": 21, "unconstrain": 21, "under": [17, 18, 21], "understand": 18, "underwat": [18, 21], "undistort_camera": 4, "unifi": [15, 19], "uniform": 9, "unit": 12, "univers": 19, "unknown": [3, 17, 21], "unload": 5, "unloadeddataset": [2, 5, 17], "unoffici": 21, "unpad_pos": 12, "unprivileg": 20, "unproject": 4, "unstructur": 21, "unsur": 15, "until": 15, "updat": [0, 11, 20], "upgrad": 15, "upload": [7, 22], "url": [0, 2, 7, 22], "us": [0, 5, 6, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22], "use_nerfw_split": 5, "user": [0, 11, 20, 23], "usermod": 20, "usp": 5, "usr": 20, "usual": 18, "utf": 19, "util": [0, 1, 11], "v": [12, 16], "valid": [7, 11], "valu": [2, 8, 9, 15, 17], "vari": [18, 20], "variabl": [0, 12, 15, 16, 20], "variat": 18, "variou": [0, 17, 18, 20, 23], "vector": 12, "venv": 20, "verbin": [18, 21], "verbos": 16, "veri": 21, "verif": 0, "verifi": 0, "version": [12, 15, 16, 19], "video": [18, 22], "view": [18, 19, 21, 22], "viewer": [1, 19], "viridi": 12, "virtual": 20, "viser": 19, "visibl": 9, "visit": [5, 19], "visual": 22, "visualize_depth": 12, "vladlen": 18, "vol": [9, 12], "w": [0, 7, 9, 17, 18], "wa": [9, 18, 19, 21], "wai": [0, 19, 21], "wait_for_work": 3, "walk": 17, "walkthrough": 22, "wandb": [16, 22], "wandblogg": 8, "wandbloggerev": 8, "wang": [9, 18, 21], "want": [17, 20, 22, 23], "warburg": 21, "warp_image_between_camera": 4, "washington": 18, "we": [0, 12, 15, 17, 18, 19, 20, 22, 23], "web": [1, 18, 19, 21, 22], "weber": [18, 21], "websit": [10, 16, 19, 20, 22], "weight": 22, "wein": 21, "weird": 12, "weitao": 21, "well": [0, 21], "were": [11, 18, 23], "wget": 7, "when": [9, 11, 12, 15, 16, 22, 23], "where": [6, 12, 15, 18, 23], "whether": [12, 16], "which": [0, 11, 15, 17, 19, 20, 21, 22, 23], "while": [0, 23], "white": 18, "whl": 0, "wide": 21, "width": 17, "wild": [16, 18, 21], "window": 9, "with_supported_camera_model": 6, "without": [0, 10, 17], "work": [0, 2, 15, 19, 22], "worker": 15, "world": [2, 17, 21], "would": [12, 17, 19, 23], "wrap": 19, "written": 6, "www": [18, 21], "xml": 19, "xu": 21, "xy": 4, "xyz": 4, "y": [12, 20], "year": [18, 19], "yet": 20, "yi": [18, 19, 21], "yield": 0, "you": [0, 5, 12, 15, 17, 19, 20, 22, 23], "your": [0, 15, 17, 19, 20, 22, 23], "youth": 19, "yu": 21, "z": 9, "zehao": 21, "zero": [12, 17], "zero_grad": 0, "zexiang": 21, "zhang": 21, "zheng": 21, "zhou": 18, "zhu": 21, "zihan": 21, "zip": 22, "zipnerf": [16, 21], "zshrc": 20, "\u00b9": 12, "\u211b": 12}, "titles": ["Adding new methods", "API Reference", "nerfbaselines", "nerfbaselines.backends", "nerfbaselines.cameras", "nerfbaselines.datasets", "nerfbaselines.evaluation", "nerfbaselines.io", "nerfbaselines.logging", "nerfbaselines.metrics", "nerfbaselines.results", "nerfbaselines.training", "nerfbaselines.utils", "nerfbaselines.viewer", "nerfbaselines.web", "Isolated backends", "nerfbaselines", "Custom dataset loader", "Datasets", "NerfBaselines documentation", "Installation", "Methods", "Quickstart", "Using custom data"], "titleterms": {"360": [18, 21], "On": 21, "acknowledg": 19, "ad": 0, "advanc": 19, "api": 1, "apptain": 20, "artifact": 16, "backend": [3, 15], "benchmark": 22, "blender": [5, 18], "build": 16, "bundler": 5, "camera": [4, 22, 23], "camp": 21, "checkpoint": 16, "citat": 19, "colmap": [5, 21], "commun": 15, "conda": 20, "content": 19, "creat": [0, 17], "custom": [17, 23], "data": 23, "dataset": [5, 16, 17, 18, 23], "demo": 16, "dev": 16, "docker": 20, "document": 19, "download": 16, "evalu": [6, 16], "export": 16, "featur": 19, "field": 21, "file": 0, "fix": 16, "function": 17, "g": 21, "gaussian": 21, "gener": 16, "go": 21, "gpu": 20, "imag": 22, "instal": [16, 20], "instanc": 17, "instant": 21, "introduct": [0, 15, 23], "io": 7, "isol": 15, "k": 21, "launch": 22, "llff": [5, 18], "loader": 17, "log": 8, "main": 19, "method": [0, 16, 21], "metric": 9, "mip": [18, 21], "mipnerf360": 5, "model": 22, "modul": 0, "nerf": [18, 21], "nerfbaselin": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19], "nerfonthego": 5, "nerfstudio": [5, 18, 21], "new": [0, 17], "ngp": 21, "nvidia": 20, "obtain": 23, "opac": 21, "output": 16, "photo": 18, "phototour": 5, "plane": 21, "pose": 23, "pre": 20, "protocol_shm_pickl": 3, "protocol_tcp_pickl": 3, "public": 22, "quickstart": 22, "refer": [1, 19], "regist": [0, 17], "reimplement": 21, "releas": 0, "render": [16, 22], "requisit": 20, "result": [10, 16, 22], "seathru": [18, 21], "seathru_nerf": 5, "shell": 16, "spec": 0, "splat": 21, "tank": 18, "tanksandtempl": 5, "templ": 18, "tensorf": 21, "test": [0, 16], "tetra": 21, "tourism": 18, "train": [11, 16, 22], "trajectori": [16, 22], "us": 23, "util": 12, "viewer": [13, 16, 22], "w": 21, "web": [14, 16], "wildgaussian": 21, "write": 17, "zip": 21}})
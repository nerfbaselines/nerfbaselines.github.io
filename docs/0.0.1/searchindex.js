Search.setIndex({"alltitles": {"API Reference": [[0, null]], "NerfBaselines Documentation": [[12, null]], "Reference": [[12, null]], "nerfbaselines": [[1, null], [11, null]], "nerfbaselines.backends": [[2, null]], "nerfbaselines.backends.conda": [[2, "module-nerfbaselines.backends.conda"]], "nerfbaselines.backends.docker": [[2, "module-nerfbaselines.backends.docker"]], "nerfbaselines.communication": [[3, null]], "nerfbaselines.datasets": [[4, null]], "nerfbaselines.distortion": [[5, null]], "nerfbaselines.registry": [[6, null]], "nerfbaselines.render": [[7, null]], "nerfbaselines.train": [[8, null]], "nerfbaselines.types": [[9, null]], "nerfbaselines.utils": [[10, null]], "render": [[11, "nerfbaselines-render"]], "train": [[11, "nerfbaselines-train"]]}, "docnames": ["api/modules", "api/nerfbaselines", "api/nerfbaselines.backends", "api/nerfbaselines.communication", "api/nerfbaselines.datasets", "api/nerfbaselines.distortion", "api/nerfbaselines.registry", "api/nerfbaselines.render", "api/nerfbaselines.train", "api/nerfbaselines.types", "api/nerfbaselines.utils", "cli", "index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/modules.rst", "api/nerfbaselines.rst", "api/nerfbaselines.backends.rst", "api/nerfbaselines.communication.rst", "api/nerfbaselines.datasets.rst", "api/nerfbaselines.distortion.rst", "api/nerfbaselines.registry.rst", "api/nerfbaselines.render.rst", "api/nerfbaselines.train.rst", "api/nerfbaselines.types.rst", "api/nerfbaselines.utils.rst", "cli.rst", "index.md"], "indexentries": {"--backend": [[11, "cmdoption-nerfbaselines-render-backend", false], [11, "cmdoption-nerfbaselines-train-backend", false]], "--checkpoint": [[11, "cmdoption-nerfbaselines-render-checkpoint", false], [11, "cmdoption-nerfbaselines-train-checkpoint", false]], "--data": [[11, "cmdoption-nerfbaselines-render-data", false], [11, "cmdoption-nerfbaselines-train-data", false]], "--method": [[11, "cmdoption-nerfbaselines-train-method", false]], "--no-wandb": [[11, "cmdoption-nerfbaselines-train-no-wandb", false]], "--output": [[11, "cmdoption-nerfbaselines-render-output", false], [11, "cmdoption-nerfbaselines-train-output", false]], "--split": [[11, "cmdoption-nerfbaselines-render-split", false]], "--verbose": [[11, "cmdoption-nerfbaselines-render-v", false], [11, "cmdoption-nerfbaselines-train-v", false]], "-v": [[11, "cmdoption-nerfbaselines-render-v", false], [11, "cmdoption-nerfbaselines-train-v", false]], "apptainer (nerfbaselines.registry.methodspec attribute)": [[6, "nerfbaselines.registry.MethodSpec.apptainer", false]], "args (nerfbaselines.registry.methodspec attribute)": [[6, "nerfbaselines.registry.MethodSpec.args", false]], "authkey (nerfbaselines.communication.connectionparams attribute)": [[3, "nerfbaselines.communication.ConnectionParams.authkey", false]], "auto_register() (in module nerfbaselines.registry)": [[6, "nerfbaselines.registry.auto_register", false]], "batch_size (nerfbaselines.types.methodinfo attribute)": [[9, "nerfbaselines.types.MethodInfo.batch_size", false]], "batched() (in module nerfbaselines.types)": [[9, "nerfbaselines.types.batched", false]], "batched() (in module nerfbaselines.utils)": [[10, "nerfbaselines.utils.batched", false]], "build() (nerfbaselines.registry.methodspec method)": [[6, "nerfbaselines.registry.MethodSpec.build", false]], "build_code (nerfbaselines.communication.remoteprocessmethod attribute)": [[3, "nerfbaselines.communication.RemoteProcessMethod.build_code", false]], "camera_distortions (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.camera_distortions", false]], "camera_intrinsics (nerfbaselines.types.dataset property)": [[9, "nerfbaselines.types.Dataset.camera_intrinsics", false]], "camera_intrinsics_normalized (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.camera_intrinsics_normalized", false]], "camera_poses (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.camera_poses", false]], "camera_types (nerfbaselines.distortion.distortions attribute)": [[5, "nerfbaselines.distortion.Distortions.camera_types", false]], "cameramodel (class in nerfbaselines.distortion)": [[5, "nerfbaselines.distortion.CameraModel", false]], "cat() (nerfbaselines.distortion.distortions class method)": [[5, "nerfbaselines.distortion.Distortions.cat", false]], "close() (nerfbaselines.communication.remotemethod method)": [[3, "nerfbaselines.communication.RemoteMethod.close", false]], "close() (nerfbaselines.communication.remoteprocessmethod method)": [[3, "nerfbaselines.communication.RemoteProcessMethod.close", false]], "close() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.close", false]], "color_space (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.color_space", false]], "compute_exponential_gamma() (in module nerfbaselines.train)": [[8, "nerfbaselines.train.compute_exponential_gamma", false]], "compute_image_metrics() (in module nerfbaselines.train)": [[8, "nerfbaselines.train.compute_image_metrics", false]], "conda (nerfbaselines.registry.methodspec attribute)": [[6, "nerfbaselines.registry.MethodSpec.conda", false]], "connectionparams (class in nerfbaselines.communication)": [[3, "nerfbaselines.communication.ConnectionParams", false]], "convert_image_dtype() (in module nerfbaselines.utils)": [[10, "nerfbaselines.utils.convert_image_dtype", false]], "currentprogress (class in nerfbaselines.types)": [[9, "nerfbaselines.types.CurrentProgress", false]], "dataset (class in nerfbaselines.types)": [[9, "nerfbaselines.types.Dataset", false]], "decode_args() (nerfbaselines.communication.remotemethod static method)": [[3, "nerfbaselines.communication.RemoteMethod.decode_args", false]], "distort() (nerfbaselines.distortion.distortions method)": [[5, "nerfbaselines.distortion.Distortions.distort", false]], "distortion_params (nerfbaselines.distortion.distortions attribute)": [[5, "nerfbaselines.distortion.Distortions.distortion_params", false]], "distortions (class in nerfbaselines.distortion)": [[5, "nerfbaselines.distortion.Distortions", false]], "docker (nerfbaselines.registry.methodspec attribute)": [[6, "nerfbaselines.registry.MethodSpec.docker", false]], "encoded_args (nerfbaselines.communication.remotemethod property)": [[3, "nerfbaselines.communication.RemoteMethod.encoded_args", false]], "ensure_loggers_initialized() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.ensure_loggers_initialized", false]], "eval_all() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.eval_all", false]], "eval_batch_size (nerfbaselines.types.methodinfo attribute)": [[9, "nerfbaselines.types.MethodInfo.eval_batch_size", false]], "eval_single() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.eval_single", false]], "every_iters() (nerfbaselines.utils.indices class method)": [[10, "nerfbaselines.utils.Indices.every_iters", false]], "file_paths (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.file_paths", false]], "file_paths_root (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.file_paths_root", false]], "format() (nerfbaselines.utils.formatter method)": [[10, "nerfbaselines.utils.Formatter.format", false]], "formatter (class in nerfbaselines.utils)": [[10, "nerfbaselines.utils.Formatter", false]], "get() (in module nerfbaselines.registry)": [[6, "nerfbaselines.registry.get", false]], "get_default_backend() (nerfbaselines.registry.methodspec method)": [[6, "nerfbaselines.registry.MethodSpec.get_default_backend", false]], "get_rays() (in module nerfbaselines.utils)": [[10, "nerfbaselines.utils.get_rays", false]], "i (nerfbaselines.types.currentprogress attribute)": [[9, "nerfbaselines.types.CurrentProgress.i", false]], "image_i (nerfbaselines.types.currentprogress attribute)": [[9, "nerfbaselines.types.CurrentProgress.image_i", false]], "image_sizes (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.image_sizes", false]], "image_total (nerfbaselines.types.currentprogress attribute)": [[9, "nerfbaselines.types.CurrentProgress.image_total", false]], "images (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.images", false]], "implemented_backends (nerfbaselines.registry.methodspec property)": [[6, "nerfbaselines.registry.MethodSpec.implemented_backends", false]], "indices (class in nerfbaselines.utils)": [[10, "nerfbaselines.utils.Indices", false]], "info (nerfbaselines.communication.remotemethod property)": [[3, "nerfbaselines.communication.RemoteMethod.info", false]], "info (nerfbaselines.types.method property)": [[9, "nerfbaselines.types.Method.info", false]], "inject_callables() (in module nerfbaselines.communication)": [[3, "nerfbaselines.communication.inject_callables", false]], "install() (nerfbaselines.communication.remoteprocessmethod method)": [[3, "nerfbaselines.communication.RemoteProcessMethod.install", false]], "install() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.install", false]], "kwargs (nerfbaselines.registry.methodspec attribute)": [[6, "nerfbaselines.registry.MethodSpec.kwargs", false]], "linear_to_srgb() (in module nerfbaselines.utils)": [[10, "nerfbaselines.utils.linear_to_srgb", false]], "loaded_step (nerfbaselines.types.methodinfo attribute)": [[9, "nerfbaselines.types.MethodInfo.loaded_step", false]], "log_metrics() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.log_metrics", false]], "make_grid() (in module nerfbaselines.train)": [[8, "nerfbaselines.train.make_grid", false]], "metadata (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.metadata", false]], "method (class in nerfbaselines.types)": [[9, "nerfbaselines.types.Method", false]], "method (nerfbaselines.registry.methodspec attribute)": [[6, "nerfbaselines.registry.MethodSpec.method", false]], "methodinfo (class in nerfbaselines.types)": [[9, "nerfbaselines.types.MethodInfo", false]], "methodspec (class in nerfbaselines.registry)": [[6, "nerfbaselines.registry.MethodSpec", false]], "module": [[1, "module-nerfbaselines", false], [2, "module-nerfbaselines.backends", false], [2, "module-nerfbaselines.backends.conda", false], [2, "module-nerfbaselines.backends.docker", false], [3, "module-nerfbaselines.communication", false], [4, "module-nerfbaselines.datasets", false], [5, "module-nerfbaselines.distortion", false], [6, "module-nerfbaselines.registry", false], [7, "module-nerfbaselines.render", false], [8, "module-nerfbaselines.train", false], [9, "module-nerfbaselines.types", false], [10, "module-nerfbaselines.utils", false]], "nears_fars (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.nears_fars", false]], "nerfbaselines": [[1, "module-nerfbaselines", false]], "nerfbaselines-render command line option": [[11, "cmdoption-nerfbaselines-render-backend", false], [11, "cmdoption-nerfbaselines-render-checkpoint", false], [11, "cmdoption-nerfbaselines-render-data", false], [11, "cmdoption-nerfbaselines-render-output", false], [11, "cmdoption-nerfbaselines-render-split", false], [11, "cmdoption-nerfbaselines-render-v", false]], "nerfbaselines-train command line option": [[11, "cmdoption-nerfbaselines-train-backend", false], [11, "cmdoption-nerfbaselines-train-checkpoint", false], [11, "cmdoption-nerfbaselines-train-data", false], [11, "cmdoption-nerfbaselines-train-method", false], [11, "cmdoption-nerfbaselines-train-no-wandb", false], [11, "cmdoption-nerfbaselines-train-output", false], [11, "cmdoption-nerfbaselines-train-v", false]], "nerfbaselines.backends": [[2, "module-nerfbaselines.backends", false]], "nerfbaselines.backends.conda": [[2, "module-nerfbaselines.backends.conda", false]], "nerfbaselines.backends.docker": [[2, "module-nerfbaselines.backends.docker", false]], "nerfbaselines.communication": [[3, "module-nerfbaselines.communication", false]], "nerfbaselines.datasets": [[4, "module-nerfbaselines.datasets", false]], "nerfbaselines.distortion": [[5, "module-nerfbaselines.distortion", false]], "nerfbaselines.registry": [[6, "module-nerfbaselines.registry", false]], "nerfbaselines.render": [[7, "module-nerfbaselines.render", false]], "nerfbaselines.train": [[8, "module-nerfbaselines.train", false]], "nerfbaselines.types": [[9, "module-nerfbaselines.types", false]], "nerfbaselines.utils": [[10, "module-nerfbaselines.utils", false]], "num_iterations (nerfbaselines.types.methodinfo attribute)": [[9, "nerfbaselines.types.MethodInfo.num_iterations", false]], "opencv (nerfbaselines.distortion.cameramodel attribute)": [[5, "nerfbaselines.distortion.CameraModel.OPENCV", false]], "opencv_fisheye (nerfbaselines.distortion.cameramodel attribute)": [[5, "nerfbaselines.distortion.CameraModel.OPENCV_FISHEYE", false]], "partialclass() (in module nerfbaselines.utils)": [[10, "nerfbaselines.utils.partialclass", false]], "partialmethod() (in module nerfbaselines.utils)": [[10, "nerfbaselines.utils.partialmethod", false]], "pinhole (nerfbaselines.distortion.cameramodel attribute)": [[5, "nerfbaselines.distortion.CameraModel.PINHOLE", false]], "points3d_rgb (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.points3D_rgb", false]], "points3d_xyz (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.points3D_xyz", false]], "port (nerfbaselines.communication.connectionparams attribute)": [[3, "nerfbaselines.communication.ConnectionParams.port", false]], "python_path (nerfbaselines.communication.remoteprocessmethod attribute)": [[3, "nerfbaselines.communication.RemoteProcessMethod.python_path", false]], "raymethod (class in nerfbaselines.types)": [[9, "nerfbaselines.types.RayMethod", false]], "register() (in module nerfbaselines.registry)": [[6, "nerfbaselines.registry.register", false]], "register() (nerfbaselines.registry.methodspec method)": [[6, "nerfbaselines.registry.MethodSpec.register", false]], "remotecallable (class in nerfbaselines.communication)": [[3, "nerfbaselines.communication.RemoteCallable", false]], "remotemethod (class in nerfbaselines.communication)": [[3, "nerfbaselines.communication.RemoteMethod", false]], "remoteprocessmethod (class in nerfbaselines.communication)": [[3, "nerfbaselines.communication.RemoteProcessMethod", false]], "render() (nerfbaselines.communication.remotemethod method)": [[3, "nerfbaselines.communication.RemoteMethod.render", false]], "render() (nerfbaselines.types.method method)": [[9, "nerfbaselines.types.Method.render", false]], "render() (nerfbaselines.types.raymethod method)": [[9, "nerfbaselines.types.RayMethod.render", false]], "render_all_images() (in module nerfbaselines.render)": [[7, "nerfbaselines.render.render_all_images", false]], "render_rays() (nerfbaselines.types.raymethod method)": [[9, "nerfbaselines.types.RayMethod.render_rays", false]], "replace_callables() (in module nerfbaselines.communication)": [[3, "nerfbaselines.communication.replace_callables", false]], "required_features (nerfbaselines.types.methodinfo attribute)": [[9, "nerfbaselines.types.MethodInfo.required_features", false]], "sampling_mask_paths (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.sampling_mask_paths", false]], "sampling_masks (nerfbaselines.types.dataset attribute)": [[9, "nerfbaselines.types.Dataset.sampling_masks", false]], "save() (nerfbaselines.communication.remotemethod method)": [[3, "nerfbaselines.communication.RemoteMethod.save", false]], "save() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.save", false]], "save() (nerfbaselines.types.method method)": [[9, "nerfbaselines.types.Method.save", false]], "setup_data() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.setup_data", false]], "setup_logging() (in module nerfbaselines.utils)": [[10, "nerfbaselines.utils.setup_logging", false]], "setup_train() (nerfbaselines.communication.remotemethod method)": [[3, "nerfbaselines.communication.RemoteMethod.setup_train", false]], "setup_train() (nerfbaselines.types.method method)": [[9, "nerfbaselines.types.Method.setup_train", false]], "setup_train() (nerfbaselines.types.raymethod method)": [[9, "nerfbaselines.types.RayMethod.setup_train", false]], "shared_path (nerfbaselines.communication.remotemethod property)": [[3, "nerfbaselines.communication.RemoteMethod.shared_path", false]], "srgb_to_linear() (in module nerfbaselines.utils)": [[10, "nerfbaselines.utils.srgb_to_linear", false]], "start_backend() (in module nerfbaselines.communication)": [[3, "nerfbaselines.communication.start_backend", false]], "supported_methods() (in module nerfbaselines.registry)": [[6, "nerfbaselines.registry.supported_methods", false]], "supports_undistortion (nerfbaselines.types.methodinfo attribute)": [[9, "nerfbaselines.types.MethodInfo.supports_undistortion", false]], "total (nerfbaselines.types.currentprogress attribute)": [[9, "nerfbaselines.types.CurrentProgress.total", false]], "train() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.train", false]], "train_iteration() (nerfbaselines.communication.remotemethod method)": [[3, "nerfbaselines.communication.RemoteMethod.train_iteration", false]], "train_iteration() (nerfbaselines.train.trainer method)": [[8, "nerfbaselines.train.Trainer.train_iteration", false]], "train_iteration() (nerfbaselines.types.method method)": [[9, "nerfbaselines.types.Method.train_iteration", false]], "train_iteration() (nerfbaselines.types.raymethod method)": [[9, "nerfbaselines.types.RayMethod.train_iteration", false]], "train_iteration_rays() (nerfbaselines.types.raymethod method)": [[9, "nerfbaselines.types.RayMethod.train_iteration_rays", false]], "trainer (class in nerfbaselines.train)": [[8, "nerfbaselines.train.Trainer", false]], "wrap() (nerfbaselines.communication.remoteprocessmethod class method)": [[3, "nerfbaselines.communication.RemoteProcessMethod.wrap", false]]}, "objects": {"": [[1, 0, 0, "-", "nerfbaselines"]], "nerfbaselines": [[2, 0, 0, "-", "backends"], [3, 0, 0, "-", "communication"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "distortion"], [6, 0, 0, "-", "registry"], [7, 0, 0, "-", "render"], [8, 0, 0, "-", "train"], [9, 0, 0, "-", "types"], [10, 0, 0, "-", "utils"]], "nerfbaselines-render": [[11, 6, 1, "cmdoption-nerfbaselines-render-backend", "--backend"], [11, 6, 1, "cmdoption-nerfbaselines-render-checkpoint", "--checkpoint"], [11, 6, 1, "cmdoption-nerfbaselines-render-data", "--data"], [11, 6, 1, "cmdoption-nerfbaselines-render-output", "--output"], [11, 6, 1, "cmdoption-nerfbaselines-render-split", "--split"], [11, 6, 1, "cmdoption-nerfbaselines-render-v", "--verbose"], [11, 6, 1, "cmdoption-nerfbaselines-render-v", "-v"]], "nerfbaselines-train": [[11, 6, 1, "cmdoption-nerfbaselines-train-backend", "--backend"], [11, 6, 1, "cmdoption-nerfbaselines-train-checkpoint", "--checkpoint"], [11, 6, 1, "cmdoption-nerfbaselines-train-data", "--data"], [11, 6, 1, "cmdoption-nerfbaselines-train-method", "--method"], [11, 6, 1, "cmdoption-nerfbaselines-train-no-wandb", "--no-wandb"], [11, 6, 1, "cmdoption-nerfbaselines-train-output", "--output"], [11, 6, 1, "cmdoption-nerfbaselines-train-v", "--verbose"], [11, 6, 1, "cmdoption-nerfbaselines-train-v", "-v"]], "nerfbaselines.backends": [[2, 0, 0, "-", "conda"], [2, 0, 0, "-", "docker"]], "nerfbaselines.communication": [[3, 1, 1, "", "ConnectionParams"], [3, 1, 1, "", "RemoteCallable"], [3, 1, 1, "", "RemoteMethod"], [3, 1, 1, "", "RemoteProcessMethod"], [3, 5, 1, "", "inject_callables"], [3, 5, 1, "", "replace_callables"], [3, 5, 1, "", "start_backend"]], "nerfbaselines.communication.ConnectionParams": [[3, 2, 1, "", "authkey"], [3, 2, 1, "", "port"]], "nerfbaselines.communication.RemoteMethod": [[3, 3, 1, "", "close"], [3, 3, 1, "", "decode_args"], [3, 4, 1, "", "encoded_args"], [3, 4, 1, "", "info"], [3, 3, 1, "", "render"], [3, 3, 1, "", "save"], [3, 3, 1, "", "setup_train"], [3, 4, 1, "", "shared_path"], [3, 3, 1, "", "train_iteration"]], "nerfbaselines.communication.RemoteProcessMethod": [[3, 2, 1, "", "build_code"], [3, 3, 1, "", "close"], [3, 3, 1, "", "install"], [3, 2, 1, "", "python_path"], [3, 3, 1, "", "wrap"]], "nerfbaselines.distortion": [[5, 1, 1, "", "CameraModel"], [5, 1, 1, "", "Distortions"]], "nerfbaselines.distortion.CameraModel": [[5, 2, 1, "", "OPENCV"], [5, 2, 1, "", "OPENCV_FISHEYE"], [5, 2, 1, "", "PINHOLE"]], "nerfbaselines.distortion.Distortions": [[5, 2, 1, "", "camera_types"], [5, 3, 1, "", "cat"], [5, 3, 1, "", "distort"], [5, 2, 1, "", "distortion_params"]], "nerfbaselines.registry": [[6, 1, 1, "", "MethodSpec"], [6, 5, 1, "", "auto_register"], [6, 5, 1, "", "get"], [6, 5, 1, "", "register"], [6, 5, 1, "", "supported_methods"]], "nerfbaselines.registry.MethodSpec": [[6, 2, 1, "", "apptainer"], [6, 2, 1, "", "args"], [6, 3, 1, "", "build"], [6, 2, 1, "", "conda"], [6, 2, 1, "", "docker"], [6, 3, 1, "", "get_default_backend"], [6, 4, 1, "", "implemented_backends"], [6, 2, 1, "", "kwargs"], [6, 2, 1, "", "method"], [6, 3, 1, "", "register"]], "nerfbaselines.render": [[7, 5, 1, "", "render_all_images"]], "nerfbaselines.train": [[8, 1, 1, "", "Trainer"], [8, 5, 1, "", "compute_exponential_gamma"], [8, 5, 1, "", "compute_image_metrics"], [8, 5, 1, "", "make_grid"]], "nerfbaselines.train.Trainer": [[8, 3, 1, "", "close"], [8, 3, 1, "", "ensure_loggers_initialized"], [8, 3, 1, "", "eval_all"], [8, 3, 1, "", "eval_single"], [8, 3, 1, "", "install"], [8, 3, 1, "", "log_metrics"], [8, 3, 1, "", "save"], [8, 3, 1, "", "setup_data"], [8, 3, 1, "", "train"], [8, 3, 1, "", "train_iteration"]], "nerfbaselines.types": [[9, 1, 1, "", "CurrentProgress"], [9, 1, 1, "", "Dataset"], [9, 1, 1, "", "Method"], [9, 1, 1, "", "MethodInfo"], [9, 1, 1, "", "RayMethod"], [9, 5, 1, "", "batched"]], "nerfbaselines.types.CurrentProgress": [[9, 2, 1, "", "i"], [9, 2, 1, "", "image_i"], [9, 2, 1, "", "image_total"], [9, 2, 1, "", "total"]], "nerfbaselines.types.Dataset": [[9, 2, 1, "", "camera_distortions"], [9, 4, 1, "", "camera_intrinsics"], [9, 2, 1, "", "camera_intrinsics_normalized"], [9, 2, 1, "", "camera_poses"], [9, 2, 1, "", "color_space"], [9, 2, 1, "", "file_paths"], [9, 2, 1, "", "file_paths_root"], [9, 2, 1, "", "image_sizes"], [9, 2, 1, "", "images"], [9, 2, 1, "", "metadata"], [9, 2, 1, "", "nears_fars"], [9, 2, 1, "", "points3D_rgb"], [9, 2, 1, "", "points3D_xyz"], [9, 2, 1, "", "sampling_mask_paths"], [9, 2, 1, "", "sampling_masks"]], "nerfbaselines.types.Method": [[9, 4, 1, "", "info"], [9, 3, 1, "", "render"], [9, 3, 1, "", "save"], [9, 3, 1, "", "setup_train"], [9, 3, 1, "", "train_iteration"]], "nerfbaselines.types.MethodInfo": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "eval_batch_size"], [9, 2, 1, "", "loaded_step"], [9, 2, 1, "", "num_iterations"], [9, 2, 1, "", "required_features"], [9, 2, 1, "", "supports_undistortion"]], "nerfbaselines.types.RayMethod": [[9, 3, 1, "", "render"], [9, 3, 1, "", "render_rays"], [9, 3, 1, "", "setup_train"], [9, 3, 1, "", "train_iteration"], [9, 3, 1, "", "train_iteration_rays"]], "nerfbaselines.utils": [[10, 1, 1, "", "Formatter"], [10, 1, 1, "", "Indices"], [10, 5, 1, "", "batched"], [10, 5, 1, "", "convert_image_dtype"], [10, 5, 1, "", "get_rays"], [10, 5, 1, "", "linear_to_srgb"], [10, 5, 1, "", "partialclass"], [10, 5, 1, "", "partialmethod"], [10, 5, 1, "", "setup_logging"], [10, 5, 1, "", "srgb_to_linear"]], "nerfbaselines.utils.Formatter": [[10, 3, 1, "", "format"]], "nerfbaselines.utils.Indices": [[10, 3, 1, "", "every_iters"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "std:cmdoption"}, "terms": {"": 10, "0": [5, 8], "1": [5, 8], "1920": 8, "2": [5, 8], "42": 9, "If": 10, "Near": [3, 9], "The": 10, "abstract": 9, "address": 3, "ani": 6, "api": 12, "append": 10, "apptain": [6, 11], "apptainermethod": 6, "ar": 10, "arg": [3, 6, 9, 10, 11], "arrai": [9, 10], "attribut": 10, "authkei": 3, "auto_regist": 6, "backend": [0, 6, 11], "background": 8, "base": [3, 5, 6, 8, 9, 10], "batch": [9, 10], "batch_siz": [9, 10], "befor": 10, "big": 11, "bool": [8, 9, 10], "boundari": 5, "build": 6, "build_cod": 3, "built": 9, "byte": 3, "call": 10, "callabl": [3, 8, 9], "callback": [3, 9], "camera": [3, 9], "camera_distort": 9, "camera_intrins": [9, 10], "camera_intrinsics_norm": 9, "camera_pos": [9, 10], "camera_typ": 5, "cameramodel": 5, "carri": 10, "cat": 5, "checkpoint": [3, 11], "cl": 10, "class": [3, 5, 6, 8, 9, 10], "classmethod": [3, 5, 10], "cli": 12, "close": [3, 8], "color": 9, "color_spac": [8, 9], "command": 11, "commun": 0, "comput": 10, "compute_exponential_gamma": 8, "compute_image_metr": 8, "conda": [6, 11], "condamethod": 6, "conn": 3, "connection_param": 3, "connectionparam": 3, "convert_image_dtyp": 10, "coupl": 10, "current": [3, 9], "currentprogress": 9, "data": [3, 9, 11], "dataset": [0, 3, 7, 8, 9], "datefmt": 10, "decode_arg": 3, "default": [3, 9, 10], "determin": 10, "dict": [6, 9], "dictionari": 10, "direct": [5, 9], "directori": 11, "distort": [0, 3, 9, 10], "distortion_param": 5, "docker": [6, 11], "dockermethod": 6, "dtype": 10, "encoded_arg": 3, "ensure_loggers_initi": 8, "enum": 5, "etc": [3, 9], "eval_al": 8, "eval_all_it": 8, "eval_batch_s": 9, "eval_singl": 8, "eval_single_it": 8, "event": 10, "every_it": 10, "except": 10, "factori": [3, 6, 9], "fals": [6, 9, 10], "far": [3, 9], "file": 11, "file_path": 9, "file_paths_root": 9, "final_lr": 8, "float": 8, "fmt": 10, "forc": 6, "format": 10, "formatexcept": 10, "formatt": 10, "formattim": 10, "frozenset": [6, 9], "func": 10, "function": 9, "gaussian": 11, "get": [3, 6, 9], "get_default_backend": 6, "get_rai": 10, "getmessag": 10, "given": 5, "gt": 8, "gz": 11, "huge": 11, "i": [3, 9, 10], "imag": [3, 8, 9, 10], "image_i": 9, "image_s": 9, "image_tot": 9, "img": 10, "implemented_backend": 6, "indic": [8, 10], "info": [3, 9], "inform": 10, "initial_lr": 8, "inject_cal": 3, "instal": [3, 8], "instant": 11, "int": [3, 8, 9, 10], "intrins": [3, 9], "iter": [3, 9, 10], "kwarg": [3, 6, 9, 10], "latest": 11, "linear": [8, 9], "linear_to_srgb": 10, "list": 9, "liter": [6, 8, 9], "loaded_step": 9, "localhost": 3, "log_metr": 8, "logrecord": 10, "make_grid": 8, "max_width": 8, "messag": 10, "metadata": 9, "method": [3, 6, 7, 8, 9, 11], "methodinfo": [3, 9], "methodspec": 6, "metric": 8, "model": [3, 9], "modul": 5, "my_id": 3, "name": [5, 6], "ncol": 8, "ndarrai": [5, 9, 10], "nears_far": [3, 9], "nerf": 11, "nerfacto": 11, "nerfbaselin": 0, "ngp": 11, "none": [3, 5, 6, 8, 9, 10], "num_it": 8, "num_iter": [3, 8, 9], "number": [3, 9], "numpi": [5, 9], "obj": 3, "object": [3, 5, 6, 8, 9, 10], "one": [3, 9], "opencv": 5, "opencv_fishey": 5, "oper": 10, "operand": 10, "optim": [3, 9], "option": [6, 9, 11], "origin": 9, "out": 10, "output": [7, 8, 11], "pad": 8, "param": 3, "paramet": [3, 9], "partialclass": 10, "partialmethod": 10, "path": [3, 7, 8, 9], "pathlib": [8, 9], "pinhol": 5, "plane": [3, 9], "points3d_rgb": 9, "points3d_xyz": 9, "port": 3, "pose": [3, 9], "posixpath": 8, "pred": 8, "prefix": 8, "preparatori": 10, "progress": [3, 9], "progress_callback": [3, 9], "properti": [3, 6, 9], "protocol": 9, "python": [3, 6, 11], "python_path": 3, "qualnam": 5, "rai": 9, "raymethod": 9, "record": 10, "regist": 6, "registri": 0, "remote_kwarg": 3, "remotecal": 3, "remotemethod": 3, "remoteprocessmethod": 3, "render": [0, 3, 9, 12], "render_all_imag": 7, "render_rai": 9, "replace_cal": 3, "requir": 11, "required_featur": 9, "return": [3, 9, 10], "sampling_mask": 9, "sampling_mask_path": 9, "save": [3, 8, 9], "save_it": 8, "seed": 9, "setup": [3, 9], "setup_data": 8, "setup_log": 10, "setup_train": [3, 9], "shared_path": 3, "size": [3, 9], "sourc": [3, 5, 6, 7, 8, 9, 10], "spec": 6, "specifi": 10, "splat": 11, "split": 11, "srgb": [8, 9], "srgb_to_linear": 10, "start": 5, "start_backend": 3, "static": 3, "step": [3, 9, 10], "str": [3, 6, 8, 9], "string": 10, "style": 10, "supported_method": 6, "supports_undistort": 9, "tar": 11, "test_dataset": 8, "tetra": 11, "text": 10, "time": 10, "total": 9, "train": [0, 3, 9, 12], "train_dataset": [3, 8, 9], "train_iter": [3, 8, 9], "train_iteration_rai": 9, "trainer": [3, 8, 9], "true": [8, 10], "tupl": [3, 6, 10], "type": [0, 3, 5, 6, 8], "us": [10, 11], "use_wandb": 8, "usestim": 10, "util": [0, 8], "v": 11, "valid": 10, "valu": 5, "verbos": [10, 11], "wandb": 11, "which": 10, "wrap": 3, "xy": 10, "yield": 10, "zero": 10}, "titles": ["API Reference", "nerfbaselines", "nerfbaselines.backends", "nerfbaselines.communication", "nerfbaselines.datasets", "nerfbaselines.distortion", "nerfbaselines.registry", "nerfbaselines.render", "nerfbaselines.train", "nerfbaselines.types", "nerfbaselines.utils", "nerfbaselines", "NerfBaselines Documentation"], "titleterms": {"api": 0, "backend": 2, "commun": 3, "conda": 2, "dataset": 4, "distort": 5, "docker": 2, "document": 12, "nerfbaselin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "refer": [0, 12], "registri": 6, "render": [7, 11], "train": [8, 11], "type": 9, "util": 10}})
Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Blender": [[18, "blender"]], "Datasets": [[18, null]], "Gaussian Opacity Fields": [[20, "gaussian-opacity-fields"]], "Gaussian Splatting": [[20, "gaussian-splatting"]], "Instant NGP": [[20, "instant-ngp"]], "K-Planes": [[20, "kplanes"]], "Methods": [[20, null]], "Mip-NeRF 360": [[18, "mipnerf360"], [20, "mipnerf360"]], "Mip-Splatting": [[20, "mip-splatting"]], "NeRF": [[20, "nerf"]], "NeRF On-the-go": [[20, "nerfonthego"]], "NeRF-W (reimplementation)": [[20, "nerfw-reimpl"]], "NerfBaselines Documentation": [[19, null]], "NerfStudio": [[20, "nerfacto"]], "Nerfstudio": [[18, "nerfstudio"]], "Reference": [[19, null]], "TRIPS": [[20, "trips"]], "Tanks and Temples": [[18, "tanksandtemples"]], "TensoRF": [[20, "tensorf"]], "Tetra-NeRF": [[20, "tetra-nerf"]], "Zip-NeRF": [[20, "zipnerf"], [20, "camp"]], "download-dataset": [[17, "nerfbaselines-download-dataset"]], "evaluate": [[17, "nerfbaselines-evaluate"]], "export-demo": [[17, "nerfbaselines-export-demo"]], "fix-checkpoint": [[17, "nerfbaselines-fix-checkpoint"]], "fix-output-artifact": [[17, "nerfbaselines-fix-output-artifact"]], "generate-dataset-results": [[17, "nerfbaselines-generate-dataset-results"]], "generate-web": [[17, "nerfbaselines-generate-web"]], "nerfbaselines": [[1, null], [17, null]], "nerfbaselines.backends": [[2, null]], "nerfbaselines.cameras": [[3, null]], "nerfbaselines.datasets": [[4, null]], "nerfbaselines.datasets.blender": [[4, "module-nerfbaselines.datasets.blender"]], "nerfbaselines.datasets.bundler": [[4, "module-nerfbaselines.datasets.bundler"]], "nerfbaselines.datasets.colmap": [[4, "module-nerfbaselines.datasets.colmap"]], "nerfbaselines.datasets.llff": [[4, "module-nerfbaselines.datasets.llff"]], "nerfbaselines.datasets.mipnerf360": [[4, "module-nerfbaselines.datasets.mipnerf360"]], "nerfbaselines.datasets.nerfstudio": [[4, "module-nerfbaselines.datasets.nerfstudio"]], "nerfbaselines.datasets.phototourism": [[4, "module-nerfbaselines.datasets.phototourism"]], "nerfbaselines.datasets.tanksandtemples": [[4, "module-nerfbaselines.datasets.tanksandtemples"]], "nerfbaselines.evaluation": [[5, null]], "nerfbaselines.io": [[6, null]], "nerfbaselines.logging": [[7, null]], "nerfbaselines.math_utils": [[8, null]], "nerfbaselines.metrics": [[9, null]], "nerfbaselines.pose_utils": [[10, null]], "nerfbaselines.registry": [[11, null]], "nerfbaselines.results": [[12, null]], "nerfbaselines.training": [[13, null]], "nerfbaselines.types": [[14, null]], "nerfbaselines.utils": [[15, null]], "nerfbaselines.viewer": [[16, null]], "nerfbaselines.viewer.viser": [[16, "module-nerfbaselines.viewer.viser"]], "render": [[17, "nerfbaselines-render"]], "render-trajectory": [[17, "nerfbaselines-render-trajectory"]], "shell": [[17, "nerfbaselines-shell"]], "test-method": [[17, "nerfbaselines-test-method"]], "train": [[17, "nerfbaselines-train"]], "viewer": [[17, "nerfbaselines-viewer"]]}, "docnames": ["api/modules", "api/nerfbaselines", "api/nerfbaselines.backends", "api/nerfbaselines.cameras", "api/nerfbaselines.datasets", "api/nerfbaselines.evaluation", "api/nerfbaselines.io", "api/nerfbaselines.logging", "api/nerfbaselines.math_utils", "api/nerfbaselines.metrics", "api/nerfbaselines.pose_utils", "api/nerfbaselines.registry", "api/nerfbaselines.results", "api/nerfbaselines.training", "api/nerfbaselines.types", "api/nerfbaselines.utils", "api/nerfbaselines.viewer", "cli", "datasets", "index", "methods"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/modules.rst", "api/nerfbaselines.rst", "api/nerfbaselines.backends.rst", "api/nerfbaselines.cameras.rst", "api/nerfbaselines.datasets.rst", "api/nerfbaselines.evaluation.rst", "api/nerfbaselines.io.rst", "api/nerfbaselines.logging.rst", "api/nerfbaselines.math_utils.rst", "api/nerfbaselines.metrics.rst", "api/nerfbaselines.pose_utils.rst", "api/nerfbaselines.registry.rst", "api/nerfbaselines.results.rst", "api/nerfbaselines.training.rst", "api/nerfbaselines.types.rst", "api/nerfbaselines.utils.rst", "api/nerfbaselines.viewer.rst", "cli.rst", "datasets.md", "index.md", "methods.md"], "indexentries": {"--backend": [[17, "cmdoption-nerfbaselines-export-demo-backend", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-render-trajectory-backend", false], [17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-test-method-backend", false], [17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-viewer-backend", false]], "--checkpoint": [[17, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false]], "--data": [[17, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-test-method-data", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-viewer-data", false]], "--dataset": [[17, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false]], "--datasets": [[17, "cmdoption-nerfbaselines-generate-web-datasets", false]], "--disable-output-artifact": [[17, "cmdoption-nerfbaselines-train-disable-output-artifact", false]], "--eval-all-iters": [[17, "cmdoption-nerfbaselines-train-eval-all-iters", false]], "--eval-few-iters": [[17, "cmdoption-nerfbaselines-train-eval-few-iters", false]], "--fast": [[17, "cmdoption-nerfbaselines-test-method-fast", false]], "--force": [[17, "cmdoption-nerfbaselines-fix-output-artifact-force", false]], "--force-output-artifact": [[17, "cmdoption-nerfbaselines-train-force-output-artifact", false]], "--inplace": [[17, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false]], "--input": [[17, "cmdoption-nerfbaselines-fix-output-artifact-input", false]], "--logger": [[17, "cmdoption-nerfbaselines-train-logger", false]], "--method": [[17, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [17, "cmdoption-nerfbaselines-shell-method", false], [17, "cmdoption-nerfbaselines-test-method-method", false], [17, "cmdoption-nerfbaselines-train-method", false]], "--method-links": [[17, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false]], "--new-checkpoint": [[17, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false]], "--output": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [17, "cmdoption-nerfbaselines-generate-web-output", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-render-trajectory-output", false], [17, "cmdoption-nerfbaselines-train-output", false]], "--output-type": [[17, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false], [17, "cmdoption-nerfbaselines-render-trajectory-output-type", false]], "--port": [[17, "cmdoption-nerfbaselines-viewer-port", false]], "--rebuild-checkpoint": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false]], "--rerun-evaluation": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false]], "--rerun-render": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false]], "--results": [[17, "cmdoption-nerfbaselines-generate-dataset-results-results", false]], "--sandbox-node": [[17, "cmdoption-nerfbaselines-generate-web-sandbox-node", false]], "--save-iters": [[17, "cmdoption-nerfbaselines-train-save-iters", false]], "--set": [[17, "cmdoption-nerfbaselines-fix-checkpoint-set", false], [17, "cmdoption-nerfbaselines-test-method-set", false], [17, "cmdoption-nerfbaselines-train-set", false]], "--source": [[17, "cmdoption-nerfbaselines-generate-web-source", false]], "--split": [[17, "cmdoption-nerfbaselines-render-split", false]], "--steps": [[17, "cmdoption-nerfbaselines-test-method-steps", false]], "--trajectory": [[17, "cmdoption-nerfbaselines-render-trajectory-trajectory", false]], "--verbose": [[17, "cmdoption-nerfbaselines-download-dataset-v", false], [17, "cmdoption-nerfbaselines-export-demo-v", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-v", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-v", false], [17, "cmdoption-nerfbaselines-generate-web-v", false], [17, "cmdoption-nerfbaselines-render-trajectory-v", false], [17, "cmdoption-nerfbaselines-render-v", false], [17, "cmdoption-nerfbaselines-shell-v", false], [17, "cmdoption-nerfbaselines-test-method-v", false], [17, "cmdoption-nerfbaselines-train-v", false], [17, "cmdoption-nerfbaselines-viewer-v", false]], "-o": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false], [17, "cmdoption-nerfbaselines-export-demo-o", false]], "-v": [[17, "cmdoption-nerfbaselines-download-dataset-v", false], [17, "cmdoption-nerfbaselines-export-demo-v", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-v", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-v", false], [17, "cmdoption-nerfbaselines-generate-web-v", false], [17, "cmdoption-nerfbaselines-render-trajectory-v", false], [17, "cmdoption-nerfbaselines-render-v", false], [17, "cmdoption-nerfbaselines-shell-v", false], [17, "cmdoption-nerfbaselines-test-method-v", false], [17, "cmdoption-nerfbaselines-train-v", false], [17, "cmdoption-nerfbaselines-viewer-v", false]], "accumulate_metrics() (nerfbaselines.datasets.phototourism.evaluationprotocol method)": [[4, "nerfbaselines.datasets.phototourism.EvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[4, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[5, "nerfbaselines.evaluation.DefaultEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.types.evaluationprotocol method)": [[14, "nerfbaselines.types.EvaluationProtocol.accumulate_metrics", false]], "accumulation (nerfbaselines.renderoutput attribute)": [[1, "nerfbaselines.RenderOutput.accumulation", false]], "add_dataset_views() (nerfbaselines.viewer.viser.viserviewer method)": [[16, "nerfbaselines.viewer.viser.ViserViewer.add_dataset_views", false]], "add_embedding() (nerfbaselines.logging.baselogger method)": [[7, "nerfbaselines.logging.BaseLogger.add_embedding", false]], "add_embedding() (nerfbaselines.logging.baseloggerevent method)": [[7, "nerfbaselines.logging.BaseLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.tensorboardloggerevent method)": [[7, "nerfbaselines.logging.TensorboardLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.wandbloggerevent method)": [[7, "nerfbaselines.logging.WandbLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.types.logger method)": [[14, "nerfbaselines.types.Logger.add_embedding", false]], "add_embedding() (nerfbaselines.types.loggerevent method)": [[14, "nerfbaselines.types.LoggerEvent.add_embedding", false]], "add_event() (nerfbaselines.logging.baselogger method)": [[7, "nerfbaselines.logging.BaseLogger.add_event", false]], "add_event() (nerfbaselines.logging.concatlogger method)": [[7, "nerfbaselines.logging.ConcatLogger.add_event", false]], "add_event() (nerfbaselines.logging.tensorboardlogger method)": [[7, "nerfbaselines.logging.TensorboardLogger.add_event", false]], "add_event() (nerfbaselines.logging.wandblogger method)": [[7, "nerfbaselines.logging.WandbLogger.add_event", false]], "add_event() (nerfbaselines.types.logger method)": [[14, "nerfbaselines.types.Logger.add_event", false]], "add_histogram() (nerfbaselines.logging.tensorboardloggerevent method)": [[7, "nerfbaselines.logging.TensorboardLoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.logging.wandbloggerevent method)": [[7, "nerfbaselines.logging.WandbLoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.types.loggerevent method)": [[14, "nerfbaselines.types.LoggerEvent.add_histogram", false]], "add_hparams() (nerfbaselines.logging.baselogger method)": [[7, "nerfbaselines.logging.BaseLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.concatlogger method)": [[7, "nerfbaselines.logging.ConcatLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.tensorboardlogger method)": [[7, "nerfbaselines.logging.TensorboardLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.wandblogger method)": [[7, "nerfbaselines.logging.WandbLogger.add_hparams", false]], "add_image() (nerfbaselines.logging.baselogger method)": [[7, "nerfbaselines.logging.BaseLogger.add_image", false]], "add_image() (nerfbaselines.logging.baseloggerevent method)": [[7, "nerfbaselines.logging.BaseLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.tensorboardloggerevent method)": [[7, "nerfbaselines.logging.TensorboardLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.wandbloggerevent method)": [[7, "nerfbaselines.logging.WandbLoggerEvent.add_image", false]], "add_image() (nerfbaselines.types.logger method)": [[14, "nerfbaselines.types.Logger.add_image", false]], "add_image() (nerfbaselines.types.loggerevent method)": [[14, "nerfbaselines.types.LoggerEvent.add_image", false]], "add_initial_point_cloud() (nerfbaselines.viewer.viser.viserviewer method)": [[16, "nerfbaselines.viewer.viser.ViserViewer.add_initial_point_cloud", false]], "add_plot() (nerfbaselines.logging.baseloggerevent method)": [[7, "nerfbaselines.logging.BaseLoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.logging.wandbloggerevent method)": [[7, "nerfbaselines.logging.WandbLoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.types.loggerevent method)": [[14, "nerfbaselines.types.LoggerEvent.add_plot", false]], "add_scalar() (nerfbaselines.logging.baselogger method)": [[7, "nerfbaselines.logging.BaseLogger.add_scalar", false]], "add_scalar() (nerfbaselines.logging.baseloggerevent method)": [[7, "nerfbaselines.logging.BaseLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.tensorboardloggerevent method)": [[7, "nerfbaselines.logging.TensorboardLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.wandbloggerevent method)": [[7, "nerfbaselines.logging.WandbLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.types.logger method)": [[14, "nerfbaselines.types.Logger.add_scalar", false]], "add_scalar() (nerfbaselines.types.loggerevent method)": [[14, "nerfbaselines.types.LoggerEvent.add_scalar", false]], "add_text() (nerfbaselines.logging.baselogger method)": [[7, "nerfbaselines.logging.BaseLogger.add_text", false]], "add_text() (nerfbaselines.logging.baseloggerevent method)": [[7, "nerfbaselines.logging.BaseLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.tensorboardloggerevent method)": [[7, "nerfbaselines.logging.TensorboardLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.wandbloggerevent method)": [[7, "nerfbaselines.logging.WandbLoggerEvent.add_text", false]], "add_text() (nerfbaselines.types.logger method)": [[14, "nerfbaselines.types.Logger.add_text", false]], "add_text() (nerfbaselines.types.loggerevent method)": [[14, "nerfbaselines.types.LoggerEvent.add_text", false]], "appearance (nerfbaselines.types.trajectorykeyframe attribute)": [[14, "nerfbaselines.types.TrajectoryKeyframe.appearance", false]], "appearance (nerfbaselines.viewer.viser.trajectorykeyframe attribute)": [[16, "nerfbaselines.viewer.viser.TrajectoryKeyframe.appearance", false]], "appearance_train_index (nerfbaselines.viewer.viser.keyframe attribute)": [[16, "nerfbaselines.viewer.viser.Keyframe.appearance_train_index", false]], "appearance_weights (nerfbaselines.types.trajectoryframe attribute)": [[14, "nerfbaselines.types.TrajectoryFrame.appearance_weights", false]], "appearance_weights (nerfbaselines.viewer.viser.trajectoryframe attribute)": [[16, "nerfbaselines.viewer.viser.TrajectoryFrame.appearance_weights", false]], "appearances (nerfbaselines.types.trajectory attribute)": [[14, "nerfbaselines.types.Trajectory.appearances", false]], "appearances (nerfbaselines.viewer.viser.trajectory attribute)": [[16, "nerfbaselines.viewer.viser.Trajectory.appearances", false]], "apply() (nerfbaselines.types.genericcameras method)": [[14, "nerfbaselines.types.GenericCameras.apply", false]], "apply() (nerfbaselines.types.genericcamerasimpl method)": [[14, "nerfbaselines.types.GenericCamerasImpl.apply", false]], "apply_colormap() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.apply_colormap", false]], "apply_colormap() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.apply_colormap", false]], "apply_transform() (in module nerfbaselines.pose_utils)": [[10, "nerfbaselines.pose_utils.apply_transform", false]], "apply_transform() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.apply_transform", false]], "apptainer (nerfbaselines.registry.methodspec attribute)": [[11, "nerfbaselines.registry.MethodSpec.apptainer", false]], "apptainerbackend (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.ApptainerBackend", false]], "apptainerbackendspec (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.ApptainerBackendSpec", false]], "ascending (nerfbaselines.results.metricinfo attribute)": [[12, "nerfbaselines.results.MetricInfo.ascending", false]], "assert_not_none() (in module nerfbaselines.datasets.tanksandtemples)": [[4, "nerfbaselines.datasets.tanksandtemples.assert_not_none", false]], "assert_not_none() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.assert_not_none", false]], "assert_not_none() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.assert_not_none", false]], "assert_not_none() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.assert_not_none", false]], "autobind() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.autobind", false]], "b (nerfbaselines.viewer.viser.viewerstate property)": [[16, "nerfbaselines.viewer.viser.ViewerState.b", false]], "backend (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.Backend", false]], "backends_order (nerfbaselines.registry.methodspec attribute)": [[11, "nerfbaselines.registry.MethodSpec.backends_order", false]], "background_color (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.background_color", false]], "baselogger (class in nerfbaselines.logging)": [[7, "nerfbaselines.logging.BaseLogger", false]], "baseloggerevent (class in nerfbaselines.logging)": [[7, "nerfbaselines.logging.BaseLoggerEvent", false]], "batch_size (nerfbaselines.modelinfo attribute)": [[1, "nerfbaselines.ModelInfo.batch_size", false]], "batched() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.batched", false]], "bindablesource (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.BindableSource", false]], "bindableviserserver (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.BindableViserServer", false]], "build_evaluation_protocol() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.build_evaluation_protocol", false]], "build_measure_iter_time() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.build_measure_iter_time", false]], "build_method() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.build_method", false]], "build_script (nerfbaselines.backends.dockerbackendspec attribute)": [[2, "nerfbaselines.backends.DockerBackendSpec.build_script", false]], "camera (class in nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.Camera", false]], "camera_frustums_test (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_frustums_test", false]], "camera_frustums_train (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_frustums_train", false]], "camera_model (nerfbaselines.types.trajectory attribute)": [[14, "nerfbaselines.types.Trajectory.camera_model", false]], "camera_model (nerfbaselines.viewer.viser.trajectory attribute)": [[16, "nerfbaselines.viewer.viser.Trajectory.camera_model", false]], "camera_model_from_int() (in module nerfbaselines.types)": [[14, "nerfbaselines.types.camera_model_from_int", false]], "camera_model_to_int() (in module nerfbaselines.datasets.blender)": [[4, "nerfbaselines.datasets.blender.camera_model_to_int", false]], "camera_model_to_int() (in module nerfbaselines.datasets.bundler)": [[4, "nerfbaselines.datasets.bundler.camera_model_to_int", false]], "camera_model_to_int() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.camera_model_to_int", false]], "camera_model_to_int() (in module nerfbaselines.datasets.llff)": [[4, "nerfbaselines.datasets.llff.camera_model_to_int", false]], "camera_model_to_int() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.camera_model_to_int", false]], "camera_model_to_int() (in module nerfbaselines.types)": [[14, "nerfbaselines.types.camera_model_to_int", false]], "camera_path_default_transition_duration (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_path_default_transition_duration", false]], "camera_path_framerate (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_path_framerate", false]], "camera_path_interpolation (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_path_interpolation", false]], "camera_path_keyframes (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_path_keyframes", false]], "camera_path_loop (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_path_loop", false]], "camera_path_move_keyframes (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_path_move_keyframes", false]], "camera_path_show_keyframes (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_path_show_keyframes", false]], "camera_path_show_spline (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_path_show_spline", false]], "camera_path_tension (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.camera_path_tension", false]], "camera_types (nerfbaselines.types.genericcameras property)": [[14, "nerfbaselines.types.GenericCameras.camera_types", false]], "camera_types (nerfbaselines.types.genericcamerasimpl attribute)": [[14, "nerfbaselines.types.GenericCamerasImpl.camera_types", false]], "cameras (class in nerfbaselines)": [[1, "nerfbaselines.Cameras", false]], "cameras (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.cameras", false]], "cameras (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.cameras", false]], "cameras (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.cameras", false]], "cameras (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.cameras", false]], "cameras (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.cameras", false]], "cancel() (nerfbaselines.utils.cancellationtoken method)": [[15, "nerfbaselines.utils.CancellationToken.cancel", false]], "cancel() (nerfbaselines.viewer.viser.eventcancellationtoken method)": [[16, "nerfbaselines.viewer.viser.EventCancellationToken.cancel", false]], "cancellable() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.cancellable", false]], "cancellationtoken (class in nerfbaselines.utils)": [[15, "nerfbaselines.utils.CancellationToken", false]], "cancelled (nerfbaselines.utils.cancellationtoken property)": [[15, "nerfbaselines.utils.CancellationToken.cancelled", false]], "cancelled (nerfbaselines.viewer.viser.eventcancellationtoken property)": [[16, "nerfbaselines.viewer.viser.EventCancellationToken.cancelled", false]], "cancelledexception": [[15, "nerfbaselines.utils.CancelledException", false], [16, "nerfbaselines.viewer.viser.CancelledException", false]], "cast_value() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.cast_value", false]], "cat() (nerfbaselines.types.genericcameras class method)": [[14, "nerfbaselines.types.GenericCameras.cat", false]], "cat() (nerfbaselines.types.genericcamerasimpl class method)": [[14, "nerfbaselines.types.GenericCamerasImpl.cat", false]], "color (nerfbaselines.renderoutput attribute)": [[1, "nerfbaselines.RenderOutput.color", false]], "compile_dataset_results() (in module nerfbaselines.results)": [[12, "nerfbaselines.results.compile_dataset_results", false]], "composite_depth (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.composite_depth", false]], "compute_metrics() (in module nerfbaselines.evaluation)": [[5, "nerfbaselines.evaluation.compute_metrics", false]], "concatlogger (class in nerfbaselines.logging)": [[7, "nerfbaselines.logging.ConcatLogger", false]], "concatloggerevent (class in nerfbaselines.logging)": [[7, "nerfbaselines.logging.ConcatLoggerEvent", false]], "conda (nerfbaselines.registry.methodspec attribute)": [[11, "nerfbaselines.registry.MethodSpec.conda", false]], "conda_spec (nerfbaselines.backends.apptainerbackendspec attribute)": [[2, "nerfbaselines.backends.ApptainerBackendSpec.conda_spec", false]], "conda_spec (nerfbaselines.backends.dockerbackendspec attribute)": [[2, "nerfbaselines.backends.DockerBackendSpec.conda_spec", false]], "condabackend (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.CondaBackend", false]], "condabackendspec (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.CondaBackendSpec", false]], "convert() (nerfbaselines.utils.indicesclicktype method)": [[15, "nerfbaselines.utils.IndicesClickType.convert", false]], "convert() (nerfbaselines.utils.setparamoptiontype method)": [[15, "nerfbaselines.utils.SetParamOptionType.convert", false]], "convert_image_dtype() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.convert_image_dtype", false]], "dataset": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false]], "dataset (class in nerfbaselines.datasets)": [[4, "nerfbaselines.datasets.Dataset", false]], "dataset (class in nerfbaselines.types)": [[14, "nerfbaselines.types.Dataset", false]], "dataset (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.Dataset", false]], "dataset_index_select() (in module nerfbaselines.datasets)": [[4, "nerfbaselines.datasets.dataset_index_select", false]], "dataset_index_select() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.dataset_index_select", false]], "dataset_load_features() (in module nerfbaselines.datasets)": [[4, "nerfbaselines.datasets.dataset_load_features", false]], "dataset_load_features() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.dataset_load_features", false]], "dataset_overrides (nerfbaselines.registry.methodspec attribute)": [[11, "nerfbaselines.registry.MethodSpec.dataset_overrides", false]], "datasetinfo (class in nerfbaselines.results)": [[12, "nerfbaselines.results.DatasetInfo", false]], "datasetnotfounderror": [[4, "nerfbaselines.datasets.DatasetNotFoundError", false]], "datasetspec (class in nerfbaselines.registry)": [[11, "nerfbaselines.registry.DatasetSpec", false]], "datasetspecmetadata (class in nerfbaselines.types)": [[14, "nerfbaselines.types.DatasetSpecMetadata", false]], "default_appearance (nerfbaselines.types.imagesetinterpolationsource attribute)": [[14, "nerfbaselines.types.ImageSetInterpolationSource.default_appearance", false]], "default_appearance (nerfbaselines.types.kochanekbartelsinterpolationsource attribute)": [[14, "nerfbaselines.types.KochanekBartelsInterpolationSource.default_appearance", false]], "default_appearance (nerfbaselines.viewer.viser.kochanekbartelsinterpolationsource attribute)": [[16, "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource.default_appearance", false]], "default_cuda_archs (nerfbaselines.backends.apptainerbackendspec attribute)": [[2, "nerfbaselines.backends.ApptainerBackendSpec.default_cuda_archs", false]], "default_cuda_archs (nerfbaselines.backends.dockerbackendspec attribute)": [[2, "nerfbaselines.backends.DockerBackendSpec.default_cuda_archs", false]], "default_fov (nerfbaselines.types.imagesetinterpolationsource attribute)": [[14, "nerfbaselines.types.ImageSetInterpolationSource.default_fov", false]], "default_fov (nerfbaselines.types.kochanekbartelsinterpolationsource attribute)": [[14, "nerfbaselines.types.KochanekBartelsInterpolationSource.default_fov", false]], "default_fov (nerfbaselines.viewer.viser.kochanekbartelsinterpolationsource attribute)": [[16, "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource.default_fov", false]], "default_metric (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.default_metric", false]], "default_metric (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.default_metric", false]], "default_transition_duration (nerfbaselines.types.imagesetinterpolationsource attribute)": [[14, "nerfbaselines.types.ImageSetInterpolationSource.default_transition_duration", false]], "default_transition_duration (nerfbaselines.types.kochanekbartelsinterpolationsource attribute)": [[14, "nerfbaselines.types.KochanekBartelsInterpolationSource.default_transition_duration", false]], "default_transition_duration (nerfbaselines.viewer.viser.kochanekbartelsinterpolationsource attribute)": [[16, "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource.default_transition_duration", false]], "defaultevaluationprotocol (class in nerfbaselines.evaluation)": [[5, "nerfbaselines.evaluation.DefaultEvaluationProtocol", false]], "depth (nerfbaselines.renderoutput attribute)": [[1, "nerfbaselines.RenderOutput.depth", false]], "description (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.description", false]], "description (nerfbaselines.results.metricinfo attribute)": [[12, "nerfbaselines.results.MetricInfo.description", false]], "description (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.description", false]], "deserialize_nb_info() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.deserialize_nb_info", false]], "deserialize_nb_info() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.deserialize_nb_info", false]], "distortion_parameters (nerfbaselines.types.genericcameras property)": [[14, "nerfbaselines.types.GenericCameras.distortion_parameters", false]], "distortion_parameters (nerfbaselines.types.genericcamerasimpl attribute)": [[14, "nerfbaselines.types.GenericCamerasImpl.distortion_parameters", false]], "dmpix_ssim() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.dmpix_ssim", false]], "docker (nerfbaselines.registry.methodspec attribute)": [[11, "nerfbaselines.registry.MethodSpec.docker", false]], "dockerbackend (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.DockerBackend", false]], "dockerbackendspec (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.DockerBackendSpec", false]], "download_blender_dataset() (in module nerfbaselines.datasets.blender)": [[4, "nerfbaselines.datasets.blender.download_blender_dataset", false]], "download_capture_name() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.download_capture_name", false]], "download_dataset() (in module nerfbaselines.datasets)": [[4, "nerfbaselines.datasets.download_dataset", false]], "download_dataset_function (nerfbaselines.registry.datasetspec attribute)": [[11, "nerfbaselines.registry.DatasetSpec.download_dataset_function", false]], "download_llff_dataset() (in module nerfbaselines.datasets.llff)": [[4, "nerfbaselines.datasets.llff.download_llff_dataset", false]], "download_mipnerf360_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[4, "nerfbaselines.datasets.mipnerf360.download_mipnerf360_dataset", false]], "download_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.download_nerfstudio_dataset", false]], "download_phototourism_dataset() (in module nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.download_phototourism_dataset", false]], "download_tanksandtemples_dataset() (in module nerfbaselines.datasets.tanksandtemples)": [[4, "nerfbaselines.datasets.tanksandtemples.download_tanksandtemples_dataset", false]], "downloaddatasetfunction (class in nerfbaselines.types)": [[14, "nerfbaselines.types.DownloadDatasetFunction", false]], "embedding (nerfbaselines.optimizeembeddingsoutput attribute)": [[1, "nerfbaselines.OptimizeEmbeddingsOutput.embedding", false]], "embedding (nerfbaselines.types.trajectoryframeappearance attribute)": [[14, "nerfbaselines.types.TrajectoryFrameAppearance.embedding", false]], "embedding (nerfbaselines.viewer.viser.trajectoryframeappearance attribute)": [[16, "nerfbaselines.viewer.viser.TrajectoryFrameAppearance.embedding", false]], "embedding_train_index (nerfbaselines.types.trajectoryframeappearance attribute)": [[14, "nerfbaselines.types.TrajectoryFrameAppearance.embedding_train_index", false]], "embedding_train_index (nerfbaselines.viewer.viser.trajectoryframeappearance attribute)": [[16, "nerfbaselines.viewer.viser.TrajectoryFrameAppearance.embedding_train_index", false]], "environment_name (nerfbaselines.backends.apptainerbackendspec attribute)": [[2, "nerfbaselines.backends.ApptainerBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.condabackendspec attribute)": [[2, "nerfbaselines.backends.CondaBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.dockerbackendspec attribute)": [[2, "nerfbaselines.backends.DockerBackendSpec.environment_name", false]], "eval_all() (in module nerfbaselines.training)": [[13, "nerfbaselines.training.eval_all", false]], "eval_all() (nerfbaselines.training.trainer method)": [[13, "nerfbaselines.training.Trainer.eval_all", false]], "eval_batch_size (nerfbaselines.modelinfo attribute)": [[1, "nerfbaselines.ModelInfo.eval_batch_size", false]], "eval_few() (in module nerfbaselines.training)": [[13, "nerfbaselines.training.eval_few", false]], "eval_few() (nerfbaselines.training.trainer method)": [[13, "nerfbaselines.training.Trainer.eval_few", false]], "evaluate() (in module nerfbaselines.evaluation)": [[5, "nerfbaselines.evaluation.evaluate", false]], "evaluate() (nerfbaselines.datasets.phototourism.evaluationprotocol method)": [[4, "nerfbaselines.datasets.phototourism.EvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[4, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[5, "nerfbaselines.evaluation.DefaultEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.types.evaluationprotocol method)": [[14, "nerfbaselines.types.EvaluationProtocol.evaluate", false]], "evaluation_protocol (nerfbaselines.registry.datasetspec attribute)": [[11, "nerfbaselines.registry.DatasetSpec.evaluation_protocol", false]], "evaluation_protocol (nerfbaselines.registry.evaluationprotocolspec attribute)": [[11, "nerfbaselines.registry.EvaluationProtocolSpec.evaluation_protocol", false]], "evaluation_protocol (nerfbaselines.registry.evaluationprotocolwithnamespec attribute)": [[11, "nerfbaselines.registry.EvaluationProtocolWithNameSpec.evaluation_protocol", false]], "evaluationprotocol (class in nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.EvaluationProtocol", false]], "evaluationprotocol (class in nerfbaselines.types)": [[14, "nerfbaselines.types.EvaluationProtocol", false]], "evaluationprotocolspec (class in nerfbaselines.registry)": [[11, "nerfbaselines.registry.EvaluationProtocolSpec", false]], "evaluationprotocolwithnamespec (class in nerfbaselines.registry)": [[11, "nerfbaselines.registry.EvaluationProtocolWithNameSpec", false]], "eventcancellationtoken (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.EventCancellationToken", false]], "every_iters() (nerfbaselines.indices class method)": [[1, "nerfbaselines.Indices.every_iters", false]], "flatten_hparams() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.flatten_hparams", false]], "format() (nerfbaselines.utils.formatter method)": [[15, "nerfbaselines.utils.Formatter.format", false]], "format_duration() (in module nerfbaselines.results)": [[12, "nerfbaselines.results.format_duration", false]], "format_memory() (in module nerfbaselines.results)": [[12, "nerfbaselines.results.format_memory", false]], "formatter (class in nerfbaselines.utils)": [[15, "nerfbaselines.utils.Formatter", false]], "forward_port() (in module nerfbaselines.backends)": [[2, "nerfbaselines.backends.forward_port", false]], "fov (nerfbaselines.types.trajectorykeyframe attribute)": [[14, "nerfbaselines.types.TrajectoryKeyframe.fov", false]], "fov (nerfbaselines.viewer.viser.keyframe attribute)": [[16, "nerfbaselines.viewer.viser.Keyframe.fov", false]], "fov (nerfbaselines.viewer.viser.trajectorykeyframe attribute)": [[16, "nerfbaselines.viewer.viser.TrajectoryKeyframe.fov", false]], "fps (nerfbaselines.types.trajectory attribute)": [[14, "nerfbaselines.types.Trajectory.fps", false]], "fps (nerfbaselines.viewer.viser.trajectory attribute)": [[16, "nerfbaselines.viewer.viser.Trajectory.fps", false]], "fps (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.fps", false]], "frames (nerfbaselines.types.trajectory attribute)": [[14, "nerfbaselines.types.Trajectory.frames", false]], "frames (nerfbaselines.viewer.viser.trajectory attribute)": [[16, "nerfbaselines.viewer.viser.Trajectory.frames", false]], "genericcameras (class in nerfbaselines.types)": [[14, "nerfbaselines.types.GenericCameras", false]], "genericcamerasimpl (class in nerfbaselines.types)": [[14, "nerfbaselines.types.GenericCamerasImpl", false]], "get() (nerfbaselines.viewer.viser.viewerstate method)": [[16, "nerfbaselines.viewer.viser.ViewerState.get", false]], "get_backend() (in module nerfbaselines.backends)": [[2, "nerfbaselines.backends.get_backend", false]], "get_benchmark_datasets() (in module nerfbaselines.results)": [[12, "nerfbaselines.results.get_benchmark_datasets", false]], "get_c2w() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.get_c2w", false]], "get_c2w() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.get_c2w", false]], "get_checkpoint_sha() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.get_checkpoint_sha", false]], "get_dataset_downloaders() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.get_dataset_downloaders", false]], "get_dataset_info() (in module nerfbaselines.results)": [[12, "nerfbaselines.results.get_dataset_info", false]], "get_dataset_loaders() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.get_dataset_loaders", false]], "get_dataset_overrides() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.get_dataset_overrides", false]], "get_dataset_spec() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.get_dataset_spec", false]], "get_default_viewer_transform() (in module nerfbaselines.datasets.blender)": [[4, "nerfbaselines.datasets.blender.get_default_viewer_transform", false]], "get_default_viewer_transform() (in module nerfbaselines.datasets.bundler)": [[4, "nerfbaselines.datasets.bundler.get_default_viewer_transform", false]], "get_default_viewer_transform() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.get_default_viewer_transform", false]], "get_default_viewer_transform() (in module nerfbaselines.datasets.mipnerf360)": [[4, "nerfbaselines.datasets.mipnerf360.get_default_viewer_transform", false]], "get_default_viewer_transform() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.get_default_viewer_transform", false]], "get_default_viewer_transform() (in module nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.get_default_viewer_transform", false]], "get_default_viewer_transform() (in module nerfbaselines.datasets.tanksandtemples)": [[4, "nerfbaselines.datasets.tanksandtemples.get_default_viewer_transform", false]], "get_forwarded_ports() (in module nerfbaselines.backends)": [[2, "nerfbaselines.backends.get_forwarded_ports", false]], "get_image_pixels() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.get_image_pixels", false]], "get_info() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.get_info", false]], "get_logger() (nerfbaselines.training.trainer method)": [[13, "nerfbaselines.training.Trainer.get_logger", false]], "get_method_info() (nerfbaselines.method class method)": [[1, "nerfbaselines.Method.get_method_info", false]], "get_method_sha() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.get_method_sha", false]], "get_method_spec() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.get_method_spec", false]], "get_metrics_hash() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.get_metrics_hash", false]], "get_mounts() (in module nerfbaselines.backends)": [[2, "nerfbaselines.backends.get_mounts", false]], "get_name() (nerfbaselines.datasets.phototourism.evaluationprotocol method)": [[4, "nerfbaselines.datasets.phototourism.EvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[4, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[5, "nerfbaselines.evaluation.DefaultEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.types.evaluationprotocol method)": [[14, "nerfbaselines.types.EvaluationProtocol.get_name", false]], "get_orientation_transform() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.get_orientation_transform", false]], "get_package_dependencies() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.get_package_dependencies", false]], "get_position_quaternion() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.get_position_quaternion", false]], "get_position_quaternion() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.get_position_quaternion", false]], "get_predictions_sha() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.get_predictions_sha", false]], "get_rays() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.get_rays", false]], "get_resources_utilization_info() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.get_resources_utilization_info", false]], "get_scene_scale() (in module nerfbaselines.datasets.mipnerf360)": [[4, "nerfbaselines.datasets.mipnerf360.get_scene_scale", false]], "get_scene_scale() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.get_scene_scale", false]], "get_scene_scale() (in module nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.get_scene_scale", false]], "get_scene_scale() (in module nerfbaselines.datasets.tanksandtemples)": [[4, "nerfbaselines.datasets.tanksandtemples.get_scene_scale", false]], "get_split_and_train_indices() (in module nerfbaselines.datasets.bundler)": [[4, "nerfbaselines.datasets.bundler.get_split_and_train_indices", false]], "get_supported_datasets() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.get_supported_datasets", false]], "get_supported_methods() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.get_supported_methods", false]], "get_torch_checkpoint_sha() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.get_torch_checkpoint_sha", false]], "get_train_embedding() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.get_train_embedding", false]], "get_train_eval_split_all() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.get_train_eval_split_all", false]], "get_train_eval_split_filename() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.get_train_eval_split_filename", false]], "get_train_eval_split_fraction() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.get_train_eval_split_fraction", false]], "get_train_eval_split_interval() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.get_train_eval_split_interval", false]], "get_trajectory() (nerfbaselines.viewer.viser.viewerstate method)": [[16, "nerfbaselines.viewer.viser.ViewerState.get_trajectory", false]], "get_transform_and_scale() (in module nerfbaselines.pose_utils)": [[10, "nerfbaselines.pose_utils.get_transform_and_scale", false]], "get_transform_and_scale() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.get_transform_and_scale", false]], "gpu_memory (nerfbaselines.utils.resourcesutilizationinfo attribute)": [[15, "nerfbaselines.utils.ResourcesUtilizationInfo.gpu_memory", false]], "gpu_name (nerfbaselines.utils.resourcesutilizationinfo attribute)": [[15, "nerfbaselines.utils.ResourcesUtilizationInfo.gpu_name", false]], "grab_file_id() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.grab_file_id", false]], "handle_cli_error() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.handle_cli_error", false]], "handle_cli_error() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.handle_cli_error", false]], "home_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[2, "nerfbaselines.backends.ApptainerBackendSpec.home_path", false]], "home_path (nerfbaselines.backends.dockerbackendspec attribute)": [[2, "nerfbaselines.backends.DockerBackendSpec.home_path", false]], "horizontal_half_dataset() (in module nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.horizontal_half_dataset", false]], "hparams (nerfbaselines.modelinfo attribute)": [[1, "nerfbaselines.ModelInfo.hparams", false]], "id (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.id", false]], "id (nerfbaselines.results.metricinfo attribute)": [[12, "nerfbaselines.results.MetricInfo.id", false]], "id (nerfbaselines.results.sceneinfo attribute)": [[12, "nerfbaselines.results.SceneInfo.id", false]], "id (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.id", false]], "image (class in nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.Image", false]], "image (nerfbaselines.backends.apptainerbackendspec attribute)": [[2, "nerfbaselines.backends.ApptainerBackendSpec.image", false]], "image (nerfbaselines.backends.dockerbackendspec attribute)": [[2, "nerfbaselines.backends.DockerBackendSpec.image", false]], "image_names_train (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.image_names_train", false]], "image_paths (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.image_paths", false]], "image_paths (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.image_paths", false]], "image_paths (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.image_paths", false]], "image_paths (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.image_paths", false]], "image_paths (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.image_paths", false]], "image_paths_root (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.image_paths_root", false]], "image_paths_root (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.image_paths_root", false]], "image_paths_root (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.image_paths_root", false]], "image_paths_root (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.image_paths_root", false]], "image_paths_root (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.image_paths_root", false]], "image_size (nerfbaselines.types.trajectory attribute)": [[14, "nerfbaselines.types.Trajectory.image_size", false]], "image_size (nerfbaselines.viewer.viser.trajectory attribute)": [[16, "nerfbaselines.viewer.viser.Trajectory.image_size", false]], "image_sizes (nerfbaselines.types.genericcameras property)": [[14, "nerfbaselines.types.GenericCameras.image_sizes", false]], "image_sizes (nerfbaselines.types.genericcamerasimpl attribute)": [[14, "nerfbaselines.types.GenericCamerasImpl.image_sizes", false]], "image_to_srgb() (in module nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.image_to_srgb", false]], "image_to_srgb() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.image_to_srgb", false]], "image_to_srgb() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.image_to_srgb", false]], "images (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.images", false]], "images (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.images", false]], "images (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.images", false]], "images (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.images", false]], "images (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.images", false]], "images_points3d_indices (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.images_points3D_indices", false]], "images_points3d_indices (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.images_points3D_indices", false]], "images_points3d_indices (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.images_points3D_indices", false]], "images_points3d_indices (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.images_points3D_indices", false]], "images_points3d_indices (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.images_points3D_indices", false]], "imagesetinterpolationsource (class in nerfbaselines.types)": [[14, "nerfbaselines.types.ImageSetInterpolationSource", false]], "indices (class in nerfbaselines)": [[1, "nerfbaselines.Indices", false]], "indicesclicktype (class in nerfbaselines.utils)": [[15, "nerfbaselines.utils.IndicesClickType", false]], "input_points (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.input_points", false]], "install() (nerfbaselines.backends.apptainerbackend method)": [[2, "nerfbaselines.backends.ApptainerBackend.install", false]], "install() (nerfbaselines.backends.backend method)": [[2, "nerfbaselines.backends.Backend.install", false]], "install() (nerfbaselines.backends.condabackend method)": [[2, "nerfbaselines.backends.CondaBackend.install", false]], "install() (nerfbaselines.backends.dockerbackend method)": [[2, "nerfbaselines.backends.DockerBackend.install", false]], "install() (nerfbaselines.method class method)": [[1, "nerfbaselines.Method.install", false]], "install_script (nerfbaselines.backends.condabackendspec attribute)": [[2, "nerfbaselines.backends.CondaBackendSpec.install_script", false]], "instance_call() (nerfbaselines.backends.backend method)": [[2, "nerfbaselines.backends.Backend.instance_call", false]], "instance_call() (nerfbaselines.backends.simplebackend method)": [[2, "nerfbaselines.backends.SimpleBackend.instance_call", false]], "instance_del() (nerfbaselines.backends.backend method)": [[2, "nerfbaselines.backends.Backend.instance_del", false]], "instance_del() (nerfbaselines.backends.simplebackend method)": [[2, "nerfbaselines.backends.SimpleBackend.instance_del", false]], "instance_getattr() (nerfbaselines.backends.backend method)": [[2, "nerfbaselines.backends.Backend.instance_getattr", false]], "instance_getattr() (nerfbaselines.backends.simplebackend method)": [[2, "nerfbaselines.backends.SimpleBackend.instance_getattr", false]], "interpolate_bilinear() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.interpolate_bilinear", false]], "interpolation (nerfbaselines.types.imagesetinterpolationsource attribute)": [[14, "nerfbaselines.types.ImageSetInterpolationSource.interpolation", false]], "interpolation (nerfbaselines.types.kochanekbartelsinterpolationsource attribute)": [[14, "nerfbaselines.types.KochanekBartelsInterpolationSource.interpolation", false]], "interpolation (nerfbaselines.viewer.viser.kochanekbartelsinterpolationsource attribute)": [[16, "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource.interpolation", false]], "intrinsics (nerfbaselines.types.genericcameras property)": [[14, "nerfbaselines.types.GenericCameras.intrinsics", false]], "intrinsics (nerfbaselines.types.genericcamerasimpl attribute)": [[14, "nerfbaselines.types.GenericCamerasImpl.intrinsics", false]], "intrinsics (nerfbaselines.types.trajectoryframe attribute)": [[14, "nerfbaselines.types.TrajectoryFrame.intrinsics", false]], "intrinsics (nerfbaselines.viewer.viser.trajectoryframe attribute)": [[16, "nerfbaselines.viewer.viser.TrajectoryFrame.intrinsics", false]], "invert_transform() (in module nerfbaselines.pose_utils)": [[10, "nerfbaselines.pose_utils.invert_transform", false]], "invert_transform() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.invert_transform", false]], "invoke() (nerfbaselines.utils.cancellationtoken method)": [[15, "nerfbaselines.utils.CancellationToken.invoke", false]], "is_broadcastable() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.is_broadcastable", false]], "is_cycle (nerfbaselines.types.kochanekbartelsinterpolationsource attribute)": [[14, "nerfbaselines.types.KochanekBartelsInterpolationSource.is_cycle", false]], "is_cycle (nerfbaselines.viewer.viser.kochanekbartelsinterpolationsource attribute)": [[16, "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource.is_cycle", false]], "item() (nerfbaselines.types.genericcameras method)": [[14, "nerfbaselines.types.GenericCameras.item", false]], "item() (nerfbaselines.types.genericcamerasimpl method)": [[14, "nerfbaselines.types.GenericCamerasImpl.item", false]], "keyframe (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.Keyframe", false]], "keyframes (nerfbaselines.types.imagesetinterpolationsource attribute)": [[14, "nerfbaselines.types.ImageSetInterpolationSource.keyframes", false]], "keyframes (nerfbaselines.types.kochanekbartelsinterpolationsource attribute)": [[14, "nerfbaselines.types.KochanekBartelsInterpolationSource.keyframes", false]], "keyframes (nerfbaselines.viewer.viser.kochanekbartelsinterpolationsource attribute)": [[16, "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource.keyframes", false]], "kochanekbartelsinterpolationsource (class in nerfbaselines.types)": [[14, "nerfbaselines.types.KochanekBartelsInterpolationSource", false]], "kochanekbartelsinterpolationsource (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource", false]], "kwargs (nerfbaselines.registry.methodspec attribute)": [[11, "nerfbaselines.registry.MethodSpec.kwargs", false]], "linear_to_srgb() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.linear_to_srgb", false]], "link (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.link", false]], "link (nerfbaselines.results.metricinfo attribute)": [[12, "nerfbaselines.results.MetricInfo.link", false]], "link (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.link", false]], "load_blender_dataset() (in module nerfbaselines.datasets.blender)": [[4, "nerfbaselines.datasets.blender.load_blender_dataset", false]], "load_bundler_dataset() (in module nerfbaselines.datasets.bundler)": [[4, "nerfbaselines.datasets.bundler.load_bundler_dataset", false]], "load_bundler_file() (in module nerfbaselines.datasets.bundler)": [[4, "nerfbaselines.datasets.bundler.load_bundler_file", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.load_colmap_dataset", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[4, "nerfbaselines.datasets.mipnerf360.load_colmap_dataset", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.load_colmap_dataset", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.tanksandtemples)": [[4, "nerfbaselines.datasets.tanksandtemples.load_colmap_dataset", false]], "load_dataset() (in module nerfbaselines.datasets)": [[4, "nerfbaselines.datasets.load_dataset", false]], "load_dataset() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.load_dataset", false]], "load_dataset_function (nerfbaselines.registry.datasetspec attribute)": [[11, "nerfbaselines.registry.DatasetSpec.load_dataset_function", false]], "load_from_json() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.load_from_json", false]], "load_llff_dataset() (in module nerfbaselines.datasets.llff)": [[4, "nerfbaselines.datasets.llff.load_llff_dataset", false]], "load_metrics_from_results() (in module nerfbaselines.results)": [[12, "nerfbaselines.results.load_metrics_from_results", false]], "load_mipnerf360_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[4, "nerfbaselines.datasets.mipnerf360.load_mipnerf360_dataset", false]], "load_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.load_nerfstudio_dataset", false]], "load_phototourism_dataset() (in module nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.load_phototourism_dataset", false]], "load_tanksandtemples_dataset() (in module nerfbaselines.datasets.tanksandtemples)": [[4, "nerfbaselines.datasets.tanksandtemples.load_tanksandtemples_dataset", false]], "load_trajectory() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.load_trajectory", false]], "load_trajectory() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.load_trajectory", false]], "load_trajectory() (nerfbaselines.viewer.viser.viewerstate method)": [[16, "nerfbaselines.viewer.viser.ViewerState.load_trajectory", false]], "loaddatasetfunction (class in nerfbaselines.types)": [[14, "nerfbaselines.types.LoadDatasetFunction", false]], "loaded_checkpoint (nerfbaselines.modelinfo attribute)": [[1, "nerfbaselines.ModelInfo.loaded_checkpoint", false]], "loaded_step (nerfbaselines.modelinfo attribute)": [[1, "nerfbaselines.ModelInfo.loaded_step", false]], "log_metrics() (in module nerfbaselines.logging)": [[7, "nerfbaselines.logging.log_metrics", false]], "logger (class in nerfbaselines.types)": [[14, "nerfbaselines.types.Logger", false]], "loggerevent (class in nerfbaselines.types)": [[14, "nerfbaselines.types.LoggerEvent", false]], "lpips() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.lpips", false]], "lpips_alex() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.lpips_alex", false]], "lpips_vgg() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.lpips_vgg", false]], "mae() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.mae", false]], "make_image_grid() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.make_image_grid", false]], "map() (nerfbaselines.viewer.viser.bindablesource method)": [[16, "nerfbaselines.viewer.viser.BindableSource.map", false]], "mark_host() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.mark_host", false]], "memory (nerfbaselines.utils.resourcesutilizationinfo attribute)": [[15, "nerfbaselines.utils.ResourcesUtilizationInfo.memory", false]], "metadata (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.metadata", false]], "metadata (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.metadata", false]], "metadata (nerfbaselines.registry.datasetspec attribute)": [[11, "nerfbaselines.registry.DatasetSpec.metadata", false]], "metadata (nerfbaselines.registry.methodspec attribute)": [[11, "nerfbaselines.registry.MethodSpec.metadata", false]], "metadata (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.metadata", false]], "metadata (nerfbaselines.types.genericcameras property)": [[14, "nerfbaselines.types.GenericCameras.metadata", false]], "metadata (nerfbaselines.types.genericcamerasimpl attribute)": [[14, "nerfbaselines.types.GenericCamerasImpl.metadata", false]], "metadata (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.metadata", false]], "metadata (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.metadata", false]], "method (class in nerfbaselines)": [[1, "nerfbaselines.Method", false]], "method (nerfbaselines.registry.methodspec attribute)": [[11, "nerfbaselines.registry.MethodSpec.method", false]], "methodinfo (class in nerfbaselines)": [[1, "nerfbaselines.MethodInfo", false]], "methodspec (class in nerfbaselines.registry)": [[11, "nerfbaselines.registry.MethodSpec", false]], "metricinfo (class in nerfbaselines.results)": [[12, "nerfbaselines.results.MetricInfo", false]], "metrics (nerfbaselines.optimizeembeddingsoutput attribute)": [[1, "nerfbaselines.OptimizeEmbeddingsOutput.metrics", false]], "metrics (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.metrics", false]], "metrics (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.metrics", false]], "metricsaccumulator (class in nerfbaselines.utils)": [[15, "nerfbaselines.utils.MetricsAccumulator", false]], "modelinfo (class in nerfbaselines)": [[1, "nerfbaselines.ModelInfo", false]], "module": [[1, "module-nerfbaselines", false], [2, "module-nerfbaselines.backends", false], [3, "module-nerfbaselines.cameras", false], [4, "module-nerfbaselines.datasets", false], [4, "module-nerfbaselines.datasets.blender", false], [4, "module-nerfbaselines.datasets.bundler", false], [4, "module-nerfbaselines.datasets.colmap", false], [4, "module-nerfbaselines.datasets.llff", false], [4, "module-nerfbaselines.datasets.mipnerf360", false], [4, "module-nerfbaselines.datasets.nerfstudio", false], [4, "module-nerfbaselines.datasets.phototourism", false], [4, "module-nerfbaselines.datasets.tanksandtemples", false], [5, "module-nerfbaselines.evaluation", false], [6, "module-nerfbaselines.io", false], [7, "module-nerfbaselines.logging", false], [8, "module-nerfbaselines.math_utils", false], [9, "module-nerfbaselines.metrics", false], [10, "module-nerfbaselines.pose_utils", false], [11, "module-nerfbaselines.registry", false], [12, "module-nerfbaselines.results", false], [13, "module-nerfbaselines.training", false], [14, "module-nerfbaselines.types", false], [15, "module-nerfbaselines.utils", false], [16, "module-nerfbaselines.viewer", false], [16, "module-nerfbaselines.viewer.viser", false]], "mount() (in module nerfbaselines.backends)": [[2, "nerfbaselines.backends.mount", false]], "mse() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.mse", false]], "multidataseterror": [[4, "nerfbaselines.datasets.MultiDatasetError", false]], "name (nerfbaselines.backends.apptainerbackend attribute)": [[2, "nerfbaselines.backends.ApptainerBackend.name", false]], "name (nerfbaselines.backends.backend attribute)": [[2, "nerfbaselines.backends.Backend.name", false]], "name (nerfbaselines.backends.condabackend attribute)": [[2, "nerfbaselines.backends.CondaBackend.name", false]], "name (nerfbaselines.backends.dockerbackend attribute)": [[2, "nerfbaselines.backends.DockerBackend.name", false]], "name (nerfbaselines.backends.simplebackend attribute)": [[2, "nerfbaselines.backends.SimpleBackend.name", false]], "name (nerfbaselines.methodinfo attribute)": [[1, "nerfbaselines.MethodInfo.name", false]], "name (nerfbaselines.modelinfo attribute)": [[1, "nerfbaselines.ModelInfo.name", false]], "name (nerfbaselines.registry.evaluationprotocolwithnamespec attribute)": [[11, "nerfbaselines.registry.EvaluationProtocolWithNameSpec.name", false]], "name (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.name", false]], "name (nerfbaselines.results.metricinfo attribute)": [[12, "nerfbaselines.results.MetricInfo.name", false]], "name (nerfbaselines.results.sceneinfo attribute)": [[12, "nerfbaselines.results.SceneInfo.name", false]], "name (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.name", false]], "name (nerfbaselines.utils.indicesclicktype attribute)": [[15, "nerfbaselines.utils.IndicesClickType.name", false]], "name (nerfbaselines.utils.setparamoptiontype attribute)": [[15, "nerfbaselines.utils.SetParamOptionType.name", false]], "nears_fars (nerfbaselines.types.genericcameras property)": [[14, "nerfbaselines.types.GenericCameras.nears_fars", false]], "nears_fars (nerfbaselines.types.genericcamerasimpl attribute)": [[14, "nerfbaselines.types.GenericCamerasImpl.nears_fars", false]], "nerfbaselines": [[1, "module-nerfbaselines", false]], "nerfbaselines-download-dataset command line option": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false], [17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-download-dataset-v", false]], "nerfbaselines-evaluate command line option": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false], [17, "cmdoption-nerfbaselines-evaluate-o", false]], "nerfbaselines-export-demo command line option": [[17, "cmdoption-nerfbaselines-export-demo-backend", false], [17, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-export-demo-v", false]], "nerfbaselines-fix-checkpoint command line option": [[17, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-set", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-v", false]], "nerfbaselines-fix-output-artifact command line option": [[17, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-force", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-input", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-v", false]], "nerfbaselines-generate-dataset-results command line option": [[17, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-results", false]], "nerfbaselines-generate-web command line option": [[17, "cmdoption-nerfbaselines-generate-web-datasets", false], [17, "cmdoption-nerfbaselines-generate-web-output", false], [17, "cmdoption-nerfbaselines-generate-web-sandbox-node", false], [17, "cmdoption-nerfbaselines-generate-web-source", false], [17, "cmdoption-nerfbaselines-generate-web-v", false]], "nerfbaselines-render command line option": [[17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-render-split", false], [17, "cmdoption-nerfbaselines-render-v", false]], "nerfbaselines-render-trajectory command line option": [[17, "cmdoption-nerfbaselines-render-trajectory-backend", false], [17, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [17, "cmdoption-nerfbaselines-render-trajectory-output", false], [17, "cmdoption-nerfbaselines-render-trajectory-output-type", false], [17, "cmdoption-nerfbaselines-render-trajectory-trajectory", false], [17, "cmdoption-nerfbaselines-render-trajectory-v", false]], "nerfbaselines-shell command line option": [[17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-shell-method", false], [17, "cmdoption-nerfbaselines-shell-v", false]], "nerfbaselines-test-method command line option": [[17, "cmdoption-nerfbaselines-test-method-backend", false], [17, "cmdoption-nerfbaselines-test-method-data", false], [17, "cmdoption-nerfbaselines-test-method-fast", false], [17, "cmdoption-nerfbaselines-test-method-method", false], [17, "cmdoption-nerfbaselines-test-method-set", false], [17, "cmdoption-nerfbaselines-test-method-steps", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "nerfbaselines-train command line option": [[17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-train-disable-output-artifact", false], [17, "cmdoption-nerfbaselines-train-eval-all-iters", false], [17, "cmdoption-nerfbaselines-train-eval-few-iters", false], [17, "cmdoption-nerfbaselines-train-force-output-artifact", false], [17, "cmdoption-nerfbaselines-train-logger", false], [17, "cmdoption-nerfbaselines-train-method", false], [17, "cmdoption-nerfbaselines-train-output", false], [17, "cmdoption-nerfbaselines-train-save-iters", false], [17, "cmdoption-nerfbaselines-train-set", false], [17, "cmdoption-nerfbaselines-train-v", false]], "nerfbaselines-viewer command line option": [[17, "cmdoption-nerfbaselines-viewer-backend", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-data", false], [17, "cmdoption-nerfbaselines-viewer-port", false], [17, "cmdoption-nerfbaselines-viewer-v", false]], "nerfbaselines.backends": [[2, "module-nerfbaselines.backends", false]], "nerfbaselines.cameras": [[3, "module-nerfbaselines.cameras", false]], "nerfbaselines.datasets": [[4, "module-nerfbaselines.datasets", false]], "nerfbaselines.datasets.blender": [[4, "module-nerfbaselines.datasets.blender", false]], "nerfbaselines.datasets.bundler": [[4, "module-nerfbaselines.datasets.bundler", false]], "nerfbaselines.datasets.colmap": [[4, "module-nerfbaselines.datasets.colmap", false]], "nerfbaselines.datasets.llff": [[4, "module-nerfbaselines.datasets.llff", false]], "nerfbaselines.datasets.mipnerf360": [[4, "module-nerfbaselines.datasets.mipnerf360", false]], "nerfbaselines.datasets.nerfstudio": [[4, "module-nerfbaselines.datasets.nerfstudio", false]], "nerfbaselines.datasets.phototourism": [[4, "module-nerfbaselines.datasets.phototourism", false]], "nerfbaselines.datasets.tanksandtemples": [[4, "module-nerfbaselines.datasets.tanksandtemples", false]], "nerfbaselines.evaluation": [[5, "module-nerfbaselines.evaluation", false]], "nerfbaselines.io": [[6, "module-nerfbaselines.io", false]], "nerfbaselines.logging": [[7, "module-nerfbaselines.logging", false]], "nerfbaselines.math_utils": [[8, "module-nerfbaselines.math_utils", false]], "nerfbaselines.metrics": [[9, "module-nerfbaselines.metrics", false]], "nerfbaselines.pose_utils": [[10, "module-nerfbaselines.pose_utils", false]], "nerfbaselines.registry": [[11, "module-nerfbaselines.registry", false]], "nerfbaselines.results": [[12, "module-nerfbaselines.results", false]], "nerfbaselines.training": [[13, "module-nerfbaselines.training", false]], "nerfbaselines.types": [[14, "module-nerfbaselines.types", false]], "nerfbaselines.utils": [[15, "module-nerfbaselines.utils", false]], "nerfbaselines.viewer": [[16, "module-nerfbaselines.viewer", false]], "nerfbaselines.viewer.viser": [[16, "module-nerfbaselines.viewer.viser", false]], "nerfevaluationprotocol (class in nerfbaselines.evaluation)": [[5, "nerfbaselines.evaluation.NerfEvaluationProtocol", false]], "nerfwevaluationprotocol (class in nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol", false]], "new_cameras() (in module nerfbaselines.datasets.blender)": [[4, "nerfbaselines.datasets.blender.new_cameras", false]], "new_cameras() (in module nerfbaselines.datasets.bundler)": [[4, "nerfbaselines.datasets.bundler.new_cameras", false]], "new_cameras() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.new_cameras", false]], "new_cameras() (in module nerfbaselines.datasets.llff)": [[4, "nerfbaselines.datasets.llff.new_cameras", false]], "new_cameras() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.new_cameras", false]], "new_cameras() (in module nerfbaselines.types)": [[14, "nerfbaselines.types.new_cameras", false]], "new_cameras() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.new_cameras", false]], "new_dataset() (in module nerfbaselines.datasets)": [[4, "nerfbaselines.datasets.new_dataset", false]], "new_nb_info() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.new_nb_info", false]], "nogpuerror": [[15, "nerfbaselines.utils.NoGPUError", false]], "num_iterations (nerfbaselines.modelinfo attribute)": [[1, "nerfbaselines.ModelInfo.num_iterations", false]], "num_iterations (nerfbaselines.training.trainer property)": [[13, "nerfbaselines.training.Trainer.num_iterations", false]], "numpy_from_base64() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.numpy_from_base64", false]], "numpy_to_base64() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.numpy_to_base64", false]], "on_update() (nerfbaselines.viewer.viser.viewerstate method)": [[16, "nerfbaselines.viewer.viser.ViewerState.on_update", false]], "open_any() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.open_any", false]], "open_any_directory() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.open_any_directory", false]], "open_any_directory() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.open_any_directory", false]], "optimize_embeddings() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.optimize_embeddings", false]], "optimizeembeddingsoutput (class in nerfbaselines)": [[1, "nerfbaselines.OptimizeEmbeddingsOutput", false]], "output_split (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.output_split", false]], "output_type (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.output_type", false]], "output_type_options (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.output_type_options", false]], "pad_poses() (in module nerfbaselines.pose_utils)": [[10, "nerfbaselines.pose_utils.pad_poses", false]], "pad_poses() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.pad_poses", false]], "pad_to_aspect_ratio() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.pad_to_aspect_ratio", false]], "padded_stack() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.padded_stack", false]], "padded_stack() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.padded_stack", false]], "paper_authors (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.paper_authors", false]], "paper_authors (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.paper_authors", false]], "paper_link (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.paper_link", false]], "paper_link (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.paper_link", false]], "paper_title (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.paper_title", false]], "paper_title (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.paper_title", false]], "partialclass() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.partialclass", false]], "partialmethod() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.partialmethod", false]], "partialmethod() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.partialmethod", false]], "point3d (class in nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.Point3D", false]], "points3d_rgb (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.points3D_rgb", false]], "points3d_xyz (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.points3D_xyz", false]], "pop() (nerfbaselines.utils.metricsaccumulator method)": [[15, "nerfbaselines.utils.MetricsAccumulator.pop", false]], "pose (nerfbaselines.types.trajectoryframe attribute)": [[14, "nerfbaselines.types.TrajectoryFrame.pose", false]], "pose (nerfbaselines.types.trajectorykeyframe attribute)": [[14, "nerfbaselines.types.TrajectoryKeyframe.pose", false]], "pose (nerfbaselines.viewer.viser.trajectoryframe attribute)": [[16, "nerfbaselines.viewer.viser.TrajectoryFrame.pose", false]], "pose (nerfbaselines.viewer.viser.trajectorykeyframe attribute)": [[16, "nerfbaselines.viewer.viser.TrajectoryKeyframe.pose", false]], "poses (nerfbaselines.types.genericcameras property)": [[14, "nerfbaselines.types.GenericCameras.poses", false]], "poses (nerfbaselines.types.genericcamerasimpl attribute)": [[14, "nerfbaselines.types.GenericCamerasImpl.poses", false]], "position (nerfbaselines.viewer.viser.keyframe attribute)": [[16, "nerfbaselines.viewer.viser.Keyframe.position", false]], "predictions": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false]], "preview_current_frame (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.preview_current_frame", false]], "preview_is_playing (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.preview_is_playing", false]], "preview_render (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.preview_render", false]], "preview_time (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.preview_time", false]], "priority (nerfbaselines.registry.datasetspec attribute)": [[11, "nerfbaselines.registry.DatasetSpec.priority", false]], "project() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.project", false]], "psnr() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.psnr", false]], "python_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[2, "nerfbaselines.backends.ApptainerBackendSpec.python_path", false]], "python_path (nerfbaselines.backends.dockerbackendspec attribute)": [[2, "nerfbaselines.backends.DockerBackendSpec.python_path", false]], "python_version (nerfbaselines.backends.condabackendspec attribute)": [[2, "nerfbaselines.backends.CondaBackendSpec.python_version", false]], "quaternion_conjugate() (in module nerfbaselines.math_utils)": [[8, "nerfbaselines.math_utils.quaternion_conjugate", false]], "quaternion_multiply() (in module nerfbaselines.math_utils)": [[8, "nerfbaselines.math_utils.quaternion_multiply", false]], "quaternion_to_rotation_matrix() (in module nerfbaselines.math_utils)": [[8, "nerfbaselines.math_utils.quaternion_to_rotation_matrix", false]], "qvec2rotmat() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.qvec2rotmat", false]], "qvec2rotmat() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.qvec2rotmat", false]], "qvec2rotmat() (nerfbaselines.datasets.colmap.image method)": [[4, "nerfbaselines.datasets.colmap.Image.qvec2rotmat", false]], "raise_for_cancelled() (nerfbaselines.utils.cancellationtoken method)": [[15, "nerfbaselines.utils.CancellationToken.raise_for_cancelled", false]], "read_cameras_binary() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.read_cameras_binary", false]], "read_cameras_text() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.read_cameras_text", false]], "read_image() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.read_image", false]], "read_images_binary() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.read_images_binary", false]], "read_images_binary() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.read_images_binary", false]], "read_images_text() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.read_images_text", false]], "read_images_text() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.read_images_text", false]], "read_points3d_binary() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.read_points3D_binary", false]], "read_points3d_binary() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.read_points3D_binary", false]], "read_points3d_text() (in module nerfbaselines.datasets.colmap)": [[4, "nerfbaselines.datasets.colmap.read_points3D_text", false]], "read_points3d_text() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.read_points3D_text", false]], "register() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.register", false]], "register_callback() (nerfbaselines.utils.cancellationtoken method)": [[15, "nerfbaselines.utils.CancellationToken.register_callback", false]], "register_logger() (in module nerfbaselines.registry)": [[11, "nerfbaselines.registry.register_logger", false]], "remap_error() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.remap_error", false]], "render() (nerfbaselines.datasets.phototourism.evaluationprotocol method)": [[4, "nerfbaselines.datasets.phototourism.EvaluationProtocol.render", false]], "render() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[4, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.render", false]], "render() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[5, "nerfbaselines.evaluation.DefaultEvaluationProtocol.render", false]], "render() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.render", false]], "render() (nerfbaselines.types.evaluationprotocol method)": [[14, "nerfbaselines.types.EvaluationProtocol.render", false]], "render_all_images() (in module nerfbaselines.evaluation)": [[5, "nerfbaselines.evaluation.render_all_images", false]], "render_appearance_train_index (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.render_appearance_train_index", false]], "render_fov (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.render_fov", false]], "render_frames() (in module nerfbaselines.evaluation)": [[5, "nerfbaselines.evaluation.render_frames", false]], "render_markdown_dataset_results_table() (in module nerfbaselines.results)": [[12, "nerfbaselines.results.render_markdown_dataset_results_table", false]], "render_output (nerfbaselines.optimizeembeddingsoutput attribute)": [[1, "nerfbaselines.OptimizeEmbeddingsOutput.render_output", false]], "render_resolution (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.render_resolution", false]], "renderoutput (class in nerfbaselines)": [[1, "nerfbaselines.RenderOutput", false]], "replace() (nerfbaselines.types.genericcameras method)": [[14, "nerfbaselines.types.GenericCameras.replace", false]], "replace() (nerfbaselines.types.genericcamerasimpl method)": [[14, "nerfbaselines.types.GenericCamerasImpl.replace", false]], "replace_user (nerfbaselines.backends.dockerbackendspec attribute)": [[2, "nerfbaselines.backends.DockerBackendSpec.replace_user", false]], "required_features (nerfbaselines.methodinfo attribute)": [[1, "nerfbaselines.MethodInfo.required_features", false]], "required_features (nerfbaselines.modelinfo attribute)": [[1, "nerfbaselines.ModelInfo.required_features", false]], "resolution (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.resolution", false]], "resourcesutilizationinfo (class in nerfbaselines.utils)": [[15, "nerfbaselines.utils.ResourcesUtilizationInfo", false]], "rotate_spherical_harmonics() (in module nerfbaselines.math_utils)": [[8, "nerfbaselines.math_utils.rotate_spherical_harmonics", false]], "rotation_matrix() (in module nerfbaselines.pose_utils)": [[10, "nerfbaselines.pose_utils.rotation_matrix", false]], "rotation_matrix() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.rotation_matrix", false]], "rotation_matrix_to_quaternion() (in module nerfbaselines.math_utils)": [[8, "nerfbaselines.math_utils.rotation_matrix_to_quaternion", false]], "rotmat2qvec() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.rotmat2qvec", false]], "run() (nerfbaselines.viewer.viser.viserviewer method)": [[16, "nerfbaselines.viewer.viser.ViserViewer.run", false]], "run_inside_eval_container() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.run_inside_eval_container", false]], "run_on_host() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.run_on_host", false]], "run_viser_viewer() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.run_viser_viewer", false]], "safe_eq() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.safe_eq", false]], "sampling_mask_paths (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.sampling_mask_paths", false]], "sampling_mask_paths (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.sampling_mask_paths", false]], "sampling_mask_paths (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.sampling_mask_paths", false]], "sampling_mask_paths (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.sampling_mask_paths", false]], "sampling_mask_paths (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.sampling_mask_paths", false]], "sampling_mask_paths_root (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.sampling_mask_paths_root", false]], "sampling_mask_paths_root (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.sampling_mask_paths_root", false]], "sampling_mask_paths_root (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.sampling_mask_paths_root", false]], "sampling_mask_paths_root (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.sampling_mask_paths_root", false]], "sampling_mask_paths_root (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.sampling_mask_paths_root", false]], "sampling_masks (nerfbaselines.datasets.dataset attribute)": [[4, "nerfbaselines.datasets.Dataset.sampling_masks", false]], "sampling_masks (nerfbaselines.datasets.unloadeddataset attribute)": [[4, "nerfbaselines.datasets.UnloadedDataset.sampling_masks", false]], "sampling_masks (nerfbaselines.types.dataset attribute)": [[14, "nerfbaselines.types.Dataset.sampling_masks", false]], "sampling_masks (nerfbaselines.types.unloadeddataset attribute)": [[14, "nerfbaselines.types.UnloadedDataset.sampling_masks", false]], "sampling_masks (nerfbaselines.viewer.viser.dataset attribute)": [[16, "nerfbaselines.viewer.viser.Dataset.sampling_masks", false]], "save() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.save", false]], "save() (nerfbaselines.training.trainer method)": [[13, "nerfbaselines.training.Trainer.save", false]], "save_cameras_npz() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.save_cameras_npz", false]], "save_depth() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.save_depth", false]], "save_evaluation_results() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.save_evaluation_results", false]], "save_image() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.save_image", false]], "save_output_artifact() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.save_output_artifact", false]], "save_predictions() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.save_predictions", false]], "save_trajectory() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.save_trajectory", false]], "save_trajectory() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.save_trajectory", false]], "sceneinfo (class in nerfbaselines.results)": [[12, "nerfbaselines.results.SceneInfo", false]], "scenes (nerfbaselines.results.datasetinfo attribute)": [[12, "nerfbaselines.results.DatasetInfo.scenes", false]], "scenes (nerfbaselines.types.datasetspecmetadata attribute)": [[14, "nerfbaselines.types.DatasetSpecMetadata.scenes", false]], "serialize_evaluation_results() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.serialize_evaluation_results", false]], "serialize_nb_info() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.serialize_nb_info", false]], "setparamoptiontype (class in nerfbaselines.utils)": [[15, "nerfbaselines.utils.SetParamOptionType", false]], "setup_logging() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.setup_logging", false]], "setup_logging() (in module nerfbaselines.viewer)": [[16, "nerfbaselines.viewer.setup_logging", false]], "shell() (nerfbaselines.backends.apptainerbackend method)": [[2, "nerfbaselines.backends.ApptainerBackend.shell", false]], "shell() (nerfbaselines.backends.backend method)": [[2, "nerfbaselines.backends.Backend.shell", false]], "shell() (nerfbaselines.backends.condabackend method)": [[2, "nerfbaselines.backends.CondaBackend.shell", false]], "shell() (nerfbaselines.backends.dockerbackend method)": [[2, "nerfbaselines.backends.DockerBackend.shell", false]], "show_input_points (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.show_input_points", false]], "show_test_cameras (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.show_test_cameras", false]], "show_train_cameras (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.show_train_cameras", false]], "simple_cache() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.simple_cache", false]], "simplebackend (class in nerfbaselines.backends)": [[2, "nerfbaselines.backends.SimpleBackend", false]], "single() (in module nerfbaselines.datasets.mipnerf360)": [[4, "nerfbaselines.datasets.mipnerf360.single", false]], "single() (in module nerfbaselines.datasets.phototourism)": [[4, "nerfbaselines.datasets.phototourism.single", false]], "source (nerfbaselines.types.trajectory attribute)": [[14, "nerfbaselines.types.Trajectory.source", false]], "source (nerfbaselines.viewer.viser.trajectory attribute)": [[16, "nerfbaselines.viewer.viser.Trajectory.source", false]], "split_output_type (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.split_output_type", false]], "split_percentage (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.split_percentage", false]], "srgb_to_linear() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.srgb_to_linear", false]], "ssim() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.ssim", false]], "state_compute_duration() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.state_compute_duration", false]], "static_call() (nerfbaselines.backends.backend method)": [[2, "nerfbaselines.backends.Backend.static_call", false]], "static_call() (nerfbaselines.backends.simplebackend method)": [[2, "nerfbaselines.backends.SimpleBackend.static_call", false]], "static_getattr() (nerfbaselines.backends.backend method)": [[2, "nerfbaselines.backends.Backend.static_getattr", false]], "static_getattr() (nerfbaselines.backends.simplebackend method)": [[2, "nerfbaselines.backends.SimpleBackend.static_getattr", false]], "supported_camera_models (nerfbaselines.methodinfo attribute)": [[1, "nerfbaselines.MethodInfo.supported_camera_models", false]], "supported_camera_models (nerfbaselines.modelinfo attribute)": [[1, "nerfbaselines.ModelInfo.supported_camera_models", false]], "supports_appearance_from_train_images (nerfbaselines.viewer.viser.viewerstate attribute)": [[16, "nerfbaselines.viewer.viser.ViewerState.supports_appearance_from_train_images", false]], "tension (nerfbaselines.types.kochanekbartelsinterpolationsource attribute)": [[14, "nerfbaselines.types.KochanekBartelsInterpolationSource.tension", false]], "tension (nerfbaselines.viewer.viser.kochanekbartelsinterpolationsource attribute)": [[16, "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource.tension", false]], "tensorboardlogger (class in nerfbaselines.logging)": [[7, "nerfbaselines.logging.TensorboardLogger", false]], "tensorboardloggerevent (class in nerfbaselines.logging)": [[7, "nerfbaselines.logging.TensorboardLoggerEvent", false]], "three_js_perspective_camera_focal_length() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.three_js_perspective_camera_focal_length", false]], "torchmetrics_ssim() (in module nerfbaselines.metrics)": [[9, "nerfbaselines.metrics.torchmetrics_ssim", false]], "train() (nerfbaselines.training.trainer method)": [[13, "nerfbaselines.training.Trainer.train", false]], "train_iteration() (nerfbaselines.method method)": [[1, "nerfbaselines.Method.train_iteration", false]], "train_iteration() (nerfbaselines.training.trainer method)": [[13, "nerfbaselines.training.Trainer.train_iteration", false]], "trainer (class in nerfbaselines.training)": [[13, "nerfbaselines.training.Trainer", false]], "trajectory (class in nerfbaselines.types)": [[14, "nerfbaselines.types.Trajectory", false]], "trajectory (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.Trajectory", false]], "trajectory_get_cameras() (in module nerfbaselines.evaluation)": [[5, "nerfbaselines.evaluation.trajectory_get_cameras", false]], "trajectory_get_embeddings() (in module nerfbaselines.evaluation)": [[5, "nerfbaselines.evaluation.trajectory_get_embeddings", false]], "trajectoryframe (class in nerfbaselines.types)": [[14, "nerfbaselines.types.TrajectoryFrame", false]], "trajectoryframe (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.TrajectoryFrame", false]], "trajectoryframeappearance (class in nerfbaselines.types)": [[14, "nerfbaselines.types.TrajectoryFrameAppearance", false]], "trajectoryframeappearance (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.TrajectoryFrameAppearance", false]], "trajectorykeyframe (class in nerfbaselines.types)": [[14, "nerfbaselines.types.TrajectoryKeyframe", false]], "trajectorykeyframe (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.TrajectoryKeyframe", false]], "transform_points() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.transform_points", false]], "transition_duration (nerfbaselines.types.trajectorykeyframe attribute)": [[14, "nerfbaselines.types.TrajectoryKeyframe.transition_duration", false]], "transition_duration (nerfbaselines.viewer.viser.keyframe attribute)": [[16, "nerfbaselines.viewer.viser.Keyframe.transition_duration", false]], "transition_duration (nerfbaselines.viewer.viser.trajectorykeyframe attribute)": [[16, "nerfbaselines.viewer.viser.TrajectoryKeyframe.transition_duration", false]], "type (nerfbaselines.types.imagesetinterpolationsource attribute)": [[14, "nerfbaselines.types.ImageSetInterpolationSource.type", false]], "type (nerfbaselines.types.kochanekbartelsinterpolationsource attribute)": [[14, "nerfbaselines.types.KochanekBartelsInterpolationSource.type", false]], "type (nerfbaselines.viewer.viser.kochanekbartelsinterpolationsource attribute)": [[16, "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource.type", false]], "undistort_camera() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.undistort_camera", false]], "unloadeddataset (class in nerfbaselines.datasets)": [[4, "nerfbaselines.datasets.UnloadedDataset", false]], "unloadeddataset (class in nerfbaselines.types)": [[14, "nerfbaselines.types.UnloadedDataset", false]], "unpad_poses() (in module nerfbaselines.pose_utils)": [[10, "nerfbaselines.pose_utils.unpad_poses", false]], "unproject() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.unproject", false]], "unregister_callback() (nerfbaselines.utils.cancellationtoken method)": [[15, "nerfbaselines.utils.CancellationToken.unregister_callback", false]], "update() (nerfbaselines.utils.metricsaccumulator method)": [[15, "nerfbaselines.utils.MetricsAccumulator.update", false]], "update() (nerfbaselines.viewer.viser.viewerstate method)": [[16, "nerfbaselines.viewer.viser.ViewerState.update", false]], "viewerstate (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.ViewerState", false]], "viewmatrix() (in module nerfbaselines.pose_utils)": [[10, "nerfbaselines.pose_utils.viewmatrix", false]], "viserviewer (class in nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.ViserViewer", false]], "visualize_depth() (in module nerfbaselines.utils)": [[15, "nerfbaselines.utils.visualize_depth", false]], "visualize_depth() (in module nerfbaselines.viewer.viser)": [[16, "nerfbaselines.viewer.viser.visualize_depth", false]], "wandblogger (class in nerfbaselines.logging)": [[7, "nerfbaselines.logging.WandbLogger", false]], "wandbloggerevent (class in nerfbaselines.logging)": [[7, "nerfbaselines.logging.WandbLoggerEvent", false]], "warp_image_between_cameras() (in module nerfbaselines.cameras)": [[3, "nerfbaselines.cameras.warp_image_between_cameras", false]], "wget() (in module nerfbaselines.datasets.nerfstudio)": [[4, "nerfbaselines.datasets.nerfstudio.wget", false]], "wget() (in module nerfbaselines.io)": [[6, "nerfbaselines.io.wget", false]], "wigner_d_matrix() (in module nerfbaselines.math_utils)": [[8, "nerfbaselines.math_utils.wigner_D_matrix", false]], "winger_d_multiply_spherical_harmonics() (in module nerfbaselines.math_utils)": [[8, "nerfbaselines.math_utils.winger_D_multiply_spherical_harmonics", false]], "with_default() (nerfbaselines.viewer.viser.bindablesource method)": [[16, "nerfbaselines.viewer.viser.BindableSource.with_default", false]], "with_supported_camera_models() (in module nerfbaselines.evaluation)": [[5, "nerfbaselines.evaluation.with_supported_camera_models", false]], "wrap() (nerfbaselines.backends.backend method)": [[2, "nerfbaselines.backends.Backend.wrap", false]], "write_to_logger() (nerfbaselines.datasets.multidataseterror method)": [[4, "nerfbaselines.datasets.MultiDatasetError.write_to_logger", false]], "wxyz (nerfbaselines.viewer.viser.keyframe attribute)": [[16, "nerfbaselines.viewer.viser.Keyframe.wxyz", false]]}, "objects": {"": [[1, 0, 0, "-", "nerfbaselines"]], "nerfbaselines": [[1, 1, 1, "", "Cameras"], [1, 1, 1, "", "Indices"], [1, 1, 1, "", "Method"], [1, 1, 1, "", "MethodInfo"], [1, 1, 1, "", "ModelInfo"], [1, 1, 1, "", "OptimizeEmbeddingsOutput"], [1, 1, 1, "", "RenderOutput"], [2, 0, 0, "-", "backends"], [3, 0, 0, "-", "cameras"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "evaluation"], [6, 0, 0, "-", "io"], [7, 0, 0, "-", "logging"], [8, 0, 0, "-", "math_utils"], [9, 0, 0, "-", "metrics"], [10, 0, 0, "-", "pose_utils"], [11, 0, 0, "-", "registry"], [12, 0, 0, "-", "results"], [13, 0, 0, "-", "training"], [14, 0, 0, "-", "types"], [15, 0, 0, "-", "utils"], [16, 0, 0, "-", "viewer"]], "nerfbaselines-download-dataset": [[17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-v", "-v"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", "DATASET"]], "nerfbaselines-evaluate": [[17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", "PREDICTIONS"]], "nerfbaselines-export-demo": [[17, 7, 1, "cmdoption-nerfbaselines-export-demo-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-v", "-v"]], "nerfbaselines-fix-checkpoint": [[17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", "--new-checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-v", "-v"]], "nerfbaselines-fix-output-artifact": [[17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-force", "--force"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-inplace", "--inplace"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-input", "--input"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", "--rebuild-checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", "--rerun-evaluation"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", "--rerun-render"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-v", "-v"]], "nerfbaselines-generate-dataset-results": [[17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-dataset", "--dataset"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-method-links", "--method-links"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output-type", "--output-type"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-results", "--results"]], "nerfbaselines-generate-web": [[17, 7, 1, "cmdoption-nerfbaselines-generate-web-datasets", "--datasets"], [17, 7, 1, "cmdoption-nerfbaselines-generate-web-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-generate-web-sandbox-node", "--sandbox-node"], [17, 7, 1, "cmdoption-nerfbaselines-generate-web-source", "--source"], [17, 7, 1, "cmdoption-nerfbaselines-generate-web-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-generate-web-v", "-v"]], "nerfbaselines-render": [[17, 7, 1, "cmdoption-nerfbaselines-render-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-render-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-render-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-render-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-split", "--split"], [17, 7, 1, "cmdoption-nerfbaselines-render-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-render-v", "-v"]], "nerfbaselines-render-trajectory": [[17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output-type", "--output-type"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-trajectory", "--trajectory"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-v", "-v"]], "nerfbaselines-shell": [[17, 7, 1, "cmdoption-nerfbaselines-shell-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-shell-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-shell-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-shell-v", "-v"]], "nerfbaselines-test-method": [[17, 7, 1, "cmdoption-nerfbaselines-test-method-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-fast", "--fast"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-steps", "--steps"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-v", "-v"]], "nerfbaselines-train": [[17, 7, 1, "cmdoption-nerfbaselines-train-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-train-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-train-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-train-disable-output-artifact", "--disable-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-all-iters", "--eval-all-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-few-iters", "--eval-few-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-force-output-artifact", "--force-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-logger", "--logger"], [17, 7, 1, "cmdoption-nerfbaselines-train-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-train-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-train-save-iters", "--save-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-train-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-train-v", "-v"]], "nerfbaselines-viewer": [[17, 7, 1, "cmdoption-nerfbaselines-viewer-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-port", "--port"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-v", "-v"]], "nerfbaselines.Indices": [[1, 2, 1, "", "every_iters"]], "nerfbaselines.Method": [[1, 2, 1, "", "get_info"], [1, 2, 1, "", "get_method_info"], [1, 2, 1, "", "get_train_embedding"], [1, 2, 1, "", "install"], [1, 2, 1, "", "optimize_embeddings"], [1, 2, 1, "", "render"], [1, 2, 1, "", "save"], [1, 2, 1, "", "train_iteration"]], "nerfbaselines.MethodInfo": [[1, 3, 1, "", "name"], [1, 3, 1, "", "required_features"], [1, 3, 1, "", "supported_camera_models"]], "nerfbaselines.ModelInfo": [[1, 3, 1, "", "batch_size"], [1, 3, 1, "", "eval_batch_size"], [1, 3, 1, "", "hparams"], [1, 3, 1, "", "loaded_checkpoint"], [1, 3, 1, "", "loaded_step"], [1, 3, 1, "", "name"], [1, 3, 1, "", "num_iterations"], [1, 3, 1, "", "required_features"], [1, 3, 1, "", "supported_camera_models"]], "nerfbaselines.OptimizeEmbeddingsOutput": [[1, 3, 1, "", "embedding"], [1, 3, 1, "", "metrics"], [1, 3, 1, "", "render_output"]], "nerfbaselines.RenderOutput": [[1, 3, 1, "", "accumulation"], [1, 3, 1, "", "color"], [1, 3, 1, "", "depth"]], "nerfbaselines.backends": [[2, 1, 1, "", "ApptainerBackend"], [2, 1, 1, "", "ApptainerBackendSpec"], [2, 1, 1, "", "Backend"], [2, 1, 1, "", "CondaBackend"], [2, 1, 1, "", "CondaBackendSpec"], [2, 1, 1, "", "DockerBackend"], [2, 1, 1, "", "DockerBackendSpec"], [2, 1, 1, "", "SimpleBackend"], [2, 4, 1, "", "forward_port"], [2, 4, 1, "", "get_backend"], [2, 4, 1, "", "get_forwarded_ports"], [2, 4, 1, "", "get_mounts"], [2, 4, 1, "", "mount"]], "nerfbaselines.backends.ApptainerBackend": [[2, 2, 1, "", "install"], [2, 3, 1, "", "name"], [2, 2, 1, "", "shell"]], "nerfbaselines.backends.ApptainerBackendSpec": [[2, 3, 1, "", "conda_spec"], [2, 3, 1, "", "default_cuda_archs"], [2, 3, 1, "", "environment_name"], [2, 3, 1, "", "home_path"], [2, 3, 1, "", "image"], [2, 3, 1, "", "python_path"]], "nerfbaselines.backends.Backend": [[2, 2, 1, "", "install"], [2, 2, 1, "", "instance_call"], [2, 2, 1, "", "instance_del"], [2, 2, 1, "", "instance_getattr"], [2, 3, 1, "", "name"], [2, 2, 1, "", "shell"], [2, 2, 1, "", "static_call"], [2, 2, 1, "", "static_getattr"], [2, 2, 1, "", "wrap"]], "nerfbaselines.backends.CondaBackend": [[2, 2, 1, "", "install"], [2, 3, 1, "", "name"], [2, 2, 1, "", "shell"]], "nerfbaselines.backends.CondaBackendSpec": [[2, 3, 1, "", "environment_name"], [2, 3, 1, "", "install_script"], [2, 3, 1, "", "python_version"]], "nerfbaselines.backends.DockerBackend": [[2, 2, 1, "", "install"], [2, 3, 1, "", "name"], [2, 2, 1, "", "shell"]], "nerfbaselines.backends.DockerBackendSpec": [[2, 3, 1, "", "build_script"], [2, 3, 1, "", "conda_spec"], [2, 3, 1, "", "default_cuda_archs"], [2, 3, 1, "", "environment_name"], [2, 3, 1, "", "home_path"], [2, 3, 1, "", "image"], [2, 3, 1, "", "python_path"], [2, 3, 1, "", "replace_user"]], "nerfbaselines.backends.SimpleBackend": [[2, 2, 1, "", "instance_call"], [2, 2, 1, "", "instance_del"], [2, 2, 1, "", "instance_getattr"], [2, 3, 1, "", "name"], [2, 2, 1, "", "static_call"], [2, 2, 1, "", "static_getattr"]], "nerfbaselines.cameras": [[3, 4, 1, "", "get_image_pixels"], [3, 4, 1, "", "get_rays"], [3, 4, 1, "", "interpolate_bilinear"], [3, 4, 1, "", "project"], [3, 4, 1, "", "undistort_camera"], [3, 4, 1, "", "unproject"], [3, 4, 1, "", "warp_image_between_cameras"]], "nerfbaselines.datasets": [[4, 1, 1, "", "Dataset"], [4, 5, 1, "", "DatasetNotFoundError"], [4, 5, 1, "", "MultiDatasetError"], [4, 1, 1, "", "UnloadedDataset"], [4, 0, 0, "-", "blender"], [4, 0, 0, "-", "bundler"], [4, 0, 0, "-", "colmap"], [4, 4, 1, "", "dataset_index_select"], [4, 4, 1, "", "dataset_load_features"], [4, 4, 1, "", "download_dataset"], [4, 0, 0, "-", "llff"], [4, 4, 1, "", "load_dataset"], [4, 0, 0, "-", "mipnerf360"], [4, 0, 0, "-", "nerfstudio"], [4, 4, 1, "", "new_dataset"], [4, 0, 0, "-", "phototourism"], [4, 0, 0, "-", "tanksandtemples"]], "nerfbaselines.datasets.Dataset": [[4, 3, 1, "", "cameras"], [4, 3, 1, "", "image_paths"], [4, 3, 1, "", "image_paths_root"], [4, 3, 1, "", "images"], [4, 3, 1, "", "images_points3D_indices"], [4, 3, 1, "", "metadata"], [4, 3, 1, "", "points3D_rgb"], [4, 3, 1, "", "points3D_xyz"], [4, 3, 1, "", "sampling_mask_paths"], [4, 3, 1, "", "sampling_mask_paths_root"], [4, 3, 1, "", "sampling_masks"]], "nerfbaselines.datasets.MultiDatasetError": [[4, 2, 1, "", "write_to_logger"]], "nerfbaselines.datasets.UnloadedDataset": [[4, 3, 1, "", "cameras"], [4, 3, 1, "", "image_paths"], [4, 3, 1, "", "image_paths_root"], [4, 3, 1, "", "images"], [4, 3, 1, "", "images_points3D_indices"], [4, 3, 1, "", "metadata"], [4, 3, 1, "", "points3D_rgb"], [4, 3, 1, "", "points3D_xyz"], [4, 3, 1, "", "sampling_mask_paths"], [4, 3, 1, "", "sampling_mask_paths_root"], [4, 3, 1, "", "sampling_masks"]], "nerfbaselines.datasets.blender": [[4, 4, 1, "", "camera_model_to_int"], [4, 4, 1, "", "download_blender_dataset"], [4, 4, 1, "", "get_default_viewer_transform"], [4, 4, 1, "", "load_blender_dataset"], [4, 4, 1, "", "new_cameras"]], "nerfbaselines.datasets.bundler": [[4, 4, 1, "", "camera_model_to_int"], [4, 4, 1, "", "get_default_viewer_transform"], [4, 4, 1, "", "get_split_and_train_indices"], [4, 4, 1, "", "load_bundler_dataset"], [4, 4, 1, "", "load_bundler_file"], [4, 4, 1, "", "new_cameras"]], "nerfbaselines.datasets.colmap": [[4, 1, 1, "", "Camera"], [4, 1, 1, "", "Image"], [4, 1, 1, "", "Point3D"], [4, 4, 1, "", "camera_model_to_int"], [4, 4, 1, "", "get_default_viewer_transform"], [4, 4, 1, "", "load_colmap_dataset"], [4, 4, 1, "", "new_cameras"], [4, 4, 1, "", "padded_stack"], [4, 4, 1, "", "qvec2rotmat"], [4, 4, 1, "", "read_cameras_binary"], [4, 4, 1, "", "read_cameras_text"], [4, 4, 1, "", "read_images_binary"], [4, 4, 1, "", "read_images_text"], [4, 4, 1, "", "read_points3D_binary"], [4, 4, 1, "", "read_points3D_text"]], "nerfbaselines.datasets.colmap.Image": [[4, 2, 1, "", "qvec2rotmat"]], "nerfbaselines.datasets.llff": [[4, 4, 1, "", "camera_model_to_int"], [4, 4, 1, "", "download_llff_dataset"], [4, 4, 1, "", "load_llff_dataset"], [4, 4, 1, "", "new_cameras"]], "nerfbaselines.datasets.mipnerf360": [[4, 4, 1, "", "download_mipnerf360_dataset"], [4, 4, 1, "", "get_default_viewer_transform"], [4, 4, 1, "", "get_scene_scale"], [4, 4, 1, "", "load_colmap_dataset"], [4, 4, 1, "", "load_mipnerf360_dataset"], [4, 4, 1, "", "single"]], "nerfbaselines.datasets.nerfstudio": [[4, 4, 1, "", "camera_model_to_int"], [4, 4, 1, "", "download_capture_name"], [4, 4, 1, "", "download_nerfstudio_dataset"], [4, 4, 1, "", "get_default_viewer_transform"], [4, 4, 1, "", "get_scene_scale"], [4, 4, 1, "", "get_train_eval_split_all"], [4, 4, 1, "", "get_train_eval_split_filename"], [4, 4, 1, "", "get_train_eval_split_fraction"], [4, 4, 1, "", "get_train_eval_split_interval"], [4, 4, 1, "", "grab_file_id"], [4, 4, 1, "", "load_from_json"], [4, 4, 1, "", "load_nerfstudio_dataset"], [4, 4, 1, "", "new_cameras"], [4, 4, 1, "", "read_images_binary"], [4, 4, 1, "", "read_images_text"], [4, 4, 1, "", "read_points3D_binary"], [4, 4, 1, "", "read_points3D_text"], [4, 4, 1, "", "wget"]], "nerfbaselines.datasets.phototourism": [[4, 1, 1, "", "EvaluationProtocol"], [4, 1, 1, "", "NerfWEvaluationProtocol"], [4, 4, 1, "", "download_phototourism_dataset"], [4, 4, 1, "", "get_default_viewer_transform"], [4, 4, 1, "", "get_scene_scale"], [4, 4, 1, "", "horizontal_half_dataset"], [4, 4, 1, "", "image_to_srgb"], [4, 4, 1, "", "load_colmap_dataset"], [4, 4, 1, "", "load_phototourism_dataset"], [4, 4, 1, "", "single"]], "nerfbaselines.datasets.phototourism.EvaluationProtocol": [[4, 2, 1, "", "accumulate_metrics"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "get_name"], [4, 2, 1, "", "render"]], "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol": [[4, 2, 1, "", "accumulate_metrics"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "get_name"], [4, 2, 1, "", "render"]], "nerfbaselines.datasets.tanksandtemples": [[4, 4, 1, "", "assert_not_none"], [4, 4, 1, "", "download_tanksandtemples_dataset"], [4, 4, 1, "", "get_default_viewer_transform"], [4, 4, 1, "", "get_scene_scale"], [4, 4, 1, "", "load_colmap_dataset"], [4, 4, 1, "", "load_tanksandtemples_dataset"]], "nerfbaselines.evaluation": [[5, 1, 1, "", "DefaultEvaluationProtocol"], [5, 1, 1, "", "NerfEvaluationProtocol"], [5, 4, 1, "", "compute_metrics"], [5, 4, 1, "", "evaluate"], [5, 4, 1, "", "render_all_images"], [5, 4, 1, "", "render_frames"], [5, 4, 1, "", "trajectory_get_cameras"], [5, 4, 1, "", "trajectory_get_embeddings"], [5, 4, 1, "", "with_supported_camera_models"]], "nerfbaselines.evaluation.DefaultEvaluationProtocol": [[5, 2, 1, "", "accumulate_metrics"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "get_name"], [5, 2, 1, "", "render"]], "nerfbaselines.io": [[6, 4, 1, "", "deserialize_nb_info"], [6, 4, 1, "", "get_checkpoint_sha"], [6, 4, 1, "", "get_method_sha"], [6, 4, 1, "", "get_metrics_hash"], [6, 4, 1, "", "get_predictions_sha"], [6, 4, 1, "", "get_torch_checkpoint_sha"], [6, 4, 1, "", "load_trajectory"], [6, 4, 1, "", "new_nb_info"], [6, 4, 1, "", "numpy_from_base64"], [6, 4, 1, "", "numpy_to_base64"], [6, 4, 1, "", "open_any"], [6, 4, 1, "", "open_any_directory"], [6, 4, 1, "", "save_cameras_npz"], [6, 4, 1, "", "save_evaluation_results"], [6, 4, 1, "", "save_output_artifact"], [6, 4, 1, "", "save_predictions"], [6, 4, 1, "", "save_trajectory"], [6, 4, 1, "", "serialize_evaluation_results"], [6, 4, 1, "", "serialize_nb_info"], [6, 4, 1, "", "wget"]], "nerfbaselines.logging": [[7, 1, 1, "", "BaseLogger"], [7, 1, 1, "", "BaseLoggerEvent"], [7, 1, 1, "", "ConcatLogger"], [7, 1, 1, "", "ConcatLoggerEvent"], [7, 1, 1, "", "TensorboardLogger"], [7, 1, 1, "", "TensorboardLoggerEvent"], [7, 1, 1, "", "WandbLogger"], [7, 1, 1, "", "WandbLoggerEvent"], [7, 4, 1, "", "log_metrics"]], "nerfbaselines.logging.BaseLogger": [[7, 2, 1, "", "add_embedding"], [7, 2, 1, "", "add_event"], [7, 2, 1, "", "add_hparams"], [7, 2, 1, "", "add_image"], [7, 2, 1, "", "add_scalar"], [7, 2, 1, "", "add_text"]], "nerfbaselines.logging.BaseLoggerEvent": [[7, 2, 1, "", "add_embedding"], [7, 2, 1, "", "add_image"], [7, 2, 1, "", "add_plot"], [7, 2, 1, "", "add_scalar"], [7, 2, 1, "", "add_text"]], "nerfbaselines.logging.ConcatLogger": [[7, 2, 1, "", "add_event"], [7, 2, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLogger": [[7, 2, 1, "", "add_event"], [7, 2, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLoggerEvent": [[7, 2, 1, "", "add_embedding"], [7, 2, 1, "", "add_histogram"], [7, 2, 1, "", "add_image"], [7, 2, 1, "", "add_scalar"], [7, 2, 1, "", "add_text"]], "nerfbaselines.logging.WandbLogger": [[7, 2, 1, "", "add_event"], [7, 2, 1, "", "add_hparams"]], "nerfbaselines.logging.WandbLoggerEvent": [[7, 2, 1, "", "add_embedding"], [7, 2, 1, "", "add_histogram"], [7, 2, 1, "", "add_image"], [7, 2, 1, "", "add_plot"], [7, 2, 1, "", "add_scalar"], [7, 2, 1, "", "add_text"]], "nerfbaselines.math_utils": [[8, 4, 1, "", "quaternion_conjugate"], [8, 4, 1, "", "quaternion_multiply"], [8, 4, 1, "", "quaternion_to_rotation_matrix"], [8, 4, 1, "", "rotate_spherical_harmonics"], [8, 4, 1, "", "rotation_matrix_to_quaternion"], [8, 4, 1, "", "wigner_D_matrix"], [8, 4, 1, "", "winger_D_multiply_spherical_harmonics"]], "nerfbaselines.metrics": [[9, 4, 1, "", "dmpix_ssim"], [9, 4, 1, "", "lpips"], [9, 4, 1, "", "lpips_alex"], [9, 4, 1, "", "lpips_vgg"], [9, 4, 1, "", "mae"], [9, 4, 1, "", "mse"], [9, 4, 1, "", "psnr"], [9, 4, 1, "", "ssim"], [9, 4, 1, "", "torchmetrics_ssim"]], "nerfbaselines.pose_utils": [[10, 4, 1, "", "apply_transform"], [10, 4, 1, "", "get_transform_and_scale"], [10, 4, 1, "", "invert_transform"], [10, 4, 1, "", "pad_poses"], [10, 4, 1, "", "rotation_matrix"], [10, 4, 1, "", "unpad_poses"], [10, 4, 1, "", "viewmatrix"]], "nerfbaselines.registry": [[11, 1, 1, "", "DatasetSpec"], [11, 1, 1, "", "EvaluationProtocolSpec"], [11, 1, 1, "", "EvaluationProtocolWithNameSpec"], [11, 1, 1, "", "MethodSpec"], [11, 4, 1, "", "assert_not_none"], [11, 4, 1, "", "build_evaluation_protocol"], [11, 4, 1, "", "build_method"], [11, 4, 1, "", "get_dataset_downloaders"], [11, 4, 1, "", "get_dataset_loaders"], [11, 4, 1, "", "get_dataset_overrides"], [11, 4, 1, "", "get_dataset_spec"], [11, 4, 1, "", "get_method_spec"], [11, 4, 1, "", "get_supported_datasets"], [11, 4, 1, "", "get_supported_methods"], [11, 4, 1, "", "partialmethod"], [11, 4, 1, "", "register"], [11, 4, 1, "", "register_logger"]], "nerfbaselines.registry.DatasetSpec": [[11, 3, 1, "", "download_dataset_function"], [11, 3, 1, "", "evaluation_protocol"], [11, 3, 1, "", "load_dataset_function"], [11, 3, 1, "", "metadata"], [11, 3, 1, "", "priority"]], "nerfbaselines.registry.EvaluationProtocolSpec": [[11, 3, 1, "", "evaluation_protocol"]], "nerfbaselines.registry.EvaluationProtocolWithNameSpec": [[11, 3, 1, "", "evaluation_protocol"], [11, 3, 1, "", "name"]], "nerfbaselines.registry.MethodSpec": [[11, 3, 1, "", "apptainer"], [11, 3, 1, "", "backends_order"], [11, 3, 1, "", "conda"], [11, 3, 1, "", "dataset_overrides"], [11, 3, 1, "", "docker"], [11, 3, 1, "", "kwargs"], [11, 3, 1, "", "metadata"], [11, 3, 1, "", "method"]], "nerfbaselines.results": [[12, 1, 1, "", "DatasetInfo"], [12, 1, 1, "", "MetricInfo"], [12, 1, 1, "", "SceneInfo"], [12, 4, 1, "", "compile_dataset_results"], [12, 4, 1, "", "format_duration"], [12, 4, 1, "", "format_memory"], [12, 4, 1, "", "get_benchmark_datasets"], [12, 4, 1, "", "get_dataset_info"], [12, 4, 1, "", "load_metrics_from_results"], [12, 4, 1, "", "render_markdown_dataset_results_table"]], "nerfbaselines.results.DatasetInfo": [[12, 3, 1, "", "default_metric"], [12, 3, 1, "", "description"], [12, 3, 1, "", "id"], [12, 3, 1, "", "link"], [12, 3, 1, "", "metrics"], [12, 3, 1, "", "name"], [12, 3, 1, "", "paper_authors"], [12, 3, 1, "", "paper_link"], [12, 3, 1, "", "paper_title"], [12, 3, 1, "", "scenes"]], "nerfbaselines.results.MetricInfo": [[12, 3, 1, "", "ascending"], [12, 3, 1, "", "description"], [12, 3, 1, "", "id"], [12, 3, 1, "", "link"], [12, 3, 1, "", "name"]], "nerfbaselines.results.SceneInfo": [[12, 3, 1, "", "id"], [12, 3, 1, "", "name"]], "nerfbaselines.training": [[13, 1, 1, "", "Trainer"], [13, 4, 1, "", "eval_all"], [13, 4, 1, "", "eval_few"]], "nerfbaselines.training.Trainer": [[13, 2, 1, "", "eval_all"], [13, 2, 1, "", "eval_few"], [13, 2, 1, "", "get_logger"], [13, 6, 1, "", "num_iterations"], [13, 2, 1, "", "save"], [13, 2, 1, "", "train"], [13, 2, 1, "", "train_iteration"]], "nerfbaselines.types": [[14, 1, 1, "", "Dataset"], [14, 1, 1, "", "DatasetSpecMetadata"], [14, 1, 1, "", "DownloadDatasetFunction"], [14, 1, 1, "", "EvaluationProtocol"], [14, 1, 1, "", "GenericCameras"], [14, 1, 1, "", "GenericCamerasImpl"], [14, 1, 1, "", "ImageSetInterpolationSource"], [14, 1, 1, "", "KochanekBartelsInterpolationSource"], [14, 1, 1, "", "LoadDatasetFunction"], [14, 1, 1, "", "Logger"], [14, 1, 1, "", "LoggerEvent"], [14, 1, 1, "", "Trajectory"], [14, 1, 1, "", "TrajectoryFrame"], [14, 1, 1, "", "TrajectoryFrameAppearance"], [14, 1, 1, "", "TrajectoryKeyframe"], [14, 1, 1, "", "UnloadedDataset"], [14, 4, 1, "", "camera_model_from_int"], [14, 4, 1, "", "camera_model_to_int"], [14, 4, 1, "", "new_cameras"]], "nerfbaselines.types.Dataset": [[14, 3, 1, "", "cameras"], [14, 3, 1, "", "image_paths"], [14, 3, 1, "", "image_paths_root"], [14, 3, 1, "", "images"], [14, 3, 1, "", "images_points3D_indices"], [14, 3, 1, "", "metadata"], [14, 3, 1, "", "points3D_rgb"], [14, 3, 1, "", "points3D_xyz"], [14, 3, 1, "", "sampling_mask_paths"], [14, 3, 1, "", "sampling_mask_paths_root"], [14, 3, 1, "", "sampling_masks"]], "nerfbaselines.types.DatasetSpecMetadata": [[14, 3, 1, "", "default_metric"], [14, 3, 1, "", "description"], [14, 3, 1, "", "id"], [14, 3, 1, "", "link"], [14, 3, 1, "", "metrics"], [14, 3, 1, "", "name"], [14, 3, 1, "", "paper_authors"], [14, 3, 1, "", "paper_link"], [14, 3, 1, "", "paper_title"], [14, 3, 1, "", "scenes"]], "nerfbaselines.types.EvaluationProtocol": [[14, 2, 1, "", "accumulate_metrics"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "get_name"], [14, 2, 1, "", "render"]], "nerfbaselines.types.GenericCameras": [[14, 2, 1, "", "apply"], [14, 6, 1, "", "camera_types"], [14, 2, 1, "", "cat"], [14, 6, 1, "", "distortion_parameters"], [14, 6, 1, "", "image_sizes"], [14, 6, 1, "", "intrinsics"], [14, 2, 1, "", "item"], [14, 6, 1, "", "metadata"], [14, 6, 1, "", "nears_fars"], [14, 6, 1, "", "poses"], [14, 2, 1, "", "replace"]], "nerfbaselines.types.GenericCamerasImpl": [[14, 2, 1, "", "apply"], [14, 3, 1, "", "camera_types"], [14, 2, 1, "", "cat"], [14, 3, 1, "", "distortion_parameters"], [14, 3, 1, "", "image_sizes"], [14, 3, 1, "", "intrinsics"], [14, 2, 1, "", "item"], [14, 3, 1, "", "metadata"], [14, 3, 1, "", "nears_fars"], [14, 3, 1, "", "poses"], [14, 2, 1, "", "replace"]], "nerfbaselines.types.ImageSetInterpolationSource": [[14, 3, 1, "", "default_appearance"], [14, 3, 1, "", "default_fov"], [14, 3, 1, "", "default_transition_duration"], [14, 3, 1, "", "interpolation"], [14, 3, 1, "", "keyframes"], [14, 3, 1, "", "type"]], "nerfbaselines.types.KochanekBartelsInterpolationSource": [[14, 3, 1, "", "default_appearance"], [14, 3, 1, "", "default_fov"], [14, 3, 1, "", "default_transition_duration"], [14, 3, 1, "", "interpolation"], [14, 3, 1, "", "is_cycle"], [14, 3, 1, "", "keyframes"], [14, 3, 1, "", "tension"], [14, 3, 1, "", "type"]], "nerfbaselines.types.Logger": [[14, 2, 1, "", "add_embedding"], [14, 2, 1, "", "add_event"], [14, 2, 1, "", "add_image"], [14, 2, 1, "", "add_scalar"], [14, 2, 1, "", "add_text"]], "nerfbaselines.types.LoggerEvent": [[14, 2, 1, "", "add_embedding"], [14, 2, 1, "", "add_histogram"], [14, 2, 1, "", "add_image"], [14, 2, 1, "", "add_plot"], [14, 2, 1, "", "add_scalar"], [14, 2, 1, "", "add_text"]], "nerfbaselines.types.Trajectory": [[14, 3, 1, "", "appearances"], [14, 3, 1, "", "camera_model"], [14, 3, 1, "", "fps"], [14, 3, 1, "", "frames"], [14, 3, 1, "", "image_size"], [14, 3, 1, "", "source"]], "nerfbaselines.types.TrajectoryFrame": [[14, 3, 1, "", "appearance_weights"], [14, 3, 1, "", "intrinsics"], [14, 3, 1, "", "pose"]], "nerfbaselines.types.TrajectoryFrameAppearance": [[14, 3, 1, "", "embedding"], [14, 3, 1, "", "embedding_train_index"]], "nerfbaselines.types.TrajectoryKeyframe": [[14, 3, 1, "", "appearance"], [14, 3, 1, "", "fov"], [14, 3, 1, "", "pose"], [14, 3, 1, "", "transition_duration"]], "nerfbaselines.types.UnloadedDataset": [[14, 3, 1, "", "cameras"], [14, 3, 1, "", "image_paths"], [14, 3, 1, "", "image_paths_root"], [14, 3, 1, "", "images"], [14, 3, 1, "", "images_points3D_indices"], [14, 3, 1, "", "metadata"], [14, 3, 1, "", "points3D_rgb"], [14, 3, 1, "", "points3D_xyz"], [14, 3, 1, "", "sampling_mask_paths"], [14, 3, 1, "", "sampling_mask_paths_root"], [14, 3, 1, "", "sampling_masks"]], "nerfbaselines.utils": [[15, 1, 1, "", "CancellationToken"], [15, 5, 1, "", "CancelledException"], [15, 1, 1, "", "Formatter"], [15, 1, 1, "", "IndicesClickType"], [15, 1, 1, "", "MetricsAccumulator"], [15, 5, 1, "", "NoGPUError"], [15, 1, 1, "", "ResourcesUtilizationInfo"], [15, 1, 1, "", "SetParamOptionType"], [15, 4, 1, "", "apply_colormap"], [15, 4, 1, "", "assert_not_none"], [15, 4, 1, "", "batched"], [15, 4, 1, "", "build_measure_iter_time"], [15, 4, 1, "", "cancellable"], [15, 4, 1, "", "cast_value"], [15, 4, 1, "", "convert_image_dtype"], [15, 4, 1, "", "flatten_hparams"], [15, 4, 1, "", "get_package_dependencies"], [15, 4, 1, "", "get_resources_utilization_info"], [15, 4, 1, "", "handle_cli_error"], [15, 4, 1, "", "image_to_srgb"], [15, 4, 1, "", "is_broadcastable"], [15, 4, 1, "", "linear_to_srgb"], [15, 4, 1, "", "make_image_grid"], [15, 4, 1, "", "mark_host"], [15, 4, 1, "", "padded_stack"], [15, 4, 1, "", "partialclass"], [15, 4, 1, "", "partialmethod"], [15, 4, 1, "", "read_image"], [15, 4, 1, "", "remap_error"], [15, 4, 1, "", "run_inside_eval_container"], [15, 4, 1, "", "run_on_host"], [15, 4, 1, "", "save_depth"], [15, 4, 1, "", "save_image"], [15, 4, 1, "", "setup_logging"], [15, 4, 1, "", "srgb_to_linear"], [15, 4, 1, "", "visualize_depth"]], "nerfbaselines.utils.CancellationToken": [[15, 2, 1, "", "cancel"], [15, 6, 1, "", "cancelled"], [15, 2, 1, "", "invoke"], [15, 2, 1, "", "raise_for_cancelled"], [15, 2, 1, "", "register_callback"], [15, 2, 1, "", "unregister_callback"]], "nerfbaselines.utils.Formatter": [[15, 2, 1, "", "format"]], "nerfbaselines.utils.IndicesClickType": [[15, 2, 1, "", "convert"], [15, 3, 1, "", "name"]], "nerfbaselines.utils.MetricsAccumulator": [[15, 2, 1, "", "pop"], [15, 2, 1, "", "update"]], "nerfbaselines.utils.ResourcesUtilizationInfo": [[15, 3, 1, "", "gpu_memory"], [15, 3, 1, "", "gpu_name"], [15, 3, 1, "", "memory"]], "nerfbaselines.utils.SetParamOptionType": [[15, 2, 1, "", "convert"], [15, 3, 1, "", "name"]], "nerfbaselines.viewer": [[16, 4, 1, "", "deserialize_nb_info"], [16, 4, 1, "", "get_c2w"], [16, 4, 1, "", "get_orientation_transform"], [16, 4, 1, "", "get_position_quaternion"], [16, 4, 1, "", "handle_cli_error"], [16, 4, 1, "", "open_any_directory"], [16, 4, 1, "", "qvec2rotmat"], [16, 4, 1, "", "rotation_matrix"], [16, 4, 1, "", "rotmat2qvec"], [16, 4, 1, "", "setup_logging"], [16, 0, 0, "-", "viser"]], "nerfbaselines.viewer.viser": [[16, 1, 1, "", "BindableSource"], [16, 1, 1, "", "BindableViserServer"], [16, 5, 1, "", "CancelledException"], [16, 1, 1, "", "Dataset"], [16, 1, 1, "", "EventCancellationToken"], [16, 1, 1, "", "Keyframe"], [16, 1, 1, "", "KochanekBartelsInterpolationSource"], [16, 1, 1, "", "Trajectory"], [16, 1, 1, "", "TrajectoryFrame"], [16, 1, 1, "", "TrajectoryFrameAppearance"], [16, 1, 1, "", "TrajectoryKeyframe"], [16, 1, 1, "", "ViewerState"], [16, 1, 1, "", "ViserViewer"], [16, 4, 1, "", "apply_colormap"], [16, 4, 1, "", "apply_transform"], [16, 4, 1, "", "assert_not_none"], [16, 4, 1, "", "autobind"], [16, 4, 1, "", "dataset_index_select"], [16, 4, 1, "", "dataset_load_features"], [16, 4, 1, "", "get_c2w"], [16, 4, 1, "", "get_position_quaternion"], [16, 4, 1, "", "get_transform_and_scale"], [16, 4, 1, "", "image_to_srgb"], [16, 4, 1, "", "invert_transform"], [16, 4, 1, "", "load_dataset"], [16, 4, 1, "", "load_trajectory"], [16, 4, 1, "", "new_cameras"], [16, 4, 1, "", "pad_poses"], [16, 4, 1, "", "pad_to_aspect_ratio"], [16, 4, 1, "", "run_viser_viewer"], [16, 4, 1, "", "safe_eq"], [16, 4, 1, "", "save_trajectory"], [16, 4, 1, "", "simple_cache"], [16, 4, 1, "", "state_compute_duration"], [16, 4, 1, "", "three_js_perspective_camera_focal_length"], [16, 4, 1, "", "transform_points"], [16, 4, 1, "", "visualize_depth"]], "nerfbaselines.viewer.viser.BindableSource": [[16, 2, 1, "", "map"], [16, 2, 1, "", "with_default"]], "nerfbaselines.viewer.viser.Dataset": [[16, 3, 1, "", "cameras"], [16, 3, 1, "", "image_paths"], [16, 3, 1, "", "image_paths_root"], [16, 3, 1, "", "images"], [16, 3, 1, "", "images_points3D_indices"], [16, 3, 1, "", "metadata"], [16, 3, 1, "", "points3D_rgb"], [16, 3, 1, "", "points3D_xyz"], [16, 3, 1, "", "sampling_mask_paths"], [16, 3, 1, "", "sampling_mask_paths_root"], [16, 3, 1, "", "sampling_masks"]], "nerfbaselines.viewer.viser.EventCancellationToken": [[16, 2, 1, "", "cancel"], [16, 6, 1, "", "cancelled"]], "nerfbaselines.viewer.viser.Keyframe": [[16, 3, 1, "", "appearance_train_index"], [16, 3, 1, "", "fov"], [16, 3, 1, "", "position"], [16, 3, 1, "", "transition_duration"], [16, 3, 1, "", "wxyz"]], "nerfbaselines.viewer.viser.KochanekBartelsInterpolationSource": [[16, 3, 1, "", "default_appearance"], [16, 3, 1, "", "default_fov"], [16, 3, 1, "", "default_transition_duration"], [16, 3, 1, "", "interpolation"], [16, 3, 1, "", "is_cycle"], [16, 3, 1, "", "keyframes"], [16, 3, 1, "", "tension"], [16, 3, 1, "", "type"]], "nerfbaselines.viewer.viser.Trajectory": [[16, 3, 1, "", "appearances"], [16, 3, 1, "", "camera_model"], [16, 3, 1, "", "fps"], [16, 3, 1, "", "frames"], [16, 3, 1, "", "image_size"], [16, 3, 1, "", "source"]], "nerfbaselines.viewer.viser.TrajectoryFrame": [[16, 3, 1, "", "appearance_weights"], [16, 3, 1, "", "intrinsics"], [16, 3, 1, "", "pose"]], "nerfbaselines.viewer.viser.TrajectoryFrameAppearance": [[16, 3, 1, "", "embedding"], [16, 3, 1, "", "embedding_train_index"]], "nerfbaselines.viewer.viser.TrajectoryKeyframe": [[16, 3, 1, "", "appearance"], [16, 3, 1, "", "fov"], [16, 3, 1, "", "pose"], [16, 3, 1, "", "transition_duration"]], "nerfbaselines.viewer.viser.ViewerState": [[16, 6, 1, "", "b"], [16, 3, 1, "", "background_color"], [16, 3, 1, "", "camera_frustums_test"], [16, 3, 1, "", "camera_frustums_train"], [16, 3, 1, "", "camera_path_default_transition_duration"], [16, 3, 1, "", "camera_path_framerate"], [16, 3, 1, "", "camera_path_interpolation"], [16, 3, 1, "", "camera_path_keyframes"], [16, 3, 1, "", "camera_path_loop"], [16, 3, 1, "", "camera_path_move_keyframes"], [16, 3, 1, "", "camera_path_show_keyframes"], [16, 3, 1, "", "camera_path_show_spline"], [16, 3, 1, "", "camera_path_tension"], [16, 3, 1, "", "composite_depth"], [16, 3, 1, "", "fps"], [16, 2, 1, "", "get"], [16, 2, 1, "", "get_trajectory"], [16, 3, 1, "", "image_names_train"], [16, 3, 1, "", "input_points"], [16, 2, 1, "", "load_trajectory"], [16, 2, 1, "", "on_update"], [16, 3, 1, "", "output_split"], [16, 3, 1, "", "output_type"], [16, 3, 1, "", "output_type_options"], [16, 3, 1, "", "preview_current_frame"], [16, 3, 1, "", "preview_is_playing"], [16, 3, 1, "", "preview_render"], [16, 3, 1, "", "preview_time"], [16, 3, 1, "", "render_appearance_train_index"], [16, 3, 1, "", "render_fov"], [16, 3, 1, "", "render_resolution"], [16, 3, 1, "", "resolution"], [16, 3, 1, "", "show_input_points"], [16, 3, 1, "", "show_test_cameras"], [16, 3, 1, "", "show_train_cameras"], [16, 3, 1, "", "split_output_type"], [16, 3, 1, "", "split_percentage"], [16, 3, 1, "", "supports_appearance_from_train_images"], [16, 2, 1, "", "update"]], "nerfbaselines.viewer.viser.ViserViewer": [[16, 2, 1, "", "add_dataset_views"], [16, 2, 1, "", "add_initial_point_cloud"], [16, 2, 1, "", "run"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"], "7": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception", "6": "py:property", "7": "std:cmdoption"}, "terms": {"": [8, 9, 15], "0": [2, 9, 10, 16], "01": 9, "03": 9, "04264": [18, 20], "06003": 20, "06706": 20, "08934": [18, 20], "09517": 20, "09987": 20, "1": [9, 10, 13, 16, 20], "10": [8, 18], "10000": 13, "10241": 20, "10772": 20, "1080": 16, "1085": 8, "10902": 20, "11": 9, "12": 20, "12077": [18, 20], "13": 9, "16493": 20, "18715": 20, "1920": [15, 16], "19tv6kdvgcmg3cgz1bniunbbmd": 4, "1aba4ea7a29b05e86f5d223245a573e7dcd86caa": 16, "2": [4, 8, 14, 15, 16, 20], "200": 20, "2000": 13, "2003": [18, 20], "2004": 9, "2023": 4, "2111": [18, 20], "2203": 20, "23": 8, "2301": 20, "2302": [18, 20], "2304": 20, "2308": 20, "2311": 20, "2401": 20, "2404": 20, "2405": 20, "2514": 8, "3": [8, 10, 16, 20], "30": 16, "360": 19, "38": 16, "3d": [18, 20], "3d_gaussian_splatting_low": 20, "3x3": 8, "4": [4, 9, 10, 16, 20], "42": 16, "4654": 8, "5": [9, 16], "512": 16, "55": 16, "6": [8, 20], "600": 9, "6006": 16, "612": 9, "75": 16, "8": 18, "A": [5, 9, 12, 17, 18, 20], "If": [4, 5, 8, 9, 15], "It": [9, 15, 18, 20], "Near": 14, "No": [8, 15], "On": 19, "One": 9, "The": [4, 5, 8, 9, 10, 12, 15, 16, 18, 20], "_": 4, "_incompletedataset": [4, 14, 16], "_prefix": 15, "_temporary_appearance_train_index": 16, "_update_callback": 16, "abhik": [18, 20], "absolut": 9, "abstract": 1, "acceler": 20, "accept": 15, "accumul": 1, "accumulate_metr": [4, 5, 14], "achiev": 20, "acquir": 18, "actual": 8, "add": [7, 20], "add_dataset_view": 16, "add_embed": [7, 14], "add_ev": [7, 14], "add_histogram": [7, 14], "add_hparam": 7, "add_imag": [7, 14], "add_initial_point_cloud": 16, "add_plot": [7, 14], "add_scalar": [7, 14], "add_text": [7, 14], "addapt": 20, "address": [2, 20], "advanc": 18, "after": 9, "ahuja": [18, 20], "alex": 20, "alexand": [18, 20], "algorithm": 8, "alia": 20, "alias": [18, 20], "all": [4, 5, 17], "allow": [8, 20], "allow_alpha": [4, 15, 16], "almost": 8, "along": 20, "alreadi": 15, "also": [8, 15, 20], "an": [8, 14, 18, 20], "andrea": 20, "angjoo": [18, 20], "ani": [1, 7, 8, 9, 11, 12, 13, 15, 16], "anisotrop": 9, "anpei": 20, "anti": [18, 20], "apchenstu": 20, "api": 19, "app": 18, "appear": [8, 14, 16, 20], "appearance_train_index": 16, "appearance_weight": [14, 16], "append": 15, "appli": 14, "apply_colormap": [15, 16], "apply_transform": [10, 16], "approach": 20, "approxim": 20, "apptain": [2, 11, 17], "apptainerbackend": 2, "apptainerbackendspec": 2, "ar": [4, 8, 9, 15, 16, 18], "arg": [1, 2, 4, 7, 14, 15, 16, 17], "argument": [15, 17], "arno": 18, "around": 18, "arrai": [6, 8, 15, 16], "arriv": 15, "artifact": [6, 19, 20], "arxiv": [18, 20], "ascend": 12, "aspect_ratio": 16, "assert_not_non": [4, 11, 15, 16], "assess": 9, "asset": 20, "assum": 8, "attr": 2, "attribut": 15, "austin": [18, 20], "author": [18, 20], "autobind": 16, "automat": 20, "avail": 15, "averag": [9, 15], "axes_label": [7, 14], "b": [9, 10, 16], "backend": [0, 11, 17], "backend_nam": [11, 15, 17], "backends_ord": 11, "background": [15, 18], "background_color": [4, 15, 16], "bandwidth": 9, "bar": [5, 8], "barron": [18, 20], "bartel": [14, 16], "base": [1, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 20], "baseimag": 4, "baselogg": 7, "baseloggerev": 7, "batch": 15, "batch_siz": [1, 15], "befor": 15, "below": 8, "ben": [18, 20], "benchmark": [6, 12, 18, 20], "benjamin": 20, "bernhard": 20, "better": [9, 20], "between": 9, "big": 17, "binaryio": [6, 15], "binbin": 20, "bindablesourc": 16, "bindableviserserv": 16, "bit": 8, "blender": [19, 20], "blob": 16, "bool": [1, 2, 4, 5, 6, 9, 12, 13, 14, 15, 16], "both": [4, 18], "bottom": [10, 16], "bovik": 9, "boyang": 20, "brent": [18, 20], "brualla": 20, "build": [7, 8], "build_evaluation_protocol": 11, "build_measure_iter_tim": 15, "build_method": 11, "build_script": 2, "byte": 6, "c": 9, "c2": 16, "call": 15, "callabl": [2, 9, 11, 14, 15, 16], "callback": [15, 16], "camera": [0, 1, 4, 5, 6, 14, 16, 18, 19, 20], "camera_frustums_test": 16, "camera_frustums_train": 16, "camera_id": 4, "camera_model": [4, 14, 16], "camera_model_from_int": 14, "camera_model_to_int": [4, 14], "camera_path_default_transition_dur": 16, "camera_path_framer": 16, "camera_path_interpol": 16, "camera_path_keyfram": 16, "camera_path_loop": 16, "camera_path_move_keyfram": 16, "camera_path_show_keyfram": 16, "camera_path_show_splin": 16, "camera_path_tens": 16, "camera_typ": [4, 14, 16], "cameras1": 3, "cameras2": 3, "camp": [17, 20], "can": [4, 8, 9], "cancel": [15, 16], "cancellation_token": 15, "cancellationtoken": [15, 16], "cancelledexcept": [15, 16], "cannot": 15, "captur": [4, 18, 20], "carri": 15, "case": [9, 20], "cast_valu": 15, "casual": 20, "cat": 14, "caus": 9, "cc": 4, "centric": [4, 18, 20], "certain": 15, "certainli": 8, "chang": 14, "check": 16, "checkpoint": [1, 19], "checkpoint_data": 6, "chen": 20, "christoph": 20, "cl": [11, 15], "class": [1, 2, 4, 5, 7, 11, 12, 13, 14, 15, 16], "classmethod": [1, 14], "cli": 19, "closest": 8, "cloud": 20, "cnn": 20, "code": 18, "coeffici": 8, "collect": 18, "colmap": [18, 20], "colmap_path": 4, "color": [1, 4, 5, 7, 9, 16, 17], "color_spac": [4, 15, 16], "colorspac": 9, "column": 8, "com": [4, 16, 18, 20], "combin": 20, "comma": 17, "command": [15, 17], "commit": 7, "compact": 20, "compar": [9, 20], "compat": 15, "compil": 12, "compile_dataset_result": 12, "compon": [8, 20], "composite_depth": 16, "comput": [9, 10, 15, 16], "compute_metr": 5, "concatlogg": 7, "concatloggerev": 7, "conda": [2, 11, 17], "conda_spec": 2, "condabackend": 2, "condabackendspec": 2, "condit": [18, 20], "config_overrid": [1, 6, 13, 17], "conjug": 8, "consid": 8, "consist": 18, "const": 4, "construct": 10, "contain": [5, 12, 17], "context": 15, "contextmanag": [7, 14], "convent": 8, "converg": 8, "convert": [8, 15], "convert_image_dtyp": 15, "convolut": 9, "correct": 15, "correspond": 8, "coupl": 15, "ctx": 15, "current": [1, 15], "cx": 14, "cy": 14, "d": [8, 20], "dampen": 9, "dariu": 20, "data": [4, 6, 7, 14, 16, 17, 18], "data_rang": 9, "dataset": [0, 1, 5, 6, 12, 13, 14, 16, 19, 20], "dataset_index_select": [4, 16], "dataset_load_featur": [4, 16], "dataset_metadata": [11, 16], "dataset_overrid": 11, "dataset_typ": 4, "datasetinfo": 12, "datasetnotfounderror": 4, "datasetspec": 11, "datasetspecmetadata": [11, 14], "datefmt": 15, "david": [18, 20], "default": [1, 9, 15, 16, 17, 18], "default_appear": [14, 16], "default_cuda_arch": 2, "default_fov": [14, 16], "default_metr": [12, 14], "default_transition_dur": [14, 16], "defaultevaluationprotocol": 5, "defin": 9, "degre": [16, 20], "delaunai": 20, "demo": 19, "depth": [1, 5, 15, 16, 17], "descript": [5, 6, 7, 12, 14, 15], "deserialize_nb_info": [6, 16], "design": 20, "dest": 17, "determin": [9, 15], "develop": [18, 20], "deviat": 9, "dict": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16], "dictionari": [4, 5, 12, 15], "differ": 20, "dim": 9, "dimens": 8, "dimension": 20, "directli": 4, "directori": [5, 6, 17], "disabl": 17, "display_nam": [7, 14], "distort": [14, 20], "distortion_paramet": [4, 14, 16], "distractor": 20, "dm_pix": 9, "dmpix_ssim": 9, "doc": 20, "docker": [2, 11, 17], "dockerbackend": 2, "dockerbackendspec": 2, "doe": [8, 9, 20], "doi": 8, "dor": [18, 20], "download": [4, 18, 19], "download_blender_dataset": 4, "download_capture_nam": 4, "download_dataset": 4, "download_dataset_funct": 11, "download_llff_dataset": 4, "download_mipnerf360_dataset": 4, "download_nerfstudio_dataset": 4, "download_phototourism_dataset": 4, "download_tanksandtemples_dataset": 4, "downloaddatasetfunct": [11, 14], "downscale_factor": 4, "drettaki": 20, "drive": 4, "drive_link": 4, "dtype": [4, 15, 16], "dx": 8, "dynam": 20, "e": 9, "each": [1, 8, 9, 18], "effici": 20, "eigenvalu": 8, "either": 18, "elev": 18, "ell_max": 8, "embed": [1, 5, 7, 14, 16], "embedding_train_index": [14, 16], "enabl": 20, "encod": 20, "ensur": 15, "environ": 18, "environment_nam": 2, "equal": 16, "error": [4, 8, 9, 14], "estim": 9, "ethan": [18, 20], "eval": [4, 17], "eval_al": 13, "eval_all_it": [13, 17], "eval_batch_s": 1, "eval_few": 13, "eval_few_it": [13, 17], "eval_interv": 4, "evalu": [0, 4, 12, 14, 18, 19], "evaluation_protocol": [5, 6, 11, 13], "evaluationprotocol": [4, 5, 11, 13, 14], "evaluationprotocolspec": 11, "evaluationprotocolwithnamespec": 11, "evan": 20, "even": 16, "event": [6, 7, 15], "eventcancellationtoken": 16, "every_it": 1, "evonn": [18, 20], "exactli": 9, "except": [4, 15, 16], "expected_scal": [15, 16], "explicit": 20, "exploit": 20, "export": 19, "express": 8, "extend": 20, "extens": 20, "extra": 15, "extract": 20, "face": 4, "factor": 20, "factori": 16, "fail": 15, "fals": [1, 4, 5, 9, 10, 15, 16], "far": 14, "fast": [17, 20], "featur": [4, 16, 20], "few": 17, "field": [16, 17, 18, 19], "file": [4, 5, 6, 12, 15, 16, 17], "file_id_or_zip_url": 4, "filenam": 4, "filter": 9, "filter_fn": 9, "final": 17, "fink": 20, "first": 9, "fishey": 18, "five": 18, "fix": [18, 19], "flatten_hparam": 15, "float": [1, 4, 5, 7, 8, 9, 12, 14, 15, 16], "float32": 9, "float64": 9, "fmt": 15, "fn": [14, 15, 16], "fn_back": 16, "focal": 16, "folder": 4, "forc": 17, "format": [4, 15], "format_dur": 12, "format_memori": 12, "formatexcept": 15, "formatt": 15, "formattim": 15, "forward": 4, "forward_port": 2, "four": 18, "fov": [14, 16], "fp": [5, 14, 16, 20], "fr": 20, "fraction": 4, "frame": [5, 14, 16, 18], "framework": [18, 20], "frank": 20, "frederik": 20, "free": 20, "fridovich": 20, "from": [4, 5, 8, 9, 10, 12, 15, 20], "frozenset": [1, 4, 11, 13, 16], "frustum": 20, "full_opencv": [4, 14, 16], "func": 15, "function": [2, 8, 9], "fungraph": 20, "fx": 14, "fy": 14, "gaussian": [9, 17, 19], "gaussian_kernel": 9, "geiger": 20, "gener": [12, 14, 19], "generate_output_artifact": 13, "genericcamera": [1, 3, 14], "genericcamerasimpl": 14, "geometri": 20, "georg": 20, "georgio": 20, "get": [1, 4, 11, 12, 16], "get_backend": 2, "get_benchmark_dataset": 12, "get_c2w": 16, "get_checkpoint_sha": 6, "get_dataset_download": 11, "get_dataset_info": 12, "get_dataset_load": 11, "get_dataset_overrid": 11, "get_dataset_spec": 11, "get_default_viewer_transform": 4, "get_forwarded_port": 2, "get_image_pixel": 3, "get_info": 1, "get_logg": 13, "get_method_info": 1, "get_method_sha": 6, "get_method_spec": 11, "get_metrics_hash": 6, "get_mount": 2, "get_nam": [4, 5, 14], "get_orientation_transform": 16, "get_package_depend": 15, "get_position_quaternion": 16, "get_predictions_sha": 6, "get_rai": 3, "get_resources_utilization_info": 15, "get_scene_scal": 4, "get_split_and_train_indic": 4, "get_supported_dataset": 11, "get_supported_method": 11, "get_torch_checkpoint_sha": 6, "get_train_embed": 1, "get_train_eval_split_al": 4, "get_train_eval_split_filenam": 4, "get_train_eval_split_fract": 4, "get_train_eval_split_interv": 4, "get_trajectori": 16, "get_transform_and_scal": [10, 16], "getmessag": 15, "getter": 16, "giacomo": 20, "github": [16, 20], "given": [1, 4], "go": 19, "good": 20, "googl": 4, "googleapi": 18, "gpu": [15, 17], "gpu_memori": 15, "gpu_nam": 15, "grab_file_id": 4, "graphic": 20, "grayscal": 9, "grid": 20, "ground": [9, 18], "ground_truth_sha": 6, "gt": 5, "guidanc": 8, "gz": 17, "h": 9, "ha": 20, "handl": 20, "handle_cli_error": [15, 16], "hao": 20, "harmon": 8, "has_scal": [10, 16], "hash": [6, 20], "have": [8, 9], "hedman": [18, 20], "height": [4, 16], "henzler": 20, "higher": 9, "histogram": 7, "home_path": 2, "homogen": [10, 16], "horizontal_half_dataset": 4, "hou": 20, "howev": 20, "hparam": [1, 7, 15], "hparam_plugin_metr": 7, "http": [4, 8, 16, 18, 20], "huang": 20, "huge": 17, "i": [4, 8, 9, 14, 15, 16, 18, 20], "id": [4, 12, 14, 18, 20], "identifi": 7, "ieee": 9, "ignor": [9, 15], "ignore_view": 15, "imag": [1, 2, 3, 4, 5, 7, 9, 14, 15, 16, 17, 18, 20], "image_filenam": 4, "image_height": 16, "image_id": 4, "image_list": 4, "image_nam": 4, "image_names_train": 16, "image_path": [4, 14, 16], "image_paths_root": [4, 14, 16], "image_s": [3, 4, 14, 16], "image_to_srgb": [4, 15, 16], "images_path": 4, "images_points3d_indic": [4, 14, 16], "imagesetinterpolationsourc": [14, 16], "img": [15, 16], "implement": [9, 20], "improv": 20, "includ": 18, "index": [1, 9], "indic": [1, 4, 13, 15, 19], "indicesclicktyp": 15, "individu": 9, "indoor": 18, "industri": 18, "info": [1, 5, 6, 12, 16, 18, 20], "inform": 15, "ingp": 20, "initi": 1, "inplac": 17, "input": [8, 9, 15, 17, 20], "input_point": 16, "inria": 20, "instal": [1, 2, 17], "install_script": 2, "instanc": 2, "instance_cal": 2, "instance_del": 2, "instance_getattr": 2, "instant": [17, 19], "instead": 20, "int": [1, 2, 4, 5, 7, 8, 9, 11, 13, 14, 15, 16], "integr": 20, "interest": 4, "intermedi": 18, "interpol": [14, 16], "interpolate_bilinear": 3, "interv": 4, "intrins": [4, 14, 16, 18, 20], "inv_transform": 16, "invert": [15, 16], "invert_transform": [10, 16], "invok": 15, "io": [0, 20], "iqjrbg": 4, "is_broadcast": 15, "is_cycl": [14, 16], "item": 14, "iter": [1, 4, 5, 6, 14, 16, 17], "its": 15, "itself": 8, "itzhack": 8, "j": [8, 16], "jaesik": 18, "jake": [18, 20], "jingyi": 20, "jkulhanek": 20, "jona": 20, "jonathan": [18, 20], "jonbarron": [18, 20], "json": [4, 5, 12, 17], "julia": 20, "just": 8, "justin": [18, 20], "k": 19, "k1": 9, "k2": 9, "kamyar": [18, 20], "kanazawa": [18, 20], "kei": 15, "keil": 20, "keller": 20, "kerbl": 20, "kernel": 9, "kernel_s": 9, "kerr": [18, 20], "keunhong": 20, "keyfram": [14, 16], "knapitsch": 18, "kochanek": [14, 16], "kochanekbartelsinterpolationsourc": [14, 16], "koltun": 18, "kopana": 20, "kplane": [17, 20], "kristoffersen": [18, 20], "kulhanek": 20, "kwarg": [1, 2, 4, 7, 11, 14, 15, 16], "l52": 16, "lab": 18, "label": [7, 14], "larg": [17, 18, 20], "laser": 18, "last": [8, 15], "latest": 17, "laura": 20, "learn": 9, "least": 9, "left": [4, 8], "leimk\u00fchler": 20, "len": 18, "length": 16, "less": 18, "lfrank": 20, "li": [18, 20], "linalgerror": 8, "line": 15, "linear_to_srgb": 15, "link": [12, 14, 17], "linu": 20, "list": [4, 5, 7, 11, 12, 14, 15, 16, 17], "liter": [1, 4, 5, 6, 12, 14, 15, 16], "llff": 20, "load": [4, 12], "load_blender_dataset": 4, "load_bundler_dataset": 4, "load_bundler_fil": 4, "load_colmap_dataset": 4, "load_dataset": [4, 16], "load_dataset_funct": 11, "load_featur": [4, 16], "load_from_json": 4, "load_llff_dataset": 4, "load_metrics_from_result": 12, "load_mipnerf360_dataset": 4, "load_nerfstudio_dataset": 4, "load_phototourism_dataset": 4, "load_tanksandtemples_dataset": 4, "load_trajectori": [6, 16], "loaddatasetfunct": [11, 14], "loaded_checkpoint": 1, "loaded_step": 1, "localhost": 2, "lock_up": 10, "log": 0, "log_metr": 7, "logdir": 7, "logger": [7, 11, 13, 14, 17], "loggerev": [7, 14], "logrecord": 15, "lookat": 10, "lookdir": 10, "low": 20, "lower": 9, "lpip": [9, 15], "lpips_alex": 9, "lpips_vgg": 9, "mae": 9, "magnitud": 9, "mai": [8, 15], "make_image_grid": 15, "map": [9, 16], "marc": 20, "mark_host": 15, "mark_onli": 15, "markdown": [12, 17], "martin": 20, "match": 9, "math_util": 0, "matric": [8, 10, 14, 16], "matrix": [8, 10, 16], "matthew": [18, 20], "matthewtancik": [18, 20], "max": 9, "max_val": 9, "max_width": 15, "maximum": 9, "mcallist": [18, 20], "mean": 9, "meanti": 20, "measur": 9, "memori": [12, 15], "mesh": 20, "messag": [4, 15], "metadata": [4, 11, 14, 16], "method": [1, 2, 4, 5, 6, 11, 12, 13, 14, 16, 18, 19], "method_link": [12, 17], "method_nam": [11, 17], "method_spec": 2, "methodinfo": [1, 19], "methodspec": [2, 11], "metric": [0, 1, 4, 5, 6, 7, 12, 14, 15], "metricinfo": 12, "metrics_list": 6, "metrics_path": 6, "metricsaccumul": 15, "mildenhal": [18, 20], "min": [9, 20], "mip": [17, 19], "mipnerf360": [17, 18, 20], "mirror": 18, "miss": 15, "mlp": 20, "mobil": 18, "mode": [6, 16], "model": [1, 4, 6, 9, 17, 20], "model_path": 6, "modelinfo": [1, 19], "modif": 20, "modul": 8, "modular": [18, 20], "more": 8, "mount": 2, "mp4": 17, "mse": 9, "mueller2022inst": 20, "multidataseterror": 4, "multipl": 20, "multipli": 8, "multiresolut": 20, "must": [9, 15], "m\u00fcller": 20, "n": [14, 18], "name": [1, 2, 4, 11, 12, 14, 15], "nb_info": [5, 6, 13, 16], "ncol": 15, "ndarrai": [1, 3, 4, 5, 6, 7, 9, 14, 15, 16], "ndim": 8, "near_far": [15, 16], "nears_far": [4, 14, 16], "need": 1, "nerf": [6, 17, 19], "nerfacto": [17, 20], "nerfbaselin": 0, "nerfevaluationprotocol": 5, "nerfonthego": [17, 20], "nerfstudio": [16, 19], "nerfw": [17, 20], "nerfwevaluationprotocol": 4, "neural": [18, 20], "new": 17, "new_artifact": 17, "new_camera": [4, 14, 16], "new_checkpoint": 17, "new_dataset": 4, "new_nb_info": 6, "ng": [18, 20], "ngp": [17, 19], "niujinshuchong": 20, "node": 17, "nogpuerror": 15, "nois": 9, "non": 8, "none": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17], "normal": 20, "note": [8, 9], "notrequir": [1, 4, 11, 14, 16], "novel": 20, "now": 8, "nsvf": 20, "num_bin": [7, 14], "num_iter": [1, 13], "num_param": 14, "number": [4, 17], "numer": [8, 9], "numpi": 16, "numpy_from_base64": 6, "numpy_to_base64": 6, "nvlab": 20, "nx3x3": 8, "o": 17, "object": [1, 2, 4, 7, 13, 15, 16, 18, 20], "obtain": [4, 12, 18, 20], "offici": 20, "on_upd": 16, "one": [1, 14], "onli": [9, 14, 17], "opac": [17, 19], "open_ani": 6, "open_any_directori": [6, 16], "opencv": [4, 14, 16], "opencv_fishey": [4, 14, 16], "oper": 15, "operand": 15, "optim": 1, "optimize_embed": 1, "optimizeembeddingsoutput": [1, 19], "option": [1, 14, 15, 16, 17], "orbit": 18, "org": [8, 18, 20], "origin": 20, "orthogon": 8, "other": [15, 20], "otherwis": 14, "out": 15, "outdoor": 18, "output": [4, 5, 6, 7, 8, 9, 12, 13, 19], "output_path": 6, "output_split": 16, "output_typ": [5, 16, 17], "output_type_opt": 16, "outsid": 18, "overrid": 17, "p": [2, 8, 9, 10, 16, 18, 20], "pad": [10, 15, 16], "pad_pos": [10, 16], "pad_to_aspect_ratio": 16, "padded_stack": [4, 15], "page": 17, "pair": 9, "pallet": [15, 16], "paper": [4, 8, 12, 17, 18, 20], "paper_author": [12, 14], "paper_link": [12, 14], "paper_titl": [12, 14], "param": [4, 9, 15], "paramet": [1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20], "paramtyp": 15, "parent_token": 15, "park": [18, 20], "partialclass": 15, "partialmethod": [11, 15], "patch": 9, "path": [1, 2, 4, 5, 6, 7, 12, 15, 16, 17, 20], "path_to_model_fil": 4, "pd": 2, "pdf": [18, 20], "peak": 9, "peng": 20, "per": 9, "perceptu": 9, "perform": [9, 20], "perspect": 16, "peter": [18, 20], "philipp": 20, "phone": 18, "pid": 15, "pinhol": [4, 14, 16], "pixel": [9, 16], "place": 18, "plane": [14, 19], "point": [16, 20], "point2d_idx": 4, "point3d": 4, "point3d_id": 4, "points3d_rgb": [1, 4, 14, 16], "points3d_xyz": [1, 4, 14, 16], "pollefei": 20, "polycam": 18, "pop": 15, "port": [2, 16, 17], "pose": [4, 10, 14, 16, 18, 20], "pose_util": 0, "posit": [10, 16], "possibl": 9, "pp": 9, "pratul": [18, 20], "precis": 9, "precondit": 20, "pred": [5, 9], "predict": [4, 5, 6, 9, 14, 17], "predictions_path": 6, "predictions_sha": 6, "prefix": 7, "prepar": 6, "preparatori": 15, "pretti": 8, "preview_current_fram": 16, "preview_is_plai": 16, "preview_rend": 16, "preview_tim": 16, "primarili": 20, "primit": 20, "prioriti": 11, "problem": 20, "process": [9, 17, 18, 20], "produc": [8, 9, 17], "progress": 5, "project": [3, 16], "prompt": 15, "properti": [13, 14, 15, 16], "protocol": [1, 4, 5, 14, 18], "provid": 20, "psnr": 9, "pure": 8, "py": 16, "pyramid": 20, "python": [2, 17], "python_path": 2, "python_vers": 2, "pytorch": 15, "q": 8, "q1": 8, "q2": 8, "qian": 18, "qualiti": [9, 20], "quaternion": 8, "quaternion_conjug": 8, "quaternion_multipli": 8, "quaternion_to_rotation_matrix": 8, "quit": 8, "qvec": [4, 16], "qvec2rotmat": [4, 16], "r": [6, 8, 9, 14, 16], "radianc": [18, 20], "radiu": 18, "rai": 20, "rais": [8, 14], "raise_for_cancel": 15, "ramamoorthi": [18, 20], "rang": 9, "rank": 20, "ratio": 9, "ravi": [18, 20], "reach": 20, "read_cameras_binari": 4, "read_cameras_text": 4, "read_imag": 15, "read_images_binari": 4, "read_images_text": 4, "read_points3d_binari": 4, "read_points3d_text": 4, "readcamerasbinari": 4, "readcamerastext": 4, "readimagesbinari": 4, "readimagestext": 4, "readpoints3dbinari": 4, "readpoints3dtext": 4, "real": 20, "realist": 18, "rebuild": 17, "recht": 20, "reconstruct": [4, 18, 20], "record": 15, "reduc": 5, "refin": 20, "regist": [11, 12], "register_callback": 15, "register_logg": 11, "registri": 0, "reimpl": [17, 20], "reimplement": 19, "rel": 8, "remap_error": 15, "remoteprocessrpcbackend": 2, "remov": 10, "ren": [18, 20], "render": [1, 4, 5, 14, 19, 20], "render_all_imag": 5, "render_appearance_train_index": 16, "render_fov": 16, "render_fram": 5, "render_markdown_dataset_results_t": 12, "render_output": 1, "render_resolut": 16, "renderoutput": [1, 4, 5, 6, 14, 19], "replac": 14, "replace_us": 2, "repo": 20, "report": 20, "repositori": 12, "repres": [8, 18, 20], "requir": [1, 2, 11, 17], "required_featur": 1, "rerun": 17, "resize_full_imag": 4, "resolut": 16, "resources_utilization_info": 6, "resourcesutilizationinfo": 15, "result": [0, 5, 8, 19], "results_path": 12, "return": [1, 5, 8, 9, 10, 12, 14, 15, 16], "return_map": 9, "reus": 9, "rgb": 4, "ricardo": 20, "robust": 8, "rot": 8, "rotat": [8, 10, 16], "rotate_spherical_harmon": 8, "rotation_matrix": [10, 16], "rotation_matrix_to_quaternion": 8, "rotmat2qvec": 16, "row": [10, 16], "ruilong": [18, 20], "run": [16, 17], "run_inside_eval_contain": 15, "run_lpips_vgg": 5, "run_on_host": 15, "run_viser_view": 16, "runtimeerror": 15, "rwn17": 20, "r\u00fcckert": 20, "safe_eq": 16, "salahi": [18, 20], "sam": 20, "sampl": 20, "sampling_mask": [4, 14, 16], "sampling_mask_path": [4, 14, 16], "sampling_mask_paths_root": [4, 14, 16], "sampling_masks_path": 4, "sandbox": 17, "sara": 20, "sarafridov": 20, "sattler": 20, "save": [1, 13, 17], "save_cameras_npz": 6, "save_depth": 15, "save_evaluation_result": 6, "save_imag": 15, "save_it": [13, 17], "save_output_artifact": 6, "save_predict": 6, "save_trajectori": [6, 16], "scalar": 8, "scale": 18, "scanner": 18, "scene": [12, 14, 18, 20], "sceneinfo": 12, "schi": 20, "seamless": 20, "second": [9, 12], "see": [4, 8, 16], "self": 14, "semi": 18, "separ": [15, 17], "sequenc": [1, 4, 7, 9, 11, 14, 18], "serialize_evaluation_result": 6, "serialize_nb_info": 6, "server": 16, "set": [5, 8, 9, 15, 17, 18], "setparamoptiontyp": 15, "setup_log": [15, 16], "sever": 20, "shallow": 20, "shape": 8, "shape1": 15, "shape2": 15, "sheikh": 9, "shell": [2, 19], "should": 9, "show_input_point": 16, "show_test_camera": 16, "show_train_camera": 16, "siggraph": 4, "sigma": 9, "signal": 9, "similar": 9, "simoncelli": 9, "simple_cach": 16, "simplebackend": 2, "simpler": 8, "singl": [4, 14, 17], "situat": 15, "size": [8, 9, 14], "slice": [4, 16], "slower": [8, 20], "small": 9, "solut": 8, "some": 8, "songyou": 20, "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "space": [9, 20], "spec": [2, 11], "specif": 4, "specifi": 15, "speed": 20, "sphere": 18, "spheric": 8, "spiral": 20, "splat": [17, 19], "split": [4, 13, 16, 17, 18], "split_output_typ": 16, "split_percentag": 16, "squar": 9, "src": 4, "srgb_to_linear": 15, "srinivasan": [18, 20], "ssim": 9, "stamming": 20, "standard": 9, "state": 16, "state_compute_dur": 16, "static": 20, "static_cal": 2, "static_getattr": 2, "std": 4, "step": [1, 7, 13, 14, 15, 17], "storag": 18, "str": [1, 2, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16], "string": [4, 15], "structur": 9, "studio": [18, 20], "style": 15, "su": 20, "subset": [4, 18], "sum": 15, "summari": 7, "sun": 20, "support": 20, "supported_camera_model": [1, 4, 5, 16], "supports_appearance_from_train_imag": 16, "surfac": 20, "synthesi": [18, 20], "synthet": 18, "t": [4, 11, 14, 15, 16, 18, 20], "t2": 18, "tabl": 12, "tag": [7, 14], "take": 18, "tancik": [18, 20], "tank": 19, "tanksandtempl": 18, "tar": 17, "target": 9, "tcallabl": 15, "tdataset": [4, 16], "templ": 19, "tension": [14, 16], "tensor": [4, 9, 15, 16, 20], "tensorboard": [6, 17], "tensorboard_path": 6, "tensorboardlogg": 7, "tensorboardloggerev": 7, "tensorf": [17, 19], "tensori": 20, "term": 8, "terminal_width": 4, "terranc": [18, 20], "test": [18, 19], "test_dataset": 13, "test_indic": 4, "tester": 20, "tetra": [17, 19], "tetrahedr": 20, "tetrahedra": 20, "text": [7, 14, 15], "tf": 9, "th": 18, "than": 8, "thei": 16, "thi": [8, 9, 15, 20], "thoma": 20, "though": 8, "three": [16, 18], "three_js_perspective_camera_focal_length": 16, "throughout": 8, "time": [15, 20], "titl": [7, 14], "torchmetr": 9, "torchmetrics_ssim": 9, "torsten": 20, "total_train_tim": 6, "tp": 15, "train": [0, 1, 4, 18, 19, 20], "train_dataset": [1, 13], "train_dataset_metadata": 6, "train_iter": [1, 13], "train_split_fract": 4, "trainer": [1, 13], "trajectori": [5, 6, 14, 16, 18, 19], "trajectory_get_camera": 5, "trajectory_get_embed": 5, "trajectoryfram": [14, 16], "trajectoryframeappear": [14, 16], "trajectorykeyfram": [14, 16], "transact": 9, "transform": [9, 10, 16], "transform_point": 16, "transition_dur": [14, 16], "trilinear": 20, "trip": [17, 19], "true": [4, 5, 6, 9, 15, 16], "truth": [9, 18], "ttensor": [3, 14, 15, 16], "ttensor_co": 14, "tupl": [3, 4, 9, 11, 14, 15, 16], "tvec": 4, "two": 8, "type": [0, 8, 12, 13, 15, 16, 17], "typeddict": [1, 2, 11, 12, 14, 15, 16], "unbound": [18, 20], "uncertainti": 20, "under": 20, "undistort_camera": 3, "uniform": 9, "unit": 8, "unknown": 2, "unloadeddataset": [4, 14, 16], "unoffici": 20, "unpad_pos": 10, "unproject": 3, "unregister_callback": 15, "up": 10, "updat": [15, 16], "upload": 6, "url": [4, 6], "us": [4, 5, 8, 9, 15, 17, 18, 20], "use_nerfw_split": 4, "usestim": 15, "usp": 4, "util": [0, 13, 16], "v": [8, 17], "valid": [6, 15], "valu": [4, 7, 9, 11, 14, 15, 16], "vector": [8, 10, 16], "verbin": [18, 20], "verbos": [15, 16, 17], "veri": 20, "version": 8, "view": [10, 16, 18, 20], "viewer": [0, 19], "viewer_legaci": 16, "viewerst": 16, "viewmatrix": 10, "viridi": [15, 16], "viserserv": 16, "viserview": 16, "visibl": 9, "visit": 4, "visualize_depth": [15, 16], "vladlen": 18, "void": 4, "vol": [8, 9], "w": [6, 9, 16, 19], "wa": [9, 18, 20], "wai": 20, "wandb": 17, "wandblogg": 7, "wandbloggerev": 7, "wang": [9, 18, 20], "warburg": 20, "warp_image_between_camera": 3, "we": [8, 18], "web": [18, 19, 20], "weber": [18, 20], "websit": [12, 17], "wein": 20, "weird": 8, "well": [15, 20], "were": 18, "wget": [4, 6], "when": [9, 15, 17], "where": [4, 5, 8, 17], "which": [15, 20], "white": 18, "wide": 20, "width": 4, "wigner": 8, "wigner_d_matrix": 8, "wild": [18, 20], "window": 9, "winger_d_multiply_spherical_harmon": 8, "with_default": 16, "with_supported_camera_model": 5, "world": [14, 20], "wrap": 2, "write_to_logg": 4, "writecamerasbinari": 4, "writecamerastext": 4, "writeimagesbinari": 4, "writeimagestext": 4, "writepoints3dbinari": 4, "writepoints3dtext": 4, "written": 5, "www": [18, 20], "wxyz": 16, "x": 4, "xu": 20, "xy": [3, 4], "xyz": [3, 4], "y": 8, "yi": [18, 20], "yield": 15, "you": 4, "yu": 20, "z": 9, "zehao": 20, "zero": 1, "zexiang": 20, "zhou": 18, "zhu": 20, "zihan": 20, "zip": [4, 19], "zip_url": 4, "zipnerf": [17, 20], "\u00b9": 8, "\u211b": 8}, "titles": ["API Reference", "nerfbaselines", "nerfbaselines.backends", "nerfbaselines.cameras", "nerfbaselines.datasets", "nerfbaselines.evaluation", "nerfbaselines.io", "nerfbaselines.logging", "nerfbaselines.math_utils", "nerfbaselines.metrics", "nerfbaselines.pose_utils", "nerfbaselines.registry", "nerfbaselines.results", "nerfbaselines.training", "nerfbaselines.types", "nerfbaselines.utils", "nerfbaselines.viewer", "nerfbaselines", "Datasets", "NerfBaselines Documentation", "Methods"], "titleterms": {"360": [18, 20], "On": 20, "api": 0, "artifact": 17, "backend": 2, "blender": [4, 18], "bundler": 4, "camera": 3, "checkpoint": 17, "colmap": 4, "dataset": [4, 17, 18], "demo": 17, "document": 19, "download": 17, "evalu": [5, 17], "export": 17, "field": 20, "fix": 17, "gaussian": 20, "gener": 17, "go": 20, "instant": 20, "io": 6, "k": 20, "llff": 4, "log": 7, "math_util": 8, "method": [17, 20], "metric": 9, "mip": [18, 20], "mipnerf360": 4, "nerf": [18, 20], "nerfbaselin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "nerfstudio": [4, 18, 20], "ngp": 20, "opac": 20, "output": 17, "phototour": 4, "plane": 20, "pose_util": 10, "refer": [0, 19], "registri": 11, "reimplement": 20, "render": 17, "result": [12, 17], "shell": 17, "splat": 20, "tank": 18, "tanksandtempl": 4, "templ": 18, "tensorf": 20, "test": 17, "tetra": 20, "train": [13, 17], "trajectori": 17, "trip": 20, "type": 14, "util": 15, "viewer": [16, 17], "viser": 16, "w": 20, "web": 17, "zip": 20}})
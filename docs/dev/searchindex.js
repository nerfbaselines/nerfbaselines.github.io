Search.setIndex({"alltitles": {"2D Gaussian Splatting": [[25, "2d-gaussian-splatting"]], "3DGS-MCMC": [[25, "3dgs-mcmc"]], "API Reference": [[2, null]], "Acknowledgements": [[23, "acknowledgements"]], "Adding a spec file": [[1, "adding-a-spec-file"]], "Adding new datasets": [[0, null]], "Adding new methods": [[1, null]], "Advanced": [[23, null]], "Applying apperance embeddings": [[21, "applying-apperance-embeddings"]], "Apptainer": [[24, "apptainer"]], "Blender": [[20, "blender"]], "Building the web": [[19, "building-the-web"]], "COLMAP": [[25, "colmap"]], "CamP": [[25, "camp"]], "Citation": [[23, "citation"]], "Communication with the backend": [[16, "communication-with-the-backend"]], "Conda": [[24, "conda"]], "Configuring the web demo": [[21, "configuring-the-web-demo"]], "Contents": [[23, "contents"]], "Creating a new method module": [[1, "creating-a-new-method-module"]], "Creating new Dataset instance": [[18, "creating-new-dataset-instance"]], "Creating the download function": [[0, "creating-the-download-function"]], "Creating web demos": [[21, null]], "Custom dataset loader": [[18, null]], "Custom web benchmark": [[19, null]], "Customizing the dataset": [[28, "customizing-the-dataset"]], "Dataset metadata": [[0, "dataset-metadata"]], "Datasets": [[20, null]], "Docker": [[24, "docker"]], "Exporting a mesh": [[22, "exporting-a-mesh"]], "Exporting a web demo": [[21, "exporting-a-web-demo"]], "Exporting meshes": [[22, null]], "GS-W": [[25, "gaussian-splatting-wild"]], "Gaussian Opacity Fields": [[25, "gaussian-opacity-fields"]], "Gaussian Splatting": [[25, "gaussian-splatting"]], "Installation": [[24, null]], "Instant NGP": [[25, "instant-ngp"]], "Introduction": [[1, "introduction"], [16, "introduction"], [28, "introduction"]], "Isolated backends": [[16, null]], "K-Planes": [[25, "kplanes"]], "LLFF": [[20, "llff"]], "Launching the viewer": [[27, "launching-the-viewer"]], "Main features": [[23, "main-features"]], "Methods": [[25, null]], "Mip-NeRF 360": [[20, "mipnerf360"], [25, "mipnerf360"]], "Mip-Splatting": [[25, "mip-splatting"]], "NeRF": [[25, "nerf"]], "NeRF On-the-go": [[25, "nerfonthego"]], "NeRF-W (reimplementation)": [[25, "nerfw-reimpl"]], "NerfBaselines documentation": [[23, null]], "NerfStudio": [[25, "nerfacto"]], "Nerfstudio": [[20, "nerfstudio"]], "Obtaining camera poses": [[28, "obtaining-camera-poses"]], "Photo Tourism": [[20, "phototourism"]], "Pre-requisites (NVIDIA GPU)": [[24, "pre-requisites-nvidia-gpu"]], "Preparing the data": [[19, "preparing-the-data"]], "Prerequisites": [[19, "prerequisites"]], "Public benchmark results": [[27, "public-benchmark-results"]], "Publishing the dataset": [[0, "publishing-the-dataset"]], "Python tutorial": [[26, null]], "Quickstart": [[27, null]], "Reference": [[23, null]], "Registering the dataset": [[0, "registering-the-dataset"]], "Registering the loader": [[18, "registering-the-loader"]], "Registering the method with NerfBaselines": [[1, "registering-the-method-with-nerfbaselines"]], "Release the method": [[1, "release-the-method"]], "Rendering a camera trajectory": [[27, "rendering-a-camera-trajectory"]], "Rendering images": [[26, "rendering-images"], [27, "rendering-images"]], "Running a local dev server": [[19, "running-a-local-dev-server"]], "Scaffold-GS": [[25, "scaffold-gs"]], "SeaThru-NeRF": [[20, "seathru-nerf"], [25, "seathru-nerf"]], "Tanks and Temples": [[20, "tanksandtemples"]], "TensoRF": [[25, "tensorf"]], "Testing the method": [[1, "testing-the-method"]], "Tetra-NeRF": [[25, "tetra-nerf"]], "Training a method": [[26, "training-a-method"]], "Training a model": [[27, "training-a-model"]], "Using Trainer class": [[26, "using-trainer-class"]], "Using custom data": [[28, null]], "WildGaussians": [[25, "wild-gaussians"]], "Writing dataset loader function": [[18, "writing-dataset-loader-function"]], "Zip-NeRF": [[25, "zipnerf"]], "build": [[17, "nerfbaselines-web-build"]], "dev": [[17, "nerfbaselines-web-dev"]], "download-dataset": [[17, "nerfbaselines-download-dataset"]], "evaluate": [[17, "nerfbaselines-evaluate"]], "export-demo": [[17, "nerfbaselines-export-demo"]], "export-mesh": [[17, "nerfbaselines-export-mesh"]], "fix-checkpoint": [[17, "nerfbaselines-fix-checkpoint"]], "fix-output-artifact": [[17, "nerfbaselines-fix-output-artifact"]], "generate-dataset-results": [[17, "nerfbaselines-generate-dataset-results"]], "gsplat": [[25, "gsplat"]], "install": [[17, "nerfbaselines-install"]], "measure-fps": [[17, "nerfbaselines-measure-fps"]], "nerfbaselines": [[3, null], [17, null]], "nerfbaselines.backends": [[4, null]], "nerfbaselines.backends.protocol_shm_pickle": [[4, "module-nerfbaselines.backends.protocol_shm_pickle"]], "nerfbaselines.backends.protocol_tcp_pickle": [[4, "module-nerfbaselines.backends.protocol_tcp_pickle"]], "nerfbaselines.cameras": [[5, null]], "nerfbaselines.datasets": [[6, null]], "nerfbaselines.datasets.blender": [[6, "module-nerfbaselines.datasets.blender"]], "nerfbaselines.datasets.bundler": [[6, "module-nerfbaselines.datasets.bundler"]], "nerfbaselines.datasets.colmap": [[6, "module-nerfbaselines.datasets.colmap"]], "nerfbaselines.datasets.llff": [[6, "module-nerfbaselines.datasets.llff"]], "nerfbaselines.datasets.mipnerf360": [[6, "module-nerfbaselines.datasets.mipnerf360"]], "nerfbaselines.datasets.nerfonthego": [[6, "module-nerfbaselines.datasets.nerfonthego"]], "nerfbaselines.datasets.nerfstudio": [[6, "module-nerfbaselines.datasets.nerfstudio"]], "nerfbaselines.datasets.phototourism": [[6, "module-nerfbaselines.datasets.phototourism"]], "nerfbaselines.datasets.seathru_nerf": [[6, "module-nerfbaselines.datasets.seathru_nerf"]], "nerfbaselines.datasets.tanksandtemples": [[6, "module-nerfbaselines.datasets.tanksandtemples"]], "nerfbaselines.evaluation": [[7, null]], "nerfbaselines.io": [[8, null]], "nerfbaselines.logging": [[9, null]], "nerfbaselines.metrics": [[10, null]], "nerfbaselines.results": [[11, null]], "nerfbaselines.training": [[12, null]], "nerfbaselines.utils": [[13, null]], "nerfbaselines.viewer": [[14, null]], "nerfbaselines.web": [[15, null]], "render": [[17, "nerfbaselines-render"]], "render-trajectory": [[17, "nerfbaselines-render-trajectory"]], "shell": [[17, "nerfbaselines-shell"]], "test-method": [[17, "nerfbaselines-test-method"]], "train": [[17, "nerfbaselines-train"]], "viewer": [[17, "nerfbaselines-viewer"]], "web": [[17, "nerfbaselines-web"]]}, "docnames": ["adding-new-datasets", "adding-new-methods", "api/modules", "api/nerfbaselines", "api/nerfbaselines.backends", "api/nerfbaselines.cameras", "api/nerfbaselines.datasets", "api/nerfbaselines.evaluation", "api/nerfbaselines.io", "api/nerfbaselines.logging", "api/nerfbaselines.metrics", "api/nerfbaselines.results", "api/nerfbaselines.training", "api/nerfbaselines.utils", "api/nerfbaselines.viewer", "api/nerfbaselines.web", "backends", "cli", "custom-dataset-loader", "custom-web", "datasets", "exporting-demos", "exporting-meshes", "index", "installation", "methods", "python-tutorial", "quickstart", "using-custom-data"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["adding-new-datasets.md", "adding-new-methods.md", "api/modules.rst", "api/nerfbaselines.rst", "api/nerfbaselines.backends.rst", "api/nerfbaselines.cameras.rst", "api/nerfbaselines.datasets.rst", "api/nerfbaselines.evaluation.rst", "api/nerfbaselines.io.rst", "api/nerfbaselines.logging.rst", "api/nerfbaselines.metrics.rst", "api/nerfbaselines.results.rst", "api/nerfbaselines.training.rst", "api/nerfbaselines.utils.rst", "api/nerfbaselines.viewer.rst", "api/nerfbaselines.web.rst", "backends.md", "cli.rst", "custom-dataset-loader.md", "custom-web.md", "datasets.md", "exporting-demos.md", "exporting-meshes.md", "index.md", "installation.md", "methods.md", "python-tutorial.ipynb", "quickstart.md", "using-custom-data.md"], "indexentries": {"--backend": [[17, "cmdoption-nerfbaselines-export-demo-backend", false], [17, "cmdoption-nerfbaselines-export-mesh-backend", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [17, "cmdoption-nerfbaselines-install-backend", false], [17, "cmdoption-nerfbaselines-measure-fps-backend", false], [17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-render-trajectory-backend", false], [17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-test-method-backend", false], [17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-viewer-backend", false]], "--base-path": [[17, "cmdoption-nerfbaselines-web-build-base-path", false]], "--checkpoint": [[17, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [17, "cmdoption-nerfbaselines-export-mesh-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [17, "cmdoption-nerfbaselines-measure-fps-checkpoint", false], [17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false]], "--data": [[17, "cmdoption-nerfbaselines-export-demo-data", false], [17, "cmdoption-nerfbaselines-export-mesh-data", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [17, "cmdoption-nerfbaselines-measure-fps-data", false], [17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-test-method-data", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-viewer-data", false], [17, "cmdoption-nerfbaselines-web-build-data", false], [17, "cmdoption-nerfbaselines-web-dev-data", false]], "--data-indices": [[17, "cmdoption-nerfbaselines-measure-fps-data-indices", false]], "--dataset": [[17, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false]], "--datasets": [[17, "cmdoption-nerfbaselines-web-build-datasets", false], [17, "cmdoption-nerfbaselines-web-dev-datasets", false]], "--disable-output-artifact": [[17, "cmdoption-nerfbaselines-train-disable-output-artifact", false]], "--docs": [[17, "cmdoption-nerfbaselines-web-build-docs", false], [17, "cmdoption-nerfbaselines-web-dev-docs", false]], "--eval-all-iters": [[17, "cmdoption-nerfbaselines-train-eval-all-iters", false]], "--eval-few-iters": [[17, "cmdoption-nerfbaselines-train-eval-few-iters", false]], "--force": [[17, "cmdoption-nerfbaselines-fix-output-artifact-force", false], [17, "cmdoption-nerfbaselines-install-force", false]], "--force-output-artifact": [[17, "cmdoption-nerfbaselines-train-force-output-artifact", false]], "--full": [[17, "cmdoption-nerfbaselines-test-method-full", false]], "--inplace": [[17, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false]], "--input": [[17, "cmdoption-nerfbaselines-fix-output-artifact-input", false]], "--logger": [[17, "cmdoption-nerfbaselines-train-logger", false]], "--method": [[17, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [17, "cmdoption-nerfbaselines-install-method", false], [17, "cmdoption-nerfbaselines-shell-method", false], [17, "cmdoption-nerfbaselines-test-method-method", false], [17, "cmdoption-nerfbaselines-train-method", false]], "--method-links": [[17, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false]], "--new-checkpoint": [[17, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false]], "--num-repeats": [[17, "cmdoption-nerfbaselines-measure-fps-num-repeats", false]], "--output": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-export-mesh-o", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [17, "cmdoption-nerfbaselines-measure-fps-output", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-render-trajectory-output", false], [17, "cmdoption-nerfbaselines-train-output", false], [17, "cmdoption-nerfbaselines-web-build-output", false]], "--output-names": [[17, "cmdoption-nerfbaselines-measure-fps-output-names", false], [17, "cmdoption-nerfbaselines-render-trajectory-output-names", false]], "--output-type": [[17, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false]], "--port": [[17, "cmdoption-nerfbaselines-viewer-port", false]], "--presets": [[17, "cmdoption-nerfbaselines-fix-checkpoint-presets", false], [17, "cmdoption-nerfbaselines-test-method-presets", false], [17, "cmdoption-nerfbaselines-train-presets", false]], "--rebuild-checkpoint": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false]], "--rerun-evaluation": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false]], "--rerun-render": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false]], "--resolution": [[17, "cmdoption-nerfbaselines-measure-fps-resolution", false], [17, "cmdoption-nerfbaselines-render-trajectory-resolution", false]], "--results": [[17, "cmdoption-nerfbaselines-generate-dataset-results-results", false]], "--save-iters": [[17, "cmdoption-nerfbaselines-train-save-iters", false]], "--scenes": [[17, "cmdoption-nerfbaselines-generate-dataset-results-scenes", false]], "--set": [[17, "cmdoption-nerfbaselines-export-demo-set", false], [17, "cmdoption-nerfbaselines-export-mesh-set", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-set", false], [17, "cmdoption-nerfbaselines-test-method-set", false], [17, "cmdoption-nerfbaselines-train-set", false]], "--spec": [[17, "cmdoption-nerfbaselines-install-spec", false]], "--split": [[17, "cmdoption-nerfbaselines-measure-fps-split", false], [17, "cmdoption-nerfbaselines-render-split", false]], "--steps": [[17, "cmdoption-nerfbaselines-test-method-steps", false]], "--train-embedding": [[17, "cmdoption-nerfbaselines-export-demo-train-embedding", false]], "--trajectory": [[17, "cmdoption-nerfbaselines-render-trajectory-trajectory", false]], "--verbose": [[17, "cmdoption-nerfbaselines-export-mesh-v", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "-o": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-export-mesh-o", false]], "-v": [[17, "cmdoption-nerfbaselines-export-mesh-v", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "accumulate_metrics() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.accumulate_metrics", false]], "add_embedding() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_embedding", false]], "add_embedding() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_embedding", false]], "add_embedding() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_embedding", false]], "add_event() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_event", false]], "add_event() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_event", false]], "add_event() (nerfbaselines.logging.concatlogger method)": [[9, "nerfbaselines.logging.ConcatLogger.add_event", false]], "add_event() (nerfbaselines.logging.tensorboardlogger method)": [[9, "nerfbaselines.logging.TensorboardLogger.add_event", false]], "add_event() (nerfbaselines.logging.wandblogger method)": [[9, "nerfbaselines.logging.WandbLogger.add_event", false]], "add_histogram() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_histogram", false]], "add_hparams() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.concatlogger method)": [[9, "nerfbaselines.logging.ConcatLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.tensorboardlogger method)": [[9, "nerfbaselines.logging.TensorboardLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.wandblogger method)": [[9, "nerfbaselines.logging.WandbLogger.add_hparams", false]], "add_image() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_image", false]], "add_image() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_image", false]], "add_image() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_image", false]], "add_plot() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_plot", false]], "add_scalar() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_scalar", false]], "add_scalar() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_scalar", false]], "add_scalar() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_scalar", false]], "add_text() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_text", false]], "add_text() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_text", false]], "add_text() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_text", false]], "appearance (nerfbaselines.trajectorykeyframe attribute)": [[3, "nerfbaselines.TrajectoryKeyframe.appearance", false]], "appearance_weights (nerfbaselines.trajectoryframe attribute)": [[3, "nerfbaselines.TrajectoryFrame.appearance_weights", false]], "appearances (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.appearances", false]], "apply() (nerfbaselines.genericcameras method)": [[3, "nerfbaselines.GenericCameras.apply", false]], "apply_colormap() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.apply_colormap", false]], "apply_transform() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.apply_transform", false]], "apptainer (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.apptainer", false]], "apptainerbackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.ApptainerBackend", false]], "apptainerbackendspec (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.ApptainerBackendSpec", false]], "ascending (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.ascending", false]], "backend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.Backend", false]], "backends_order (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.backends_order", false]], "baselogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.BaseLogger", false]], "baseloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.BaseLoggerEvent", false]], "batch_size (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.batch_size", false]], "build() (in module nerfbaselines.web)": [[15, "nerfbaselines.web.build", false]], "build_evaluation_protocol() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.build_evaluation_protocol", false]], "build_logger() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.build_logger", false]], "build_method_class() (in module nerfbaselines)": [[3, "nerfbaselines.build_method_class", false]], "build_script (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.build_script", false]], "camera_model (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.camera_model", false]], "camera_model_from_int() (in module nerfbaselines)": [[3, "nerfbaselines.camera_model_from_int", false]], "camera_model_to_int() (in module nerfbaselines)": [[3, "nerfbaselines.camera_model_to_int", false]], "camera_models (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.camera_models", false]], "cameras (class in nerfbaselines)": [[3, "nerfbaselines.Cameras", false]], "cameras (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.cameras", false]], "cameras (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.cameras", false]], "cancel() (nerfbaselines.utils.cancellationtoken method)": [[13, "nerfbaselines.utils.CancellationToken.cancel", false]], "cancel_if_requested() (nerfbaselines.utils.cancellationtoken method)": [[13, "nerfbaselines.utils.CancellationToken.cancel_if_requested", false]], "cancellationtoken (class in nerfbaselines.utils)": [[13, "nerfbaselines.utils.CancellationToken", false]], "cancelledexception": [[13, "nerfbaselines.utils.CancelledException", false]], "cat() (nerfbaselines.genericcameras class method)": [[3, "nerfbaselines.GenericCameras.cat", false]], "close() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.close", false]], "close() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.close", false]], "command": [[17, "cmdoption-nerfbaselines-shell-arg-COMMAND", false]], "compile_dataset_results() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.compile_dataset_results", false]], "compute_metrics() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.compute_metrics", false]], "concatlogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.ConcatLogger", false]], "concatloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.ConcatLoggerEvent", false]], "conda (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.conda", false]], "conda_spec (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.conda_spec", false]], "conda_spec (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.conda_spec", false]], "condabackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.CondaBackend", false]], "condabackendspec (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.CondaBackendSpec", false]], "connect_worker() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.connect_worker", false]], "connect_worker() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.connect_worker", false]], "connectionclosed": [[4, "nerfbaselines.backends.protocol_shm_pickle.ConnectionClosed", false]], "convert_image_dtype() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.convert_image_dtype", false]], "dataset": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false]], "dataset (class in nerfbaselines)": [[3, "nerfbaselines.Dataset", false]], "dataset_index_select() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.dataset_index_select", false]], "dataset_load_features() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.dataset_load_features", false]], "datasetinfo (class in nerfbaselines.results)": [[11, "nerfbaselines.results.DatasetInfo", false]], "datasetloaderspec (class in nerfbaselines)": [[3, "nerfbaselines.DatasetLoaderSpec", false]], "datasetnotfounderror": [[3, "nerfbaselines.DatasetNotFoundError", false]], "datasetspec (class in nerfbaselines)": [[3, "nerfbaselines.DatasetSpec", false]], "datasetspecmetadata (class in nerfbaselines)": [[3, "nerfbaselines.DatasetSpecMetadata", false]], "default_appearance (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.default_appearance", false]], "default_appearance (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.default_appearance", false]], "default_cuda_archs (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.default_cuda_archs", false]], "default_cuda_archs (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.default_cuda_archs", false]], "default_fov (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.default_fov", false]], "default_fov (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.default_fov", false]], "default_metric (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.default_metric", false]], "default_metric (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.default_metric", false]], "default_transition_duration (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.default_transition_duration", false]], "default_transition_duration (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.default_transition_duration", false]], "defaultevaluationprotocol (class in nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol", false]], "description (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.description", false]], "description (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.description", false]], "description (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.description", false]], "deserialize_nb_info() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.deserialize_nb_info", false]], "distortion_parameters (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.distortion_parameters", false]], "dmpix_ssim() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.dmpix_ssim", false]], "docker (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.docker", false]], "dockerbackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.DockerBackend", false]], "dockerbackendspec (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.DockerBackendSpec", false]], "download_blender_dataset() (in module nerfbaselines.datasets.blender)": [[6, "nerfbaselines.datasets.blender.download_blender_dataset", false]], "download_dataset() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.download_dataset", false]], "download_dataset_function (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.download_dataset_function", false]], "download_llff_dataset() (in module nerfbaselines.datasets.llff)": [[6, "nerfbaselines.datasets.llff.download_llff_dataset", false]], "download_mipnerf360_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[6, "nerfbaselines.datasets.mipnerf360.download_mipnerf360_dataset", false]], "download_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[6, "nerfbaselines.datasets.nerfstudio.download_nerfstudio_dataset", false]], "download_phototourism_dataset() (in module nerfbaselines.datasets.phototourism)": [[6, "nerfbaselines.datasets.phototourism.download_phototourism_dataset", false]], "download_seathru_nerf_dataset() (in module nerfbaselines.datasets.seathru_nerf)": [[6, "nerfbaselines.datasets.seathru_nerf.download_seathru_nerf_dataset", false]], "download_tanksandtemples_dataset() (in module nerfbaselines.datasets.tanksandtemples)": [[6, "nerfbaselines.datasets.tanksandtemples.download_tanksandtemples_dataset", false]], "downloaddatasetfunction (class in nerfbaselines)": [[3, "nerfbaselines.DownloadDatasetFunction", false]], "embedding (nerfbaselines.optimizeembeddingoutput attribute)": [[3, "nerfbaselines.OptimizeEmbeddingOutput.embedding", false]], "embedding (nerfbaselines.renderoptions attribute)": [[3, "nerfbaselines.RenderOptions.embedding", false]], "embedding (nerfbaselines.trajectoryframeappearance attribute)": [[3, "nerfbaselines.TrajectoryFrameAppearance.embedding", false]], "embedding_train_index (nerfbaselines.trajectoryframeappearance attribute)": [[3, "nerfbaselines.TrajectoryFrameAppearance.embedding_train_index", false]], "environment_name (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.condabackendspec attribute)": [[4, "nerfbaselines.backends.CondaBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.environment_name", false]], "eval_all() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.eval_all", false]], "eval_all() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.eval_all", false]], "eval_batch_size (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.eval_batch_size", false]], "eval_few() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.eval_few", false]], "eval_few() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.eval_few", false]], "evaluate() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.evaluate", false]], "evaluate() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.evaluate", false]], "evaluation_protocol (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.evaluation_protocol", false]], "evaluation_protocol_class (nerfbaselines.evaluationprotocolspec attribute)": [[3, "nerfbaselines.EvaluationProtocolSpec.evaluation_protocol_class", false]], "evaluationprotocol (class in nerfbaselines)": [[3, "nerfbaselines.EvaluationProtocol", false]], "evaluationprotocolspec (class in nerfbaselines)": [[3, "nerfbaselines.EvaluationProtocolSpec", false]], "every_iters() (nerfbaselines.utils.indices class method)": [[13, "nerfbaselines.utils.Indices.every_iters", false]], "format_duration() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.format_duration", false]], "format_memory() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.format_memory", false]], "forward_port() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.forward_port", false]], "fov (nerfbaselines.trajectorykeyframe attribute)": [[3, "nerfbaselines.TrajectoryKeyframe.fov", false]], "fps (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.fps", false]], "frames (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.frames", false]], "genericcameras (class in nerfbaselines)": [[3, "nerfbaselines.GenericCameras", false]], "get_backend() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_backend", false]], "get_checkpoint_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_checkpoint_sha", false]], "get_dataset_info() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.get_dataset_info", false]], "get_dataset_loader_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_dataset_loader_spec", false]], "get_dataset_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_dataset_spec", false]], "get_evaluation_protocol_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_evaluation_protocol_spec", false]], "get_forwarded_ports() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_forwarded_ports", false]], "get_image_pixels() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.get_image_pixels", false]], "get_implemented_backends() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_implemented_backends", false]], "get_info() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.get_info", false]], "get_logger() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.get_logger", false]], "get_logger_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_logger_spec", false]], "get_method_info() (nerfbaselines.method class method)": [[3, "nerfbaselines.Method.get_method_info", false]], "get_method_info_from_spec() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.get_method_info_from_spec", false]], "get_method_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_method_sha", false]], "get_method_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_method_spec", false]], "get_metrics_hash() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_metrics_hash", false]], "get_mounts() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_mounts", false]], "get_name() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.get_name", false]], "get_predictions_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_predictions_sha", false]], "get_presets_and_config_overrides() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.get_presets_and_config_overrides", false]], "get_rays() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.get_rays", false]], "get_resources_utilization_info() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.get_resources_utilization_info", false]], "get_supported_dataset_loaders() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_dataset_loaders", false]], "get_supported_datasets() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_datasets", false]], "get_supported_evaluation_protocols() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_evaluation_protocols", false]], "get_supported_loggers() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_loggers", false]], "get_supported_methods() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_methods", false]], "get_torch_checkpoint_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_torch_checkpoint_sha", false]], "get_train_embedding() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.get_train_embedding", false]], "get_transform_and_scale() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.get_transform_and_scale", false]], "get_worker_configuration() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.get_worker_configuration", false]], "get_worker_configuration() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.get_worker_configuration", false]], "gpu_memory (nerfbaselines.training.resourcesutilizationinfo attribute)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo.gpu_memory", false]], "gpu_name (nerfbaselines.training.resourcesutilizationinfo attribute)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo.gpu_name", false]], "home_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.home_path", false]], "home_path (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.home_path", false]], "hparams (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.hparams", false]], "id (nerfbaselines.datasetloaderspec attribute)": [[3, "nerfbaselines.DatasetLoaderSpec.id", false]], "id (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.id", false]], "id (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.id", false]], "id (nerfbaselines.evaluationprotocolspec attribute)": [[3, "nerfbaselines.EvaluationProtocolSpec.id", false]], "id (nerfbaselines.loggerspec attribute)": [[3, "nerfbaselines.LoggerSpec.id", false]], "id (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.id", false]], "id (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.id", false]], "id (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.id", false]], "id (nerfbaselines.results.sceneinfo attribute)": [[11, "nerfbaselines.results.SceneInfo.id", false]], "image (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.image", false]], "image (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.image", false]], "image_paths (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.image_paths", false]], "image_paths (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.image_paths", false]], "image_paths_root (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.image_paths_root", false]], "image_paths_root (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.image_paths_root", false]], "image_size (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.image_size", false]], "image_sizes (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.image_sizes", false]], "image_to_srgb() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.image_to_srgb", false]], "images (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.images", false]], "images (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.images", false]], "images_points3d_indices (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.images_points3D_indices", false]], "images_points3d_indices (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.images_points3D_indices", false]], "imagesetinterpolationsource (class in nerfbaselines)": [[3, "nerfbaselines.ImageSetInterpolationSource", false]], "implementation_status (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.implementation_status", false]], "indices (class in nerfbaselines.utils)": [[13, "nerfbaselines.utils.Indices", false]], "install() (nerfbaselines.backends.apptainerbackend method)": [[4, "nerfbaselines.backends.ApptainerBackend.install", false]], "install() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.install", false]], "install() (nerfbaselines.backends.condabackend method)": [[4, "nerfbaselines.backends.CondaBackend.install", false]], "install() (nerfbaselines.backends.dockerbackend method)": [[4, "nerfbaselines.backends.DockerBackend.install", false]], "install_script (nerfbaselines.backends.condabackendspec attribute)": [[4, "nerfbaselines.backends.CondaBackendSpec.install_script", false]], "instance_call() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.instance_call", false]], "instance_call() (nerfbaselines.backends.simplebackend method)": [[4, "nerfbaselines.backends.SimpleBackend.instance_call", false]], "instance_del() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.instance_del", false]], "instance_del() (nerfbaselines.backends.simplebackend method)": [[4, "nerfbaselines.backends.SimpleBackend.instance_del", false]], "interpolate_bilinear() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.interpolate_bilinear", false]], "interpolation (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.interpolation", false]], "interpolation (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.interpolation", false]], "intrinsics (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.intrinsics", false]], "intrinsics (nerfbaselines.trajectoryframe attribute)": [[3, "nerfbaselines.TrajectoryFrame.intrinsics", false]], "invert_transform() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.invert_transform", false]], "is_cycle (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.is_cycle", false]], "item() (nerfbaselines.genericcameras method)": [[3, "nerfbaselines.GenericCameras.item", false]], "keyframes (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.keyframes", false]], "keyframes (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.keyframes", false]], "kochanekbartelsinterpolationsource (class in nerfbaselines)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource", false]], "licenses (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.licenses", false]], "licenses (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.licenses", false]], "licensespec (class in nerfbaselines)": [[3, "nerfbaselines.LicenseSpec", false]], "link (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.link", false]], "link (nerfbaselines.outputartifact attribute)": [[3, "nerfbaselines.OutputArtifact.link", false]], "link (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.link", false]], "link (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.link", false]], "load_blender_dataset() (in module nerfbaselines.datasets.blender)": [[6, "nerfbaselines.datasets.blender.load_blender_dataset", false]], "load_bundler_dataset() (in module nerfbaselines.datasets.bundler)": [[6, "nerfbaselines.datasets.bundler.load_bundler_dataset", false]], "load_checkpoint() (in module nerfbaselines)": [[3, "nerfbaselines.load_checkpoint", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.colmap)": [[6, "nerfbaselines.datasets.colmap.load_colmap_dataset", false]], "load_dataset() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.load_dataset", false]], "load_dataset_function (nerfbaselines.datasetloaderspec attribute)": [[3, "nerfbaselines.DatasetLoaderSpec.load_dataset_function", false]], "load_llff_dataset() (in module nerfbaselines.datasets.llff)": [[6, "nerfbaselines.datasets.llff.load_llff_dataset", false]], "load_metrics_from_results() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.load_metrics_from_results", false]], "load_nerfonthego_dataset() (in module nerfbaselines.datasets.nerfonthego)": [[6, "nerfbaselines.datasets.nerfonthego.load_nerfonthego_dataset", false]], "load_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[6, "nerfbaselines.datasets.nerfstudio.load_nerfstudio_dataset", false]], "load_seathru_nerf_dataset() (in module nerfbaselines.datasets.seathru_nerf)": [[6, "nerfbaselines.datasets.seathru_nerf.load_seathru_nerf_dataset", false]], "load_trajectory() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.load_trajectory", false]], "loaddatasetfunction (class in nerfbaselines)": [[3, "nerfbaselines.LoadDatasetFunction", false]], "loaded_checkpoint (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.loaded_checkpoint", false]], "loaded_step (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.loaded_step", false]], "log_metrics() (in module nerfbaselines.logging)": [[9, "nerfbaselines.logging.log_metrics", false]], "logger (class in nerfbaselines)": [[3, "nerfbaselines.Logger", false]], "logger_class (nerfbaselines.loggerspec attribute)": [[3, "nerfbaselines.LoggerSpec.logger_class", false]], "loggerevent (class in nerfbaselines)": [[3, "nerfbaselines.LoggerEvent", false]], "loggerspec (class in nerfbaselines)": [[3, "nerfbaselines.LoggerSpec", false]], "lpips() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.lpips", false]], "lpips_alex() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.lpips_alex", false]], "lpips_vgg() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.lpips_vgg", false]], "mae() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.mae", false]], "make_image_grid() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.make_image_grid", false]], "memory (nerfbaselines.training.resourcesutilizationinfo attribute)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo.memory", false]], "metadata (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.metadata", false]], "metadata (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.metadata", false]], "metadata (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.metadata", false]], "metadata (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.metadata", false]], "metadata (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.metadata", false]], "method (class in nerfbaselines)": [[3, "nerfbaselines.Method", false]], "method_class (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.method_class", false]], "method_id (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.method_id", false]], "method_id (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.method_id", false]], "methodinfo (class in nerfbaselines)": [[3, "nerfbaselines.MethodInfo", false]], "methodspec (class in nerfbaselines)": [[3, "nerfbaselines.MethodSpec", false]], "metricinfo (class in nerfbaselines.results)": [[11, "nerfbaselines.results.MetricInfo", false]], "metrics (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.metrics", false]], "metrics (nerfbaselines.optimizeembeddingoutput attribute)": [[3, "nerfbaselines.OptimizeEmbeddingOutput.metrics", false]], "metrics (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.metrics", false]], "metricsaccumulator (class in nerfbaselines.training)": [[12, "nerfbaselines.training.MetricsAccumulator", false]], "modelinfo (class in nerfbaselines)": [[3, "nerfbaselines.ModelInfo", false]], "module": [[3, "module-nerfbaselines", false], [4, "module-nerfbaselines.backends", false], [4, "module-nerfbaselines.backends.protocol_shm_pickle", false], [4, "module-nerfbaselines.backends.protocol_tcp_pickle", false], [5, "module-nerfbaselines.cameras", false], [6, "module-nerfbaselines.datasets", false], [6, "module-nerfbaselines.datasets.blender", false], [6, "module-nerfbaselines.datasets.bundler", false], [6, "module-nerfbaselines.datasets.colmap", false], [6, "module-nerfbaselines.datasets.llff", false], [6, "module-nerfbaselines.datasets.mipnerf360", false], [6, "module-nerfbaselines.datasets.nerfonthego", false], [6, "module-nerfbaselines.datasets.nerfstudio", false], [6, "module-nerfbaselines.datasets.phototourism", false], [6, "module-nerfbaselines.datasets.seathru_nerf", false], [6, "module-nerfbaselines.datasets.tanksandtemples", false], [7, "module-nerfbaselines.evaluation", false], [8, "module-nerfbaselines.io", false], [9, "module-nerfbaselines.logging", false], [10, "module-nerfbaselines.metrics", false], [11, "module-nerfbaselines.results", false], [12, "module-nerfbaselines.training", false], [13, "module-nerfbaselines.utils", false], [14, "module-nerfbaselines.viewer", false], [15, "module-nerfbaselines.web", false]], "mount() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.mount", false]], "mse() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.mse", false]], "name (nerfbaselines.backends.apptainerbackend attribute)": [[4, "nerfbaselines.backends.ApptainerBackend.name", false]], "name (nerfbaselines.backends.backend attribute)": [[4, "nerfbaselines.backends.Backend.name", false]], "name (nerfbaselines.backends.condabackend attribute)": [[4, "nerfbaselines.backends.CondaBackend.name", false]], "name (nerfbaselines.backends.dockerbackend attribute)": [[4, "nerfbaselines.backends.DockerBackend.name", false]], "name (nerfbaselines.backends.simplebackend attribute)": [[4, "nerfbaselines.backends.SimpleBackend.name", false]], "name (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.name", false]], "name (nerfbaselines.licensespec attribute)": [[3, "nerfbaselines.LicenseSpec.name", false]], "name (nerfbaselines.renderoutputtype attribute)": [[3, "nerfbaselines.RenderOutputType.name", false]], "name (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.name", false]], "name (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.name", false]], "name (nerfbaselines.results.sceneinfo attribute)": [[11, "nerfbaselines.results.SceneInfo.name", false]], "nears_fars (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.nears_fars", false]], "nerfbaselines": [[3, "module-nerfbaselines", false]], "nerfbaselines-download-dataset command line option": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false], [17, "cmdoption-nerfbaselines-download-dataset-o", false]], "nerfbaselines-evaluate command line option": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false], [17, "cmdoption-nerfbaselines-evaluate-o", false]], "nerfbaselines-export-demo command line option": [[17, "cmdoption-nerfbaselines-export-demo-backend", false], [17, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [17, "cmdoption-nerfbaselines-export-demo-data", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-export-demo-set", false], [17, "cmdoption-nerfbaselines-export-demo-train-embedding", false]], "nerfbaselines-export-mesh command line option": [[17, "cmdoption-nerfbaselines-export-mesh-backend", false], [17, "cmdoption-nerfbaselines-export-mesh-checkpoint", false], [17, "cmdoption-nerfbaselines-export-mesh-data", false], [17, "cmdoption-nerfbaselines-export-mesh-o", false], [17, "cmdoption-nerfbaselines-export-mesh-set", false], [17, "cmdoption-nerfbaselines-export-mesh-v", false]], "nerfbaselines-fix-checkpoint command line option": [[17, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-presets", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-set", false]], "nerfbaselines-fix-output-artifact command line option": [[17, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-force", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-input", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false]], "nerfbaselines-generate-dataset-results command line option": [[17, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-results", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-scenes", false]], "nerfbaselines-install command line option": [[17, "cmdoption-nerfbaselines-install-backend", false], [17, "cmdoption-nerfbaselines-install-force", false], [17, "cmdoption-nerfbaselines-install-method", false], [17, "cmdoption-nerfbaselines-install-spec", false]], "nerfbaselines-measure-fps command line option": [[17, "cmdoption-nerfbaselines-measure-fps-backend", false], [17, "cmdoption-nerfbaselines-measure-fps-checkpoint", false], [17, "cmdoption-nerfbaselines-measure-fps-data", false], [17, "cmdoption-nerfbaselines-measure-fps-data-indices", false], [17, "cmdoption-nerfbaselines-measure-fps-num-repeats", false], [17, "cmdoption-nerfbaselines-measure-fps-output", false], [17, "cmdoption-nerfbaselines-measure-fps-output-names", false], [17, "cmdoption-nerfbaselines-measure-fps-resolution", false], [17, "cmdoption-nerfbaselines-measure-fps-split", false]], "nerfbaselines-render command line option": [[17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-render-split", false]], "nerfbaselines-render-trajectory command line option": [[17, "cmdoption-nerfbaselines-render-trajectory-backend", false], [17, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [17, "cmdoption-nerfbaselines-render-trajectory-output", false], [17, "cmdoption-nerfbaselines-render-trajectory-output-names", false], [17, "cmdoption-nerfbaselines-render-trajectory-resolution", false], [17, "cmdoption-nerfbaselines-render-trajectory-trajectory", false]], "nerfbaselines-shell command line option": [[17, "cmdoption-nerfbaselines-shell-arg-COMMAND", false], [17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-shell-method", false]], "nerfbaselines-test-method command line option": [[17, "cmdoption-nerfbaselines-test-method-backend", false], [17, "cmdoption-nerfbaselines-test-method-data", false], [17, "cmdoption-nerfbaselines-test-method-full", false], [17, "cmdoption-nerfbaselines-test-method-method", false], [17, "cmdoption-nerfbaselines-test-method-presets", false], [17, "cmdoption-nerfbaselines-test-method-set", false], [17, "cmdoption-nerfbaselines-test-method-steps", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "nerfbaselines-train command line option": [[17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-train-disable-output-artifact", false], [17, "cmdoption-nerfbaselines-train-eval-all-iters", false], [17, "cmdoption-nerfbaselines-train-eval-few-iters", false], [17, "cmdoption-nerfbaselines-train-force-output-artifact", false], [17, "cmdoption-nerfbaselines-train-logger", false], [17, "cmdoption-nerfbaselines-train-method", false], [17, "cmdoption-nerfbaselines-train-output", false], [17, "cmdoption-nerfbaselines-train-presets", false], [17, "cmdoption-nerfbaselines-train-save-iters", false], [17, "cmdoption-nerfbaselines-train-set", false]], "nerfbaselines-viewer command line option": [[17, "cmdoption-nerfbaselines-viewer-backend", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-data", false], [17, "cmdoption-nerfbaselines-viewer-port", false]], "nerfbaselines-web-build command line option": [[17, "cmdoption-nerfbaselines-web-build-base-path", false], [17, "cmdoption-nerfbaselines-web-build-data", false], [17, "cmdoption-nerfbaselines-web-build-datasets", false], [17, "cmdoption-nerfbaselines-web-build-docs", false], [17, "cmdoption-nerfbaselines-web-build-output", false]], "nerfbaselines-web-dev command line option": [[17, "cmdoption-nerfbaselines-web-dev-data", false], [17, "cmdoption-nerfbaselines-web-dev-datasets", false], [17, "cmdoption-nerfbaselines-web-dev-docs", false]], "nerfbaselines.backends": [[4, "module-nerfbaselines.backends", false]], "nerfbaselines.backends.protocol_shm_pickle": [[4, "module-nerfbaselines.backends.protocol_shm_pickle", false]], "nerfbaselines.backends.protocol_tcp_pickle": [[4, "module-nerfbaselines.backends.protocol_tcp_pickle", false]], "nerfbaselines.cameras": [[5, "module-nerfbaselines.cameras", false]], "nerfbaselines.datasets": [[6, "module-nerfbaselines.datasets", false]], "nerfbaselines.datasets.blender": [[6, "module-nerfbaselines.datasets.blender", false]], "nerfbaselines.datasets.bundler": [[6, "module-nerfbaselines.datasets.bundler", false]], "nerfbaselines.datasets.colmap": [[6, "module-nerfbaselines.datasets.colmap", false]], "nerfbaselines.datasets.llff": [[6, "module-nerfbaselines.datasets.llff", false]], "nerfbaselines.datasets.mipnerf360": [[6, "module-nerfbaselines.datasets.mipnerf360", false]], "nerfbaselines.datasets.nerfonthego": [[6, "module-nerfbaselines.datasets.nerfonthego", false]], "nerfbaselines.datasets.nerfstudio": [[6, "module-nerfbaselines.datasets.nerfstudio", false]], "nerfbaselines.datasets.phototourism": [[6, "module-nerfbaselines.datasets.phototourism", false]], "nerfbaselines.datasets.seathru_nerf": [[6, "module-nerfbaselines.datasets.seathru_nerf", false]], "nerfbaselines.datasets.tanksandtemples": [[6, "module-nerfbaselines.datasets.tanksandtemples", false]], "nerfbaselines.evaluation": [[7, "module-nerfbaselines.evaluation", false]], "nerfbaselines.io": [[8, "module-nerfbaselines.io", false]], "nerfbaselines.logging": [[9, "module-nerfbaselines.logging", false]], "nerfbaselines.metrics": [[10, "module-nerfbaselines.metrics", false]], "nerfbaselines.results": [[11, "module-nerfbaselines.results", false]], "nerfbaselines.training": [[12, "module-nerfbaselines.training", false]], "nerfbaselines.utils": [[13, "module-nerfbaselines.utils", false]], "nerfbaselines.viewer": [[14, "module-nerfbaselines.viewer", false]], "nerfbaselines.web": [[15, "module-nerfbaselines.web", false]], "nerfevaluationprotocol (class in nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.NerfEvaluationProtocol", false]], "nerfwevaluationprotocol (class in nerfbaselines.datasets.phototourism)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol", false]], "new_cameras() (in module nerfbaselines)": [[3, "nerfbaselines.new_cameras", false]], "new_dataset() (in module nerfbaselines)": [[3, "nerfbaselines.new_dataset", false]], "new_nb_info() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.new_nb_info", false]], "num_iterations (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.num_iterations", false]], "num_iterations (nerfbaselines.training.trainer property)": [[12, "nerfbaselines.training.Trainer.num_iterations", false]], "numpy_from_base64() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.numpy_from_base64", false]], "numpy_to_base64() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.numpy_to_base64", false]], "open_any() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.open_any", false]], "open_any_directory() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.open_any_directory", false]], "optimize_embedding() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.optimize_embedding", false]], "optimizeembeddingoutput (class in nerfbaselines)": [[3, "nerfbaselines.OptimizeEmbeddingOutput", false]], "output_artifacts (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.output_artifacts", false]], "output_type_dtypes (nerfbaselines.renderoptions attribute)": [[3, "nerfbaselines.RenderOptions.output_type_dtypes", false]], "outputartifact (class in nerfbaselines)": [[3, "nerfbaselines.OutputArtifact", false]], "outputs (nerfbaselines.renderoptions attribute)": [[3, "nerfbaselines.RenderOptions.outputs", false]], "pad_poses() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.pad_poses", false]], "padded_stack() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.padded_stack", false]], "paper_authors (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.paper_authors", false]], "paper_authors (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.paper_authors", false]], "paper_link (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.paper_link", false]], "paper_link (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.paper_link", false]], "paper_title (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.paper_title", false]], "paper_title (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.paper_title", false]], "path_is_video() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.path_is_video", false]], "points3d_rgb (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.points3D_rgb", false]], "points3d_xyz (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.points3D_xyz", false]], "pop() (nerfbaselines.training.metricsaccumulator method)": [[12, "nerfbaselines.training.MetricsAccumulator.pop", false]], "pose (nerfbaselines.trajectoryframe attribute)": [[3, "nerfbaselines.TrajectoryFrame.pose", false]], "pose (nerfbaselines.trajectorykeyframe attribute)": [[3, "nerfbaselines.TrajectoryKeyframe.pose", false]], "poses (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.poses", false]], "predictions": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false]], "presets (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.presets", false]], "project() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.project", false]], "protocol_name (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol property)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.protocol_name", false]], "protocol_name (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol property)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.protocol_name", false]], "psnr() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.psnr", false]], "python_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.python_path", false]], "python_path (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.python_path", false]], "python_version (nerfbaselines.backends.condabackendspec attribute)": [[4, "nerfbaselines.backends.CondaBackendSpec.python_version", false]], "quaternion_conjugate() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.quaternion_conjugate", false]], "quaternion_multiply() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.quaternion_multiply", false]], "quaternion_to_rotation_matrix() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.quaternion_to_rotation_matrix", false]], "read_image() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.read_image", false]], "receive() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.receive", false]], "receive() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.receive", false]], "register() (in module nerfbaselines)": [[3, "nerfbaselines.register", false]], "render() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.render", false]], "render() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.render", false]], "render() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.render", false]], "render() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.render", false]], "render_all_images() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.render_all_images", false]], "render_frames() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.render_frames", false]], "render_latex_dataset_results_table() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.render_latex_dataset_results_table", false]], "render_markdown_dataset_results_table() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.render_markdown_dataset_results_table", false]], "render_output (nerfbaselines.optimizeembeddingoutput attribute)": [[3, "nerfbaselines.OptimizeEmbeddingOutput.render_output", false]], "renderoptions (class in nerfbaselines)": [[3, "nerfbaselines.RenderOptions", false]], "renderoutputtype (class in nerfbaselines)": [[3, "nerfbaselines.RenderOutputType", false]], "replace() (nerfbaselines.genericcameras method)": [[3, "nerfbaselines.GenericCameras.replace", false]], "replace_user (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.replace_user", false]], "required_features (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.required_features", false]], "required_features (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.required_features", false]], "required_features (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.required_features", false]], "resourcesutilizationinfo (class in nerfbaselines.training)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo", false]], "rotate_spherical_harmonics() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.rotate_spherical_harmonics", false]], "rotation_matrix_to_quaternion() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.rotation_matrix_to_quaternion", false]], "run_inside_eval_container() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.run_inside_eval_container", false]], "run_on_host() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.run_on_host", false]], "run_viser_viewer() (in module nerfbaselines.viewer)": [[14, "nerfbaselines.viewer.run_viser_viewer", false]], "sampling_mask_paths (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.sampling_mask_paths", false]], "sampling_mask_paths (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.sampling_mask_paths", false]], "sampling_mask_paths_root (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.sampling_mask_paths_root", false]], "sampling_mask_paths_root (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.sampling_mask_paths_root", false]], "sampling_masks (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.sampling_masks", false]], "sampling_masks (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.sampling_masks", false]], "save() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.save", false]], "save() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.save", false]], "save_cameras_npz() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_cameras_npz", false]], "save_depth() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_depth", false]], "save_evaluation_results() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_evaluation_results", false]], "save_image() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_image", false]], "save_output_artifact() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_output_artifact", false]], "save_predictions() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_predictions", false]], "save_trajectory() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_trajectory", false]], "sceneinfo (class in nerfbaselines.results)": [[11, "nerfbaselines.results.SceneInfo", false]], "scenes (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.scenes", false]], "scenes (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.scenes", false]], "send() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.send", false]], "send() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.send", false]], "serialize_evaluation_results() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.serialize_evaluation_results", false]], "serialize_nb_info() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.serialize_nb_info", false]], "sharedmemoryprotocol (class in nerfbaselines.backends.protocol_shm_pickle)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol", false]], "shell() (nerfbaselines.backends.apptainerbackend method)": [[4, "nerfbaselines.backends.ApptainerBackend.shell", false]], "shell() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.shell", false]], "shell() (nerfbaselines.backends.condabackend method)": [[4, "nerfbaselines.backends.CondaBackend.shell", false]], "shell() (nerfbaselines.backends.dockerbackend method)": [[4, "nerfbaselines.backends.DockerBackend.shell", false]], "simplebackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.SimpleBackend", false]], "source (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.source", false]], "ssim() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.ssim", false]], "start_dev_server() (in module nerfbaselines.web)": [[15, "nerfbaselines.web.start_dev_server", false]], "start_host() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.start_host", false]], "start_host() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.start_host", false]], "static_call() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.static_call", false]], "static_call() (nerfbaselines.backends.simplebackend method)": [[4, "nerfbaselines.backends.SimpleBackend.static_call", false]], "supported_camera_models (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.supported_camera_models", false]], "supported_camera_models (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.supported_camera_models", false]], "supported_camera_models (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.supported_camera_models", false]], "supported_outputs (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.supported_outputs", false]], "supported_outputs (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.supported_outputs", false]], "supported_outputs (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.supported_outputs", false]], "tcppickleprotocol (class in nerfbaselines.backends.protocol_tcp_pickle)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol", false]], "tension (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.tension", false]], "tensorboardlogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.TensorboardLogger", false]], "tensorboardloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent", false]], "torchmetrics_ssim() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.torchmetrics_ssim", false]], "train() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.train", false]], "train_iteration() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.train_iteration", false]], "train_iteration() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.train_iteration", false]], "trainer (class in nerfbaselines.training)": [[12, "nerfbaselines.training.Trainer", false]], "trajectory (class in nerfbaselines)": [[3, "nerfbaselines.Trajectory", false]], "trajectory_get_cameras() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.trajectory_get_cameras", false]], "trajectory_get_embeddings() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.trajectory_get_embeddings", false]], "trajectoryframe (class in nerfbaselines)": [[3, "nerfbaselines.TrajectoryFrame", false]], "trajectoryframeappearance (class in nerfbaselines)": [[3, "nerfbaselines.TrajectoryFrameAppearance", false]], "trajectorykeyframe (class in nerfbaselines)": [[3, "nerfbaselines.TrajectoryKeyframe", false]], "transition_duration (nerfbaselines.trajectorykeyframe attribute)": [[3, "nerfbaselines.TrajectoryKeyframe.transition_duration", false]], "type (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.type", false]], "type (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.type", false]], "type (nerfbaselines.renderoutputtype attribute)": [[3, "nerfbaselines.RenderOutputType.type", false]], "undistort_camera() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.undistort_camera", false]], "unloadeddataset (class in nerfbaselines)": [[3, "nerfbaselines.UnloadedDataset", false]], "unpad_poses() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.unpad_poses", false]], "unproject() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.unproject", false]], "update() (nerfbaselines.training.metricsaccumulator method)": [[12, "nerfbaselines.training.MetricsAccumulator.update", false]], "url (nerfbaselines.licensespec attribute)": [[3, "nerfbaselines.LicenseSpec.url", false]], "visualize_depth() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.visualize_depth", false]], "wait_for_worker() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.wait_for_worker", false]], "wait_for_worker() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.wait_for_worker", false]], "wandblogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.WandbLogger", false]], "wandbloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.WandbLoggerEvent", false]], "warp_image_between_cameras() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.warp_image_between_cameras", false]], "wget() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.wget", false]], "with_supported_camera_models() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.with_supported_camera_models", false]], "with_total() (nerfbaselines.utils.indices method)": [[13, "nerfbaselines.utils.Indices.with_total", false]]}, "objects": {"": [[3, 0, 0, "-", "nerfbaselines"]], "nerfbaselines": [[3, 1, 1, "", "Cameras"], [3, 1, 1, "", "Dataset"], [3, 1, 1, "", "DatasetLoaderSpec"], [3, 3, 1, "", "DatasetNotFoundError"], [3, 1, 1, "", "DatasetSpec"], [3, 1, 1, "", "DatasetSpecMetadata"], [3, 1, 1, "", "DownloadDatasetFunction"], [3, 1, 1, "", "EvaluationProtocol"], [3, 1, 1, "", "EvaluationProtocolSpec"], [3, 1, 1, "", "GenericCameras"], [3, 1, 1, "", "ImageSetInterpolationSource"], [3, 1, 1, "", "KochanekBartelsInterpolationSource"], [3, 1, 1, "", "LicenseSpec"], [3, 1, 1, "", "LoadDatasetFunction"], [3, 1, 1, "", "Logger"], [3, 1, 1, "", "LoggerEvent"], [3, 1, 1, "", "LoggerSpec"], [3, 1, 1, "", "Method"], [3, 1, 1, "", "MethodInfo"], [3, 1, 1, "", "MethodSpec"], [3, 1, 1, "", "ModelInfo"], [3, 1, 1, "", "OptimizeEmbeddingOutput"], [3, 1, 1, "", "OutputArtifact"], [3, 1, 1, "", "RenderOptions"], [3, 1, 1, "", "RenderOutputType"], [3, 1, 1, "", "Trajectory"], [3, 1, 1, "", "TrajectoryFrame"], [3, 1, 1, "", "TrajectoryFrameAppearance"], [3, 1, 1, "", "TrajectoryKeyframe"], [3, 1, 1, "", "UnloadedDataset"], [4, 0, 0, "-", "backends"], [3, 6, 1, "", "build_method_class"], [3, 6, 1, "", "camera_model_from_int"], [3, 6, 1, "", "camera_model_to_int"], [5, 0, 0, "-", "cameras"], [6, 0, 0, "-", "datasets"], [7, 0, 0, "-", "evaluation"], [3, 6, 1, "", "get_dataset_loader_spec"], [3, 6, 1, "", "get_dataset_spec"], [3, 6, 1, "", "get_evaluation_protocol_spec"], [3, 6, 1, "", "get_logger_spec"], [3, 6, 1, "", "get_method_spec"], [3, 6, 1, "", "get_supported_dataset_loaders"], [3, 6, 1, "", "get_supported_datasets"], [3, 6, 1, "", "get_supported_evaluation_protocols"], [3, 6, 1, "", "get_supported_loggers"], [3, 6, 1, "", "get_supported_methods"], [8, 0, 0, "-", "io"], [3, 6, 1, "", "load_checkpoint"], [9, 0, 0, "-", "logging"], [10, 0, 0, "-", "metrics"], [3, 6, 1, "", "new_cameras"], [3, 6, 1, "", "new_dataset"], [3, 6, 1, "", "register"], [11, 0, 0, "-", "results"], [12, 0, 0, "-", "training"], [13, 0, 0, "-", "utils"], [14, 0, 0, "-", "viewer"], [15, 0, 0, "-", "web"]], "nerfbaselines-download-dataset": [[17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", "DATASET"]], "nerfbaselines-evaluate": [[17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", "PREDICTIONS"]], "nerfbaselines-export-demo": [[17, 7, 1, "cmdoption-nerfbaselines-export-demo-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-train-embedding", "--train-embedding"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "-o"]], "nerfbaselines-export-mesh": [[17, 7, 1, "cmdoption-nerfbaselines-export-mesh-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-v", "-v"]], "nerfbaselines-fix-checkpoint": [[17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", "--new-checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-presets", "--presets"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-set", "--set"]], "nerfbaselines-fix-output-artifact": [[17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-force", "--force"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-inplace", "--inplace"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-input", "--input"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", "--rebuild-checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", "--rerun-evaluation"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", "--rerun-render"]], "nerfbaselines-generate-dataset-results": [[17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-dataset", "--dataset"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-method-links", "--method-links"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output-type", "--output-type"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-results", "--results"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-scenes", "--scenes"]], "nerfbaselines-install": [[17, 7, 1, "cmdoption-nerfbaselines-install-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-install-force", "--force"], [17, 7, 1, "cmdoption-nerfbaselines-install-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-install-spec", "--spec"]], "nerfbaselines-measure-fps": [[17, 7, 1, "cmdoption-nerfbaselines-measure-fps-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-data-indices", "--data-indices"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-num-repeats", "--num-repeats"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-output-names", "--output-names"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-resolution", "--resolution"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-split", "--split"]], "nerfbaselines-render": [[17, 7, 1, "cmdoption-nerfbaselines-render-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-render-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-render-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-render-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-split", "--split"]], "nerfbaselines-render-trajectory": [[17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output-names", "--output-names"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-resolution", "--resolution"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-trajectory", "--trajectory"]], "nerfbaselines-shell": [[17, 7, 1, "cmdoption-nerfbaselines-shell-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-shell-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-shell-arg-COMMAND", "COMMAND"]], "nerfbaselines-test-method": [[17, 7, 1, "cmdoption-nerfbaselines-test-method-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-full", "--full"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-presets", "--presets"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-steps", "--steps"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-v", "-v"]], "nerfbaselines-train": [[17, 7, 1, "cmdoption-nerfbaselines-train-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-train-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-train-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-train-disable-output-artifact", "--disable-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-all-iters", "--eval-all-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-few-iters", "--eval-few-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-force-output-artifact", "--force-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-logger", "--logger"], [17, 7, 1, "cmdoption-nerfbaselines-train-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-train-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-train-presets", "--presets"], [17, 7, 1, "cmdoption-nerfbaselines-train-save-iters", "--save-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-set", "--set"]], "nerfbaselines-viewer": [[17, 7, 1, "cmdoption-nerfbaselines-viewer-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-port", "--port"]], "nerfbaselines-web-build": [[17, 7, 1, "cmdoption-nerfbaselines-web-build-base-path", "--base-path"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-datasets", "--datasets"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-docs", "--docs"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-output", "--output"]], "nerfbaselines-web-dev": [[17, 7, 1, "cmdoption-nerfbaselines-web-dev-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-web-dev-datasets", "--datasets"], [17, 7, 1, "cmdoption-nerfbaselines-web-dev-docs", "--docs"]], "nerfbaselines.Dataset": [[3, 2, 1, "", "cameras"], [3, 2, 1, "", "image_paths"], [3, 2, 1, "", "image_paths_root"], [3, 2, 1, "", "images"], [3, 2, 1, "", "images_points3D_indices"], [3, 2, 1, "", "metadata"], [3, 2, 1, "", "points3D_rgb"], [3, 2, 1, "", "points3D_xyz"], [3, 2, 1, "", "sampling_mask_paths"], [3, 2, 1, "", "sampling_mask_paths_root"], [3, 2, 1, "", "sampling_masks"]], "nerfbaselines.DatasetLoaderSpec": [[3, 2, 1, "", "id"], [3, 2, 1, "", "load_dataset_function"]], "nerfbaselines.DatasetSpec": [[3, 2, 1, "", "download_dataset_function"], [3, 2, 1, "", "evaluation_protocol"], [3, 2, 1, "", "id"], [3, 2, 1, "", "metadata"]], "nerfbaselines.DatasetSpecMetadata": [[3, 2, 1, "", "default_metric"], [3, 2, 1, "", "description"], [3, 2, 1, "", "id"], [3, 2, 1, "", "licenses"], [3, 2, 1, "", "link"], [3, 2, 1, "", "metrics"], [3, 2, 1, "", "name"], [3, 2, 1, "", "paper_authors"], [3, 2, 1, "", "paper_link"], [3, 2, 1, "", "paper_title"], [3, 2, 1, "", "scenes"]], "nerfbaselines.EvaluationProtocol": [[3, 4, 1, "", "accumulate_metrics"], [3, 4, 1, "", "evaluate"], [3, 4, 1, "", "get_name"], [3, 4, 1, "", "render"]], "nerfbaselines.EvaluationProtocolSpec": [[3, 2, 1, "", "evaluation_protocol_class"], [3, 2, 1, "", "id"]], "nerfbaselines.GenericCameras": [[3, 4, 1, "", "apply"], [3, 5, 1, "", "camera_models"], [3, 4, 1, "", "cat"], [3, 5, 1, "", "distortion_parameters"], [3, 5, 1, "", "image_sizes"], [3, 5, 1, "", "intrinsics"], [3, 4, 1, "", "item"], [3, 5, 1, "", "metadata"], [3, 5, 1, "", "nears_fars"], [3, 5, 1, "", "poses"], [3, 4, 1, "", "replace"]], "nerfbaselines.ImageSetInterpolationSource": [[3, 2, 1, "", "default_appearance"], [3, 2, 1, "", "default_fov"], [3, 2, 1, "", "default_transition_duration"], [3, 2, 1, "", "interpolation"], [3, 2, 1, "", "keyframes"], [3, 2, 1, "", "type"]], "nerfbaselines.KochanekBartelsInterpolationSource": [[3, 2, 1, "", "default_appearance"], [3, 2, 1, "", "default_fov"], [3, 2, 1, "", "default_transition_duration"], [3, 2, 1, "", "interpolation"], [3, 2, 1, "", "is_cycle"], [3, 2, 1, "", "keyframes"], [3, 2, 1, "", "tension"], [3, 2, 1, "", "type"]], "nerfbaselines.LicenseSpec": [[3, 2, 1, "", "name"], [3, 2, 1, "", "url"]], "nerfbaselines.Logger": [[3, 4, 1, "", "add_embedding"], [3, 4, 1, "", "add_event"], [3, 4, 1, "", "add_image"], [3, 4, 1, "", "add_scalar"], [3, 4, 1, "", "add_text"]], "nerfbaselines.LoggerEvent": [[3, 4, 1, "", "add_embedding"], [3, 4, 1, "", "add_histogram"], [3, 4, 1, "", "add_image"], [3, 4, 1, "", "add_plot"], [3, 4, 1, "", "add_scalar"], [3, 4, 1, "", "add_text"]], "nerfbaselines.LoggerSpec": [[3, 2, 1, "", "id"], [3, 2, 1, "", "logger_class"]], "nerfbaselines.Method": [[3, 4, 1, "", "get_info"], [3, 4, 1, "", "get_method_info"], [3, 4, 1, "", "get_train_embedding"], [3, 4, 1, "", "optimize_embedding"], [3, 4, 1, "", "render"], [3, 4, 1, "", "save"], [3, 4, 1, "", "train_iteration"]], "nerfbaselines.MethodInfo": [[3, 2, 1, "", "method_id"], [3, 2, 1, "", "required_features"], [3, 2, 1, "", "supported_camera_models"], [3, 2, 1, "", "supported_outputs"]], "nerfbaselines.MethodSpec": [[3, 2, 1, "", "apptainer"], [3, 2, 1, "", "backends_order"], [3, 2, 1, "", "conda"], [3, 2, 1, "", "docker"], [3, 2, 1, "", "id"], [3, 2, 1, "", "implementation_status"], [3, 2, 1, "", "metadata"], [3, 2, 1, "", "method_class"], [3, 2, 1, "", "output_artifacts"], [3, 2, 1, "", "presets"], [3, 2, 1, "", "required_features"], [3, 2, 1, "", "supported_camera_models"], [3, 2, 1, "", "supported_outputs"]], "nerfbaselines.ModelInfo": [[3, 2, 1, "", "batch_size"], [3, 2, 1, "", "eval_batch_size"], [3, 2, 1, "", "hparams"], [3, 2, 1, "", "loaded_checkpoint"], [3, 2, 1, "", "loaded_step"], [3, 2, 1, "", "method_id"], [3, 2, 1, "", "num_iterations"], [3, 2, 1, "", "required_features"], [3, 2, 1, "", "supported_camera_models"], [3, 2, 1, "", "supported_outputs"]], "nerfbaselines.OptimizeEmbeddingOutput": [[3, 2, 1, "", "embedding"], [3, 2, 1, "", "metrics"], [3, 2, 1, "", "render_output"]], "nerfbaselines.OutputArtifact": [[3, 2, 1, "", "link"]], "nerfbaselines.RenderOptions": [[3, 2, 1, "", "embedding"], [3, 2, 1, "", "output_type_dtypes"], [3, 2, 1, "", "outputs"]], "nerfbaselines.RenderOutputType": [[3, 2, 1, "", "name"], [3, 2, 1, "", "type"]], "nerfbaselines.Trajectory": [[3, 2, 1, "", "appearances"], [3, 2, 1, "", "camera_model"], [3, 2, 1, "", "fps"], [3, 2, 1, "", "frames"], [3, 2, 1, "", "image_size"], [3, 2, 1, "", "source"]], "nerfbaselines.TrajectoryFrame": [[3, 2, 1, "", "appearance_weights"], [3, 2, 1, "", "intrinsics"], [3, 2, 1, "", "pose"]], "nerfbaselines.TrajectoryFrameAppearance": [[3, 2, 1, "", "embedding"], [3, 2, 1, "", "embedding_train_index"]], "nerfbaselines.TrajectoryKeyframe": [[3, 2, 1, "", "appearance"], [3, 2, 1, "", "fov"], [3, 2, 1, "", "pose"], [3, 2, 1, "", "transition_duration"]], "nerfbaselines.UnloadedDataset": [[3, 2, 1, "", "cameras"], [3, 2, 1, "", "image_paths"], [3, 2, 1, "", "image_paths_root"], [3, 2, 1, "", "images"], [3, 2, 1, "", "images_points3D_indices"], [3, 2, 1, "", "metadata"], [3, 2, 1, "", "points3D_rgb"], [3, 2, 1, "", "points3D_xyz"], [3, 2, 1, "", "sampling_mask_paths"], [3, 2, 1, "", "sampling_mask_paths_root"], [3, 2, 1, "", "sampling_masks"]], "nerfbaselines.backends": [[4, 1, 1, "", "ApptainerBackend"], [4, 1, 1, "", "ApptainerBackendSpec"], [4, 1, 1, "", "Backend"], [4, 1, 1, "", "CondaBackend"], [4, 1, 1, "", "CondaBackendSpec"], [4, 1, 1, "", "DockerBackend"], [4, 1, 1, "", "DockerBackendSpec"], [4, 1, 1, "", "SimpleBackend"], [4, 6, 1, "", "forward_port"], [4, 6, 1, "", "get_backend"], [4, 6, 1, "", "get_forwarded_ports"], [4, 6, 1, "", "get_implemented_backends"], [4, 6, 1, "", "get_mounts"], [4, 6, 1, "", "mount"], [4, 0, 0, "-", "protocol_shm_pickle"], [4, 0, 0, "-", "protocol_tcp_pickle"], [4, 6, 1, "", "run_on_host"]], "nerfbaselines.backends.ApptainerBackend": [[4, 4, 1, "", "install"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"]], "nerfbaselines.backends.ApptainerBackendSpec": [[4, 2, 1, "", "conda_spec"], [4, 2, 1, "", "default_cuda_archs"], [4, 2, 1, "", "environment_name"], [4, 2, 1, "", "home_path"], [4, 2, 1, "", "image"], [4, 2, 1, "", "python_path"]], "nerfbaselines.backends.Backend": [[4, 4, 1, "", "install"], [4, 4, 1, "", "instance_call"], [4, 4, 1, "", "instance_del"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"], [4, 4, 1, "", "static_call"]], "nerfbaselines.backends.CondaBackend": [[4, 4, 1, "", "install"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"]], "nerfbaselines.backends.CondaBackendSpec": [[4, 2, 1, "", "environment_name"], [4, 2, 1, "", "install_script"], [4, 2, 1, "", "python_version"]], "nerfbaselines.backends.DockerBackend": [[4, 4, 1, "", "install"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"]], "nerfbaselines.backends.DockerBackendSpec": [[4, 2, 1, "", "build_script"], [4, 2, 1, "", "conda_spec"], [4, 2, 1, "", "default_cuda_archs"], [4, 2, 1, "", "environment_name"], [4, 2, 1, "", "home_path"], [4, 2, 1, "", "image"], [4, 2, 1, "", "python_path"], [4, 2, 1, "", "replace_user"]], "nerfbaselines.backends.SimpleBackend": [[4, 4, 1, "", "instance_call"], [4, 4, 1, "", "instance_del"], [4, 2, 1, "", "name"], [4, 4, 1, "", "static_call"]], "nerfbaselines.backends.protocol_shm_pickle": [[4, 3, 1, "", "ConnectionClosed"], [4, 1, 1, "", "SharedMemoryProtocol"]], "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol": [[4, 4, 1, "", "close"], [4, 4, 1, "", "connect_worker"], [4, 4, 1, "", "get_worker_configuration"], [4, 5, 1, "", "protocol_name"], [4, 4, 1, "", "receive"], [4, 4, 1, "", "send"], [4, 4, 1, "", "start_host"], [4, 4, 1, "", "wait_for_worker"]], "nerfbaselines.backends.protocol_tcp_pickle": [[4, 1, 1, "", "TCPPickleProtocol"]], "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol": [[4, 4, 1, "", "close"], [4, 4, 1, "", "connect_worker"], [4, 4, 1, "", "get_worker_configuration"], [4, 5, 1, "", "protocol_name"], [4, 4, 1, "", "receive"], [4, 4, 1, "", "send"], [4, 4, 1, "", "start_host"], [4, 4, 1, "", "wait_for_worker"]], "nerfbaselines.cameras": [[5, 6, 1, "", "get_image_pixels"], [5, 6, 1, "", "get_rays"], [5, 6, 1, "", "interpolate_bilinear"], [5, 6, 1, "", "project"], [5, 6, 1, "", "undistort_camera"], [5, 6, 1, "", "unproject"], [5, 6, 1, "", "warp_image_between_cameras"]], "nerfbaselines.datasets": [[6, 0, 0, "-", "blender"], [6, 0, 0, "-", "bundler"], [6, 0, 0, "-", "colmap"], [6, 6, 1, "", "dataset_index_select"], [6, 6, 1, "", "dataset_load_features"], [6, 6, 1, "", "download_dataset"], [6, 0, 0, "-", "llff"], [6, 6, 1, "", "load_dataset"], [6, 0, 0, "-", "mipnerf360"], [6, 0, 0, "-", "nerfonthego"], [6, 0, 0, "-", "nerfstudio"], [6, 0, 0, "-", "phototourism"], [6, 0, 0, "-", "seathru_nerf"], [6, 0, 0, "-", "tanksandtemples"]], "nerfbaselines.datasets.blender": [[6, 6, 1, "", "download_blender_dataset"], [6, 6, 1, "", "load_blender_dataset"]], "nerfbaselines.datasets.bundler": [[6, 6, 1, "", "load_bundler_dataset"]], "nerfbaselines.datasets.colmap": [[6, 6, 1, "", "load_colmap_dataset"]], "nerfbaselines.datasets.llff": [[6, 6, 1, "", "download_llff_dataset"], [6, 6, 1, "", "load_llff_dataset"]], "nerfbaselines.datasets.mipnerf360": [[6, 6, 1, "", "download_mipnerf360_dataset"]], "nerfbaselines.datasets.nerfonthego": [[6, 6, 1, "", "load_nerfonthego_dataset"]], "nerfbaselines.datasets.nerfstudio": [[6, 6, 1, "", "download_nerfstudio_dataset"], [6, 6, 1, "", "load_nerfstudio_dataset"]], "nerfbaselines.datasets.phototourism": [[6, 1, 1, "", "NerfWEvaluationProtocol"], [6, 6, 1, "", "download_phototourism_dataset"]], "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol": [[6, 4, 1, "", "accumulate_metrics"], [6, 4, 1, "", "evaluate"], [6, 4, 1, "", "get_name"], [6, 4, 1, "", "render"]], "nerfbaselines.datasets.seathru_nerf": [[6, 6, 1, "", "download_seathru_nerf_dataset"], [6, 6, 1, "", "load_seathru_nerf_dataset"]], "nerfbaselines.datasets.tanksandtemples": [[6, 6, 1, "", "download_tanksandtemples_dataset"]], "nerfbaselines.evaluation": [[7, 1, 1, "", "DefaultEvaluationProtocol"], [7, 1, 1, "", "NerfEvaluationProtocol"], [7, 6, 1, "", "build_evaluation_protocol"], [7, 6, 1, "", "compute_metrics"], [7, 6, 1, "", "evaluate"], [7, 6, 1, "", "path_is_video"], [7, 6, 1, "", "render_all_images"], [7, 6, 1, "", "render_frames"], [7, 6, 1, "", "run_inside_eval_container"], [7, 6, 1, "", "trajectory_get_cameras"], [7, 6, 1, "", "trajectory_get_embeddings"], [7, 6, 1, "", "with_supported_camera_models"]], "nerfbaselines.evaluation.DefaultEvaluationProtocol": [[7, 4, 1, "", "accumulate_metrics"], [7, 4, 1, "", "evaluate"], [7, 4, 1, "", "get_name"], [7, 4, 1, "", "render"]], "nerfbaselines.io": [[8, 6, 1, "", "deserialize_nb_info"], [8, 6, 1, "", "get_checkpoint_sha"], [8, 6, 1, "", "get_method_sha"], [8, 6, 1, "", "get_metrics_hash"], [8, 6, 1, "", "get_predictions_sha"], [8, 6, 1, "", "get_torch_checkpoint_sha"], [8, 6, 1, "", "load_trajectory"], [8, 6, 1, "", "new_nb_info"], [8, 6, 1, "", "numpy_from_base64"], [8, 6, 1, "", "numpy_to_base64"], [8, 6, 1, "", "open_any"], [8, 6, 1, "", "open_any_directory"], [8, 6, 1, "", "read_image"], [8, 6, 1, "", "save_cameras_npz"], [8, 6, 1, "", "save_depth"], [8, 6, 1, "", "save_evaluation_results"], [8, 6, 1, "", "save_image"], [8, 6, 1, "", "save_output_artifact"], [8, 6, 1, "", "save_predictions"], [8, 6, 1, "", "save_trajectory"], [8, 6, 1, "", "serialize_evaluation_results"], [8, 6, 1, "", "serialize_nb_info"], [8, 6, 1, "", "wget"]], "nerfbaselines.logging": [[9, 1, 1, "", "BaseLogger"], [9, 1, 1, "", "BaseLoggerEvent"], [9, 1, 1, "", "ConcatLogger"], [9, 1, 1, "", "ConcatLoggerEvent"], [9, 1, 1, "", "TensorboardLogger"], [9, 1, 1, "", "TensorboardLoggerEvent"], [9, 1, 1, "", "WandbLogger"], [9, 1, 1, "", "WandbLoggerEvent"], [9, 6, 1, "", "log_metrics"]], "nerfbaselines.logging.BaseLogger": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.logging.BaseLoggerEvent": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_plot"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.logging.ConcatLogger": [[9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLogger": [[9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLoggerEvent": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_histogram"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.logging.WandbLogger": [[9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.WandbLoggerEvent": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_histogram"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_plot"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.metrics": [[10, 6, 1, "", "dmpix_ssim"], [10, 6, 1, "", "lpips"], [10, 6, 1, "", "lpips_alex"], [10, 6, 1, "", "lpips_vgg"], [10, 6, 1, "", "mae"], [10, 6, 1, "", "mse"], [10, 6, 1, "", "psnr"], [10, 6, 1, "", "ssim"], [10, 6, 1, "", "torchmetrics_ssim"]], "nerfbaselines.results": [[11, 1, 1, "", "DatasetInfo"], [11, 1, 1, "", "MetricInfo"], [11, 1, 1, "", "SceneInfo"], [11, 6, 1, "", "compile_dataset_results"], [11, 6, 1, "", "format_duration"], [11, 6, 1, "", "format_memory"], [11, 6, 1, "", "get_dataset_info"], [11, 6, 1, "", "get_method_info_from_spec"], [11, 6, 1, "", "load_metrics_from_results"], [11, 6, 1, "", "render_latex_dataset_results_table"], [11, 6, 1, "", "render_markdown_dataset_results_table"]], "nerfbaselines.results.DatasetInfo": [[11, 2, 1, "", "default_metric"], [11, 2, 1, "", "description"], [11, 2, 1, "", "id"], [11, 2, 1, "", "licenses"], [11, 2, 1, "", "link"], [11, 2, 1, "", "metrics"], [11, 2, 1, "", "name"], [11, 2, 1, "", "paper_authors"], [11, 2, 1, "", "paper_link"], [11, 2, 1, "", "paper_title"], [11, 2, 1, "", "scenes"]], "nerfbaselines.results.MetricInfo": [[11, 2, 1, "", "ascending"], [11, 2, 1, "", "description"], [11, 2, 1, "", "id"], [11, 2, 1, "", "link"], [11, 2, 1, "", "name"]], "nerfbaselines.results.SceneInfo": [[11, 2, 1, "", "id"], [11, 2, 1, "", "name"]], "nerfbaselines.training": [[12, 1, 1, "", "MetricsAccumulator"], [12, 1, 1, "", "ResourcesUtilizationInfo"], [12, 1, 1, "", "Trainer"], [12, 6, 1, "", "build_logger"], [12, 6, 1, "", "eval_all"], [12, 6, 1, "", "eval_few"], [12, 6, 1, "", "get_presets_and_config_overrides"], [12, 6, 1, "", "get_resources_utilization_info"], [12, 6, 1, "", "make_image_grid"]], "nerfbaselines.training.MetricsAccumulator": [[12, 4, 1, "", "pop"], [12, 4, 1, "", "update"]], "nerfbaselines.training.ResourcesUtilizationInfo": [[12, 2, 1, "", "gpu_memory"], [12, 2, 1, "", "gpu_name"], [12, 2, 1, "", "memory"]], "nerfbaselines.training.Trainer": [[12, 4, 1, "", "eval_all"], [12, 4, 1, "", "eval_few"], [12, 4, 1, "", "get_logger"], [12, 5, 1, "", "num_iterations"], [12, 4, 1, "", "save"], [12, 4, 1, "", "train"], [12, 4, 1, "", "train_iteration"]], "nerfbaselines.utils": [[13, 1, 1, "", "CancellationToken"], [13, 3, 1, "", "CancelledException"], [13, 1, 1, "", "Indices"], [13, 6, 1, "", "apply_colormap"], [13, 6, 1, "", "apply_transform"], [13, 6, 1, "", "convert_image_dtype"], [13, 6, 1, "", "get_transform_and_scale"], [13, 6, 1, "", "image_to_srgb"], [13, 6, 1, "", "invert_transform"], [13, 6, 1, "", "pad_poses"], [13, 6, 1, "", "padded_stack"], [13, 6, 1, "", "quaternion_conjugate"], [13, 6, 1, "", "quaternion_multiply"], [13, 6, 1, "", "quaternion_to_rotation_matrix"], [13, 6, 1, "", "rotate_spherical_harmonics"], [13, 6, 1, "", "rotation_matrix_to_quaternion"], [13, 6, 1, "", "unpad_poses"], [13, 6, 1, "", "visualize_depth"]], "nerfbaselines.utils.CancellationToken": [[13, 4, 1, "", "cancel"], [13, 4, 1, "", "cancel_if_requested"]], "nerfbaselines.utils.Indices": [[13, 4, 1, "", "every_iters"], [13, 4, 1, "", "with_total"]], "nerfbaselines.viewer": [[14, 6, 1, "", "run_viser_viewer"]], "nerfbaselines.web": [[15, 6, 1, "", "build"], [15, 6, 1, "", "start_dev_server"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:method", "5": "py:property", "6": "py:function", "7": "std:cmdoption"}, "terms": {"": [0, 1, 10, 12, 13, 17, 18, 24, 26, 27, 28], "0": [0, 1, 5, 10, 13, 18, 20, 23, 25, 26, 28], "00": 26, "00016": 26, "0002": 26, "001": 26, "00109": 25, "0025": 26, "0031308": 13, "005": 26, "006926": 26, "007215": 26, "00889": 20, "01": [10, 26], "019655": 26, "02": 26, "024916": 26, "026": 26, "03": 10, "04": 24, "04264": [20, 25], "05": 26, "051249": 26, "055": 13, "055669": 26, "056562": 26, "06": 26, "06706": 25, "06765": 25, "06it": 26, "071186": 26, "075102": 26, "07973x": 23, "08": 26, "084124": 26, "08447": 25, "08934": [20, 25], "09": 26, "095": 23, "09517": 25, "09987": 25, "0m": 26, "1": [0, 1, 10, 12, 13, 17, 18, 19, 25, 26, 28], "10": [13, 17, 18, 20, 21], "100": [1, 26], "10000": 12, "10241": 25, "102799": 26, "10772": 25, "1085": 13, "10902": 25, "10_000": 26, "10k": 26, "11": [1, 10, 26], "12": [13, 25, 26], "12077": [0, 20, 25], "12em": 23, "13": [10, 23, 26], "134217728": 4, "14": 26, "144017": 26, "15": 26, "15000": 26, "15704": 25, "16493": 25, "169": 26, "17": 1, "17888": 25, "179": 26, "18": 26, "18715": 25, "19": 26, "1905": 20, "1920": 12, "1920x1080": 17, "194": 26, "19tv6kdvgcmg3cgz1bniunbbmd": 6, "1e": 1, "1em": 23, "2": [1, 3, 5, 12, 13, 18, 19, 20, 25, 26], "200": 25, "2000": [12, 17], "2003": [20, 25], "2004": 10, "2023": 6, "2024": [23, 26], "210": 26, "210046": 26, "2111": [0, 20, 25], "216097": 26, "22": [24, 26], "2203": 25, "221673": 26, "227448": 26, "22t20": 26, "23": [13, 23], "2301": 25, "2302": [20, 25], "2304": 25, "2308": 25, "2311": 25, "2312": 25, "233335": 26, "236": 26, "2403": 25, "2404": 25, "2405": 25, "2407": 25, "2409": 25, "25": 26, "2514": 13, "26it": 26, "275": 26, "27it": 26, "28": 26, "286": 26, "299345": 26, "2_000": 26, "2d": [17, 22], "2dg": 25, "2f": 26, "2k": 26, "2t": 23, "3": [1, 5, 13, 16, 18, 25, 26], "3000": 26, "30000": [21, 22, 26, 27], "30it": 26, "31": 26, "311843": 26, "312": 26, "316162": 26, "324": 26, "329421": 26, "32it": 26, "33": 26, "3324": 26, "360": [0, 27], "36minfo": 26, "3774": 26, "3d": [5, 18, 20, 25, 27], "3d_gaussian_splatting_low": 25, "3dg": [17, 21, 23], "3x3": 13, "3x4": [13, 18, 26], "4": [6, 10, 13, 18, 25, 26], "40gb": 26, "420": 26, "43": 26, "4304": 26, "463": 26, "4654": 13, "481": 26, "4mib": 26, "4x4": 13, "5": [5, 10, 26], "500": 26, "51": 26, "53": 26, "54": 26, "54275": 26, "5500": 19, "56": 26, "5846": 26, "59": 26, "6": [13, 25, 26], "600": 10, "6006": [14, 17], "612": 10, "648": 26, "6e": 26, "73": 26, "8": [16, 20, 23, 26], "8000": 21, "83263": 26, "85g": 26, "86it": 26, "87it": 26, "90254": 23, "91it": 26, "92": 13, "921037": 26, "936": 26, "94": 26, "941": 26, "948501": 26, "95": 26, "958": 26, "961329": 26, "972198": 26, "981": 26, "A": [0, 3, 5, 7, 10, 11, 12, 13, 16, 17, 18, 20, 23, 25, 26], "And": 17, "But": 23, "By": [13, 17, 18, 27], "For": [0, 1, 5, 13, 16, 21, 22, 23, 24, 27], "If": [0, 1, 6, 7, 10, 11, 13, 16, 17, 18, 19, 21, 23, 24, 27, 28], "In": [0, 1, 13, 16, 18, 19, 21, 22, 24, 25, 26, 27, 28], "It": [3, 10, 12, 13, 16, 17, 20, 25, 27], "Near": 3, "No": 13, "On": 24, "One": 10, "Or": [0, 28], "The": [0, 1, 3, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "Then": 0, "There": [1, 18, 26, 28], "These": [16, 21, 28], "To": [1, 19, 21, 22, 24, 26, 27], "_": [6, 26], "__enter__": 26, "__init__": 1, "_common": 26, "_incompletedataset": 3, "_load_camera": 18, "_loaded_step": 1, "_state": 1, "_type": 12, "a100": 26, "abhik": [20, 25], "abhishek": [20, 25], "abl": [0, 28], "about": [0, 18, 22], "absolut": [10, 17, 18], "abstract": 3, "acceler": 25, "accept": [1, 16, 26], "access": [13, 16, 19, 21, 24], "accumul": [17, 25, 26], "accumulate_metr": [3, 6, 7], "accur": 25, "acf027e845ff29e9db9558bd0a1166c87d5a77ca07ddb46f609c68661cb228cc": 26, "achiev": 25, "acquir": 20, "actual": 13, "ad": [17, 18, 23, 25, 28], "adam": 1, "adapt": 25, "add": [0, 1, 9, 24, 25, 28], "add_embed": [3, 9], "add_ev": [3, 9], "add_histogram": [3, 9], "add_hparam": 9, "add_imag": [3, 9], "add_plot": [3, 9], "add_scalar": [3, 9], "add_text": [3, 9], "addapt": 25, "addit": [19, 24, 26], "address": 25, "adopt": 25, "advanc": 20, "affect": 28, "after": [10, 12, 13, 16, 19, 25, 26, 27, 28], "ag": 24, "against": 17, "agenc": 23, "ahuja": [20, 25], "aim": 23, "akkaynak": [20, 25], "alex": 25, "alexand": [20, 25], "algorithm": 13, "alia": 25, "alias": [0, 20, 25], "align": 27, "all": [1, 3, 5, 7, 12, 15, 17, 18, 19, 23, 24, 26, 27], "allow": [1, 13, 19, 21, 22, 24, 25, 26, 27], "allow_alpha": 13, "almost": 13, "along": 25, "alpha": 13, "alreadi": [0, 13, 26, 27, 28], "also": [0, 1, 3, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28], "altern": 1, "alwai": [17, 28], "amit": [20, 25], "an": [0, 1, 3, 5, 13, 16, 17, 18, 20, 24, 25, 26], "anchor": 25, "andrea": 25, "angjoo": [20, 25], "ani": [0, 1, 3, 9, 10, 11, 12, 13, 17, 24], "anisotrop": 10, "anoth": [13, 17, 28], "anpei": 25, "anti": [0, 20, 25], "anyth": 0, "apach": [20, 25], "apart": 26, "apchenstu": 25, "api": [23, 26], "app": 20, "appear": [0, 3, 13, 17, 20, 21, 25, 27], "appearance_weight": 3, "append": 18, "apper": 26, "appli": [3, 12, 13, 17, 26], "applic": [21, 22], "applied_preset": [8, 12, 26], "apply_colormap": 13, "apply_transform": 13, "approach": 25, "approxim": 25, "apptain": [3, 4, 16, 17, 25], "apptainerbackend": 4, "apptainerbackendspec": 4, "apt": 24, "ar": [0, 1, 3, 5, 6, 10, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28], "arang": 18, "archiv": [17, 27], "arg": [3, 4, 9, 17], "argument": [0, 1, 12, 17, 18, 19, 21, 22, 24, 26, 27, 28], "arno": 20, "around": [0, 20], "arrai": [5, 8, 13, 16, 18, 26], "articl": 23, "artifact": [8, 19, 25], "arxiv": [0, 20, 23, 25], "ascend": 11, "aselin": 23, "aspect": [1, 17], "assert": [0, 1], "assess": 10, "asset": 25, "assum": [0, 13, 18, 21, 22, 26, 27, 28], "attach": 16, "attempt": 16, "attribut": [6, 25], "austin": [20, 25], "authkei": 4, "author": [0, 1, 17, 20, 23, 25], "auto": [12, 17], "automat": [3, 12, 17, 18, 23, 25, 26, 27, 28], "avail": [0, 1, 7, 16, 23, 24, 25], "averag": [10, 12], "avoid": 24, "axes_label": [3, 9], "b": [5, 10, 23], "back": 25, "backend": [1, 2, 3, 17, 23, 24, 25, 26, 27], "backend_nam": [3, 7, 17], "backends_ord": 3, "background": [12, 13, 20, 25, 27], "background_color": 13, "backward": 1, "bake": 25, "bandwidth": 10, "bar": [7, 13], "barron": [0, 20, 25], "bartel": 3, "base": [1, 3, 4, 6, 7, 9, 10, 11, 12, 13, 17, 19, 20, 21, 23, 25, 27], "base_path": [15, 17], "baselogg": 9, "baseloggerev": 9, "bash": 24, "bash_profil": 24, "bashrc": 24, "batch": 5, "batch_siz": 3, "becaus": 24, "been": 13, "befor": [17, 26, 27], "beforehand": 28, "being": [16, 24], "believ": 18, "below": 13, "ben": [0, 20, 25], "benchmark": [0, 8, 17, 20, 23, 25], "benjamin": 25, "bernhard": 25, "better": [10, 25, 27], "between": [10, 16, 21, 23, 26, 28], "bias": [17, 27], "bicycl": [0, 21, 22, 26], "big": 23, "bilinear": 5, "bin": [0, 24, 28], "binari": 16, "binaryio": 8, "binbin": 25, "bind": [1, 25], "bit": 13, "black": 13, "blend": 13, "blender": [1, 25, 27], "bmild": 20, "bookkeep": 28, "bool": [3, 4, 6, 7, 8, 10, 11, 12, 13], "both": [16, 17, 20], "bottom": [13, 23], "bovik": 10, "boyang": 25, "brandenburg": 20, "brent": [20, 23, 25], "broadcast": 5, "browser": [17, 19, 21, 27], "brualla": 25, "bsd": 25, "buffer": [16, 26], "bug": 25, "build": [3, 9, 12, 15, 16, 18, 26], "build_evaluation_protocol": 7, "build_logg": [12, 26], "build_method_class": [3, 26], "build_script": 4, "built": [16, 19, 24], "bundler_fil": 6, "byte": 8, "c": [1, 5, 10, 16, 20, 28], "cach": 17, "call": [0, 1, 12, 16, 17, 18, 26], "callabl": [3, 10, 12], "camera": [0, 1, 2, 3, 6, 7, 8, 17, 18, 20, 25, 26], "camera_model": [3, 6, 18, 26], "camera_model_from_int": 3, "camera_model_to_int": [3, 18, 26], "cameras1": 5, "cameras2": 5, "camp": 17, "can": [0, 1, 3, 6, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28], "cancel": 13, "cancel_if_request": 13, "cancellationtoken": 13, "cancelledexcept": 13, "capabl": 1, "captur": [6, 20, 25], "care": 26, "carlo": 25, "case": [0, 1, 10, 13, 16, 18, 19, 21, 22, 25, 26, 27, 28], "casual": 25, "cat": 3, "caus": 10, "cayon": 20, "cc": 20, "cell": 26, "center": 5, "center_i": 18, "center_x": 18, "centric": [0, 18, 20, 25, 26, 28], "certainli": 13, "chain": 25, "chair": 6, "chang": [3, 17, 25], "channel": [13, 26], "charset": 23, "che": 25, "check": [13, 23, 24], "checkpoint": [1, 3, 19, 21, 22, 23, 26, 27], "checkpoint_data": 8, "checkpoint_path": 26, "checkpoint_sha256": 26, "chen": 25, "choos": [16, 27], "chosen": 16, "christoph": 25, "chume": 25, "cite": 23, "citi": 25, "ckpt": 1, "ckpt_meta": 1, "cl": 1, "class": [1, 3, 4, 6, 7, 9, 11, 12, 13], "classmethod": [1, 3, 13], "cli": [23, 24, 26, 28], "clone": 25, "close": [4, 26], "closest": 13, "cloud": [25, 27], "co": 26, "code": [0, 1, 17, 20, 26], "coeffici": 13, "coeur": 20, "colab": 26, "collect": [0, 20, 25], "colmap": [0, 17, 18, 20, 22, 28], "colmap_path": 6, "color": [1, 3, 6, 7, 9, 10, 13, 17, 25, 26], "color_backscatt": 25, "color_clean": 25, "color_spac": [13, 26], "colormap": 13, "colorspac": 10, "column": 13, "com": [0, 6, 20, 24, 25], "combin": 25, "comma": [16, 17], "command": [0, 1, 17, 19, 21, 22, 24, 26, 27, 28], "commit": 9, "common": [16, 18], "commonli": 26, "commun": [18, 21, 26], "compact": 25, "compar": [10, 23, 25], "comparison": 1, "compil": 11, "compile_dataset_result": 11, "complic": 1, "compon": [13, 25], "compress": 27, "comput": [1, 7, 10, 12, 20], "compute_cov3d_python": 26, "compute_metr": 7, "concatlogg": 9, "concatloggerev": 9, "concept": 16, "conda": [1, 3, 4, 16, 17, 25, 26, 28], "conda_spec": 4, "condabackend": 4, "condabackendspec": 4, "condit": [20, 25], "config": [12, 26], "config_overrid": [1, 3, 8, 12, 17, 26], "configur": 24, "confirm": 19, "conflict": 24, "conjug": 13, "connect": [16, 21, 26, 27], "connect_work": 4, "connectionclos": 4, "connectionerror": 4, "consid": [13, 18, 21], "consist": [19, 20, 23, 25, 28], "consol": 17, "construct": [18, 27], "contain": [0, 1, 7, 11, 16, 17, 18, 20, 24, 27, 28], "content": [0, 1, 18, 20, 25, 28], "context": [3, 13, 26], "contextlib": 26, "contextmanag": [3, 9], "continu": 16, "contribut": 18, "control": 21, "convent": [13, 18], "converg": 13, "convers": 13, "convert": [13, 18, 26], "convert_image_dtyp": [1, 13], "convert_shs_python": 26, "convolut": 10, "coordin": [5, 18], "coordinate_system": 6, "copi": 1, "copy_": 1, "corner": 23, "correct": [17, 18, 28], "correctli": [1, 5], "correspond": [13, 27], "could": 28, "cover": 1, "cpu": 1, "creat": [13, 17, 19, 23, 26, 27, 28], "csv": 18, "ctk": 24, "cu118": 1, "cuda": [24, 25], "curl": 24, "current": [3, 13, 16, 17, 21, 22, 23, 24, 27], "custom": [0, 17, 23, 25, 26], "cvpr2023": [20, 25], "cx": [3, 6, 25, 26], "cy": [3, 6, 25, 26], "cz": 23, "czech": 23, "d": [24, 25], "d20240917": 26, "dahua": 25, "dai": [20, 25], "dampen": 10, "dan": [20, 25], "daniel": 25, "data": [0, 1, 3, 6, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26, 27], "data_indic": 17, "data_path": 17, "data_rang": 10, "databas": 28, "database_path": 28, "dataset": [1, 2, 3, 7, 8, 11, 12, 15, 19, 21, 22, 23, 25, 26, 27], "dataset_index_select": [6, 18], "dataset_load_featur": 6, "dataset_metadata": [12, 26], "datasetinfo": 11, "datasetloaderspec": 3, "datasetnotfounderror": 3, "datasetspec": 3, "datasetspecmetadata": 3, "datetim": 26, "david": [20, 25], "db": 28, "de": 25, "dearmor": 24, "deb": 24, "deborah": [20, 25], "debug": [17, 26], "decid": [26, 28], "declar": 1, "decompos": 13, "def": [0, 1, 18], "default": [0, 1, 3, 10, 13, 16, 17, 18, 20, 24, 27, 28], "default_appear": 3, "default_cuda_arch": 4, "default_fov": 3, "default_metr": [0, 3, 11], "default_transition_dur": 3, "defaultevaluationprotocol": 7, "defin": [10, 17], "degre": 25, "delaunai": 25, "demo": [22, 23, 25], "demonstr": [1, 26], "demuc": 25, "dens": 25, "densification_interv": 26, "densify_from_it": 26, "densify_grad_threshold": 26, "densify_until_it": 26, "depend": [1, 11, 16, 19, 24, 28], "depth": [3, 13, 17, 25, 26], "depth_mean": 25, "derya": [20, 25], "describ": [1, 24], "descript": [0, 3, 7, 8, 9, 11], "deserialize_nb_info": 8, "design": 25, "detach": 1, "detail": 23, "detect": [0, 18, 27, 28], "determin": [1, 10], "dev6": 26, "develop": [1, 17, 19, 20, 25], "deviat": 10, "dict": [0, 1, 3, 6, 7, 8, 9, 11, 12], "dictionari": [3, 6, 7, 11, 18, 26], "differ": [1, 13, 16, 17, 20, 21, 22, 23, 25, 26, 27], "differenct": 27, "difficult": 23, "difficulti": 23, "dim": 10, "dimens": [13, 17], "dimension": 25, "direct": [5, 25], "directli": [0, 6, 17, 28], "directori": [0, 1, 3, 6, 7, 8, 12, 17, 18, 19, 21, 22, 26, 27, 28], "dirnam": 0, "disabl": 17, "disagn": 25, "discov": 1, "discover": 1, "disk": 25, "displai": 26, "display_nam": [3, 9], "distanc": 25, "distort": [3, 18, 25], "distortion_map": 25, "distortion_paramet": [3, 18], "distractor": 25, "distribut": [24, 25], "dm_pix": 10, "dmpix_ssim": 10, "do": [0, 1, 13, 17, 18, 19, 28], "doc": [15, 17, 19, 25], "docker": [3, 4, 16, 17, 25, 26, 27], "dockerbackend": 4, "dockerbackendspec": 4, "dockerfil": 16, "document": [17, 18, 19, 22, 28], "doe": [0, 10, 13, 21, 24, 25, 28], "doesn": 21, "doi": 13, "domain": 21, "don": 1, "done": [0, 23, 26], "dongbin": 25, "dor": [0, 20, 25], "download": [1, 6, 16, 20, 23, 24, 26, 27], "download_blender_dataset": 6, "download_dataset": [0, 6], "download_dataset_funct": [0, 3], "download_llff_dataset": 6, "download_mipnerf360_dataset": 6, "download_my_dataset": 0, "download_nerfstudio_dataset": 6, "download_phototourism_dataset": 6, "download_seathru_nerf_dataset": 6, "download_tanksandtemples_dataset": 6, "downloaddatasetfunct": 3, "downscal": [26, 28], "downscale_factor": [6, 26, 28], "downscale_loaded_factor": 28, "drettaki": 25, "drive": [0, 6], "drive_link": 6, "driver": 24, "drum": 6, "dtype": [1, 13, 18, 26], "dump": 1, "dx": 13, "dynam": 25, "e": [0, 1, 10, 17, 18, 19, 23, 26, 27, 28], "each": [0, 10, 13, 16, 17, 18, 19, 20, 21, 24, 26, 28], "easi": [1, 23, 24], "easier": 1, "easiest": [1, 16], "easili": [1, 21, 23], "eastbeanzhang": 25, "edu": 20, "educ": 23, "effici": 25, "eigenvalu": 13, "either": [1, 6, 16, 17, 20, 25, 26], "element": [13, 25], "elev": [0, 20], "els": [0, 1, 13, 18], "embed": [3, 7, 9, 17, 20, 25, 26, 27], "embedding_train_index": 3, "enabl": [1, 17, 24, 25, 27], "enable_shared_memori": 21, "encapsul": 16, "encod": 25, "end": [16, 25, 26, 27], "endpoint": 18, "enliang": 25, "ensur": [7, 18, 28], "enter_context": 26, "environ": [0, 1, 16, 17, 20, 24, 28], "environment_nam": [1, 4], "equival": 13, "erf": 23, "error": [3, 10, 13], "especi": 23, "establish": 16, "estim": [10, 17], "etc": [1, 18, 24, 27, 28], "ethan": [20, 25], "eval": [1, 17, 26], "eval_al": 12, "eval_all_it": [12, 17, 26], "eval_batch_s": 3, "eval_few": 12, "eval_few_it": [12, 17, 26], "evalu": [0, 1, 2, 3, 6, 11, 13, 20, 23, 25, 26, 27], "evaluation_protocol": [0, 3, 7, 8, 12, 26], "evaluation_protocol_class": 3, "evaluationprotocol": [3, 6, 7, 12], "evaluationprotocolspec": 3, "evan": 25, "even": 17, "event": [8, 9], "everi": [13, 26], "every_it": [13, 26], "everyth": 27, "evonn": [20, 25], "exactli": 10, "exampl": [0, 1, 13, 18, 21, 26, 27, 28], "except": [3, 4, 13], "exhaustive_match": 28, "exist": [0, 1, 17, 23, 28], "exist_ok": [0, 1], "exit": 26, "exitstack": 26, "expand": 1, "expect": 19, "expected_scal": 13, "expected_scene_scal": 26, "experi": [17, 27], "explicit": [18, 25, 28], "explicitli": 18, "exploit": 25, "explor": 20, "export": [0, 1, 19, 23, 24], "express": 13, "expro": 23, "extend": [25, 26, 27], "extens": [23, 25, 27], "extern": [0, 1, 17, 21, 22, 26, 27], "extra": 7, "extract": [0, 19, 25, 26, 27], "extractal": 0, "f": [0, 1, 6, 18, 26], "face": [20, 28], "factor": [25, 28], "fail": 16, "fallback": 16, "fals": [4, 7, 10, 13, 18, 26], "famou": 20, "far": [3, 18], "fast": [1, 25], "faster": [16, 25, 26], "fastest": 16, "featur": [1, 6, 17, 25, 26], "feature_extractor": 28, "feature_lr": 26, "few": [1, 17, 26], "ficu": 6, "field": [0, 11, 17, 18, 19, 20, 22, 28], "file": [0, 3, 7, 8, 11, 17, 18, 19, 21, 22, 26, 27, 28], "filter": [3, 10], "filter_fn": 10, "final": [0, 1, 12, 17, 25, 26], "find": 22, "finish": [26, 27], "first": [0, 1, 10, 16, 17, 18, 24, 26], "fishey": 20, "fit": 18, "five": [0, 20], "fix": [0, 20, 25], "flatten": 5, "float": [1, 3, 6, 7, 9, 10, 11, 12, 13, 18], "float32": [1, 10, 18, 26], "float64": 10, "fly": 25, "fn": 3, "focal": 18, "focal_i": 18, "focal_x": 18, "folder": [6, 27], "follow": [0, 1, 13, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28], "footprint": 25, "forc": 17, "forg": [24, 28], "form": [17, 18, 20], "format": [0, 5, 6, 17, 22, 27, 28], "format_dur": 11, "format_memori": 11, "formula": 13, "forward": [20, 28], "forward_port": 4, "found": [1, 16, 24], "foundat": 23, "fountain": 20, "four": [0, 20], "fov": 3, "fp": [3, 7, 25], "fr": 25, "frahm": 25, "frame": [0, 3, 7, 20, 27], "framework": [1, 20, 23, 25], "frederik": 25, "free": 25, "fridovich": 25, "from": [0, 1, 3, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28], "from_numpi": 1, "fromarrai": 26, "frozenset": [1, 3, 6, 12, 26], "frustum": [25, 27], "fssl": 24, "full": [0, 1, 17, 23, 27], "full_opencv": [3, 6, 25], "function": [1, 3, 4, 5, 10, 12, 13, 26], "fungraph": 25, "further": 27, "furthermor": [17, 19], "fuse": 17, "fx": [3, 26], "fy": [3, 26], "g": [0, 1, 17, 18, 19, 24, 26, 27, 28], "gao": 25, "garden": [0, 26, 27], "gate": 20, "gaussian": [10, 17, 19, 21, 22, 26, 27], "gaussian_kernel": 10, "ga\u010dr": 23, "geacf155": 26, "geiger": 25, "gener": [3, 11, 16, 18, 19, 21, 25], "generate_output_artifact": [12, 26], "genericcamera": [3, 5], "geometr": 25, "geometri": 25, "georg": 25, "georgio": 25, "get": [0, 3, 5, 11, 24, 26, 27], "get_backend": 4, "get_checkpoint_sha": 8, "get_dataset_info": 11, "get_dataset_loader_spec": 3, "get_dataset_spec": 3, "get_evaluation_protocol_spec": 3, "get_forwarded_port": 4, "get_image_pixel": 5, "get_implemented_backend": 4, "get_info": [1, 3, 17, 26], "get_logg": 12, "get_logger_spec": 3, "get_method_info": [1, 3, 26], "get_method_info_from_spec": 11, "get_method_sha": 8, "get_method_spec": [3, 26], "get_metrics_hash": 8, "get_mount": 4, "get_nam": [3, 6, 7], "get_predictions_sha": 8, "get_presets_and_config_overrid": [12, 26], "get_rai": 5, "get_resources_utilization_info": 12, "get_supported_dataset": 3, "get_supported_dataset_load": 3, "get_supported_evaluation_protocol": 3, "get_supported_logg": 3, "get_supported_method": 3, "get_torch_checkpoint_sha": 8, "get_train_embed": 3, "get_transform_and_scal": 13, "get_worker_configur": 4, "giacomo": 25, "git": 24, "github": [19, 20, 23, 24, 25, 26], "githubusercont": 24, "give": [24, 26], "given": [3, 12, 13], "good": [24, 25], "googl": [0, 6], "googleapi": 20, "gopal": 25, "gpg": 24, "gpgkei": 24, "gpu_memori": [12, 26], "gpu_nam": [12, 26], "grant": 23, "graphic": 25, "graviti": 27, "grayscal": 10, "great": [23, 28], "grid": 25, "ground": [10, 17, 20], "ground_truth_sha": 8, "group": 24, "grow": 25, "gsplat": 17, "gt": 7, "guid": [0, 1, 18, 19, 26, 27, 28], "guidanc": 13, "gz": [17, 27], "h": [1, 5, 10, 18, 26], "ha": [5, 13, 21, 24, 25], "handl": 25, "hao": 25, "haoqian": 25, "happen": 13, "harmon": 13, "has_scal": 13, "hash": [8, 25, 26], "have": [0, 1, 10, 11, 13, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28], "haven": [24, 27], "header": 21, "hedman": [0, 20, 25], "height": [18, 23], "help": [1, 27, 28], "helper": 18, "henzler": 25, "here": [0, 1, 24, 27, 28], "heurist": 25, "high": [25, 26], "higher": 10, "highest": 16, "hint": 26, "histogram": 9, "home": [17, 24], "home_path": 4, "homogen": 13, "hossam": 25, "host": [0, 16, 19], "hostnam": 4, "hotdog": 6, "hou": 25, "how": [0, 1, 21, 22, 26, 28], "howev": [1, 18, 21, 22, 25, 26, 28], "hparam": [1, 3, 9, 26], "hparam_plugin_metr": 9, "hpc": [16, 24], "html": [17, 21], "http": [0, 1, 6, 13, 17, 19, 20, 21, 24, 25, 26], "hu": 25, "huang": 25, "huge": 25, "huggingfac": 26, "human": 0, "hyperparamet": 1, "i": [0, 1, 3, 5, 6, 7, 10, 11, 13, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28], "id": [0, 1, 3, 7, 11, 17, 18, 20, 23, 25, 26, 28], "identifi": [0, 9], "ieee": 10, "ignor": [10, 26], "imag": [0, 1, 3, 4, 5, 7, 9, 10, 12, 13, 16, 17, 18, 20, 21, 23, 25, 28], "image_nam": 18, "image_path": [3, 18, 28], "image_paths_root": [3, 18], "image_s": [1, 3, 5, 18, 26], "image_to_srgb": 13, "images_path": 6, "images_points3d_indic": [3, 6, 25], "imagesetinterpolationsourc": 3, "img": 23, "implement": [0, 1, 10, 11, 16, 17, 18, 23, 24, 25, 27, 28], "implementation_statu": 3, "import": [0, 1, 11, 18, 26], "improv": [17, 21, 25], "includ": [13, 17, 20, 22], "include_doc": [15, 17], "increas": 23, "index": [1, 3, 10, 17], "indic": [6, 12, 13, 17, 18, 26], "individu": [10, 27], "indoor": [0, 20], "industri": 20, "infer": 1, "info": [0, 1, 3, 7, 8, 11, 17, 18, 20, 25, 26, 28], "inform": [0, 1, 18, 22, 26, 28], "infra": 23, "ingp": 25, "initi": [1, 3, 12, 16, 17, 25], "initial_color": 1, "initialis": 26, "inplac": 17, "input": [5, 10, 13, 17, 19, 22, 25, 27], "inria": 25, "insid": [3, 16, 17, 24], "inspect": 27, "inspir": 25, "instal": [1, 4, 16, 19, 23, 27, 28], "install_script": [1, 4], "instanc": [3, 4, 19], "instance_cal": 4, "instance_del": 4, "instant": 17, "instead": [23, 25, 27], "instruct": [1, 24, 28], "int": [1, 3, 4, 6, 7, 9, 10, 12, 13], "int32": [18, 26], "integ": 18, "integr": [1, 25], "interact": [17, 21, 24, 26, 27], "interest": 6, "interfac": [1, 16, 23, 26], "intermedi": [17, 20], "interpol": [3, 5], "interpolate_bilinear": 5, "interrupt": 4, "intrins": [3, 18, 20, 25, 26], "introduc": [0, 25], "invalid": 0, "invert": 13, "invert_transform": 13, "involv": 17, "io": [2, 19, 20, 24, 25, 26], "iqjrbg": 6, "is_cycl": 3, "isack": 25, "isol": [23, 24], "issu": 1, "item": [1, 3], "iter": [1, 3, 6, 7, 8, 13, 17, 26], "its": [1, 19, 21, 22], "itself": 13, "itzhack": 13, "j": 13, "jaesik": 20, "jake": [20, 25], "jan": 25, "jeffrei": 25, "jianbo": 25, "jingyi": 25, "jkulhanek": [25, 26], "johann": 25, "join": [0, 1, 18], "jona": [23, 25, 26], "jonathan": [0, 20, 25], "jonbarron": [0, 20, 25], "journal": 23, "jpg": [0, 18, 28], "json": [0, 1, 7, 11, 17, 18, 19, 26, 27, 28], "julia": 25, "just": [1, 13], "justin": [20, 25], "k": 18, "k1": [10, 18], "k2": [10, 18], "k3": 18, "k4": 18, "k5": 18, "k6": 18, "kalantari": 20, "kamyar": [20, 25], "kanazawa": [20, 25], "kar": [20, 25], "kei": 17, "keil": 25, "keller": 25, "kerbl": 25, "kernel": 10, "kernel_s": 10, "kerr": [20, 25], "keunhong": 25, "keyfram": 3, "keyr": 24, "keyword": 18, "khademi": 20, "kheradmand": 25, "knapitsch": 20, "know": 28, "kochanek": 3, "kochanekbartelsinterpolationsourc": 3, "koltun": 20, "kopana": 25, "korman": [20, 25], "kplane": [17, 25], "kristoffersen": [20, 25], "kulhanek": [23, 25], "kulhanek2024nerfbaselin": 23, "kwang": 25, "kwarg": [3, 4, 6, 9, 18], "l": 24, "lab": 20, "label": [3, 9], "lambda_dssim": 26, "landmark": 20, "larg": [20, 25], "larger": 28, "laser": 20, "last": [12, 13], "later": 27, "latest": [17, 19, 24], "latex": [11, 17], "latter": 16, "lazi": 12, "lead": 25, "learn": 10, "least": [10, 18], "left": [13, 20, 23], "lego": [1, 6], "leimk\u00fchler": 25, "len": [1, 18, 20], "less": 20, "let": [0, 1, 18, 27, 28], "level": [23, 24, 26], "levi": [20, 25], "levy_seathru": [20, 25], "li": [20, 25], "libnvidia": 24, "librari": 25, "licens": [3, 11, 20, 25], "licensespec": [3, 11], "light": 20, "like": [18, 19, 23], "limin": 25, "lin": 25, "linalgerror": 13, "linbo": 25, "line": [24, 28], "linear": 13, "link": [0, 1, 3, 11, 17], "linspac": 18, "linux": [16, 24], "list": [0, 1, 3, 6, 7, 9, 11, 12, 13, 16, 17, 18, 23, 24, 25, 26, 27], "liter": [3, 4, 6, 7, 8, 11, 12, 15], "llff": 25, "load": [1, 3, 6, 11, 17, 18, 26, 28], "load_blender_dataset": 6, "load_bundler_dataset": 6, "load_checkpoint": [3, 26], "load_colmap_dataset": 6, "load_dataset": [6, 26], "load_dataset_funct": [3, 18], "load_featur": [6, 26], "load_llff_dataset": 6, "load_metrics_from_result": 11, "load_my_dataset": 18, "load_nerfonthego_dataset": 6, "load_nerfstudio_dataset": 6, "load_seathru_nerf_dataset": 6, "load_state_dict": 1, "load_trajectori": 8, "loaddatasetfunct": 3, "loaded_checkpoint": [1, 3, 26], "loaded_step": [1, 3, 26], "loader": [0, 3, 23, 28], "local": [3, 13, 17, 21, 24, 25, 26], "localhost": [19, 21], "locat": 0, "log": [2, 17, 19, 26, 27], "log_metr": 9, "logdir": 9, "logger": [3, 9, 12, 17, 26, 27], "logger_class": 3, "loggerev": [3, 9], "loggerspec": 3, "long": [13, 20], "look": 19, "loop": 26, "loss": 1, "low": 25, "lower": 10, "lpip": [7, 10], "lpips_alex": 10, "lpips_vgg": [0, 10], "lr": 1, "lu": 25, "lutz": 25, "m": [18, 20, 21, 24], "maco": [16, 24], "mae": 10, "magnitud": 10, "mai": [0, 13, 16, 22, 28], "main": [1, 13, 16, 21, 24, 25, 26], "make": [0, 1, 13, 26], "make_image_grid": 12, "makedir": [0, 1], "manag": [3, 13, 26], "mani": [1, 18], "manual": 19, "map": [5, 10, 17, 18], "mapper": 28, "marc": 25, "markdown": [11, 17], "markov": 25, "martin": 25, "mask": [18, 25], "match": [1, 10, 17, 25], "materi": 6, "matia": 25, "matplotlib": 13, "matric": [3, 13, 18], "matrix": [13, 18, 26], "matthew": [20, 25], "matthewtancik": [20, 25], "max": 10, "max_message_s": 4, "max_val": 10, "max_width": 12, "maximum": [10, 13], "mcallist": [20, 25], "mcmc": 17, "mean": [10, 16], "meanti": 25, "measur": 10, "media": [20, 25], "memori": [11, 12, 16, 21, 25, 26], "merg": [1, 12], "mesh": [21, 23, 25], "messag": [4, 16], "metadata": [1, 3, 11, 12, 17, 18, 26, 28], "method": [3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 27, 28], "method_cl": 26, "method_class": [1, 3], "method_id": [1, 3, 26], "method_info": 26, "method_link": [11, 17], "method_nam": [17, 26], "method_spec": [4, 12, 26], "methodinfo": [3, 11], "methodspec": [3, 4, 11, 12], "metric": [0, 2, 3, 6, 7, 8, 9, 11, 12, 20, 23, 26, 27], "metricinfo": 11, "metrics_list": 8, "metrics_path": 8, "metricsaccumul": 12, "mic": 6, "michael": 25, "might": 28, "mildenhal": [0, 20, 25], "min": [10, 25], "minghan": 25, "miniforg": 24, "miniforge3": 24, "minim": [23, 26], "ministri": 23, "mip": [0, 17, 27], "mipnerf": 25, "mipnerf360": [0, 17, 20, 21, 22, 25, 26, 27], "mirror": 20, "mit": 25, "mkdir": 28, "mlp": 25, "mobil": 20, "mock_cor": 21, "mode": 8, "model": [0, 1, 3, 8, 10, 17, 21, 22, 25, 26], "model_info": 26, "model_path": 8, "modelinfo": [1, 3], "modif": 25, "modifi": 25, "modul": 13, "modular": [20, 25], "mont": 25, "moo": 25, "more": [1, 13, 18, 22, 25], "most": [16, 17, 23], "mount": [3, 4, 26], "move": 0, "mp4": [17, 27], "mse": 10, "mse_loss": 1, "much": [1, 28], "mueller2022inst": 25, "mulin": 25, "multi": 25, "multipl": [1, 16, 17, 22, 25, 26], "multipli": 13, "multiresolut": 25, "must": [1, 10, 17], "mv": 25, "my": [0, 1, 18, 28], "my_dataload": 18, "my_dataloader_spec": 18, "my_dataset": 0, "my_dataset_spec": 0, "my_method": 1, "my_method_spec": 1, "my_scen": 0, "mymethod": 1, "m\u00fcller": 25, "n": [0, 3, 5, 18, 20, 23], "naama": [20, 25], "name": [0, 3, 4, 6, 11, 17, 18], "navig": [21, 24], "nb": [0, 3, 17, 18, 26, 28], "nb_info": [7, 8, 12, 14], "nb_version": 26, "nbsp": 23, "ncol": 12, "ndarrai": [3, 5, 6, 7, 8, 9, 10, 12, 13], "ndc": 20, "ndim": 13, "near_far": 13, "nearest": [13, 17], "nears_far": [3, 18], "necessari": [1, 16, 26, 28], "need": [0, 1, 3, 18, 19, 24, 26, 27, 28], "neg": 17, "nerf": [0, 8, 17, 23, 26, 27], "nerf_neural_radiance_fields_in_scattering_media_cvpr_2023_pap": [20, 25], "nerfacto": [17, 25], "nerfbaselin": [0, 2, 16, 18, 19, 21, 22, 24, 25, 26, 27, 28], "nerfbaselines_backend": [17, 24], "nerfbaselines_protocol": 16, "nerfbaselines_regist": [0, 1], "nerfevaluationprotocol": 7, "nerfonthego": [17, 25], "nerfstudio": [23, 27], "nerfw": [17, 20, 25], "nerfwevaluationprotocol": 6, "neural": [0, 20, 25], "new": [17, 23, 25, 28], "new_artifact": 17, "new_camera": [3, 18, 26], "new_checkpoint": 17, "new_dataset": [3, 18], "new_nb_info": 8, "next": [1, 24, 27, 28], "ng": [20, 25], "ngp": 17, "nima": 20, "niujinshuchong": 25, "nn": 1, "no_grad": 1, "noah": 20, "nois": [10, 25], "non": 13, "none": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 26], "nor": 0, "normal": [17, 25, 26], "note": [10, 13, 16, 17, 25, 26, 28], "notic": 28, "notifi": 0, "notrequir": [3, 11], "novel": [23, 25], "now": [0, 1, 13, 18, 19, 21, 23, 24, 28], "np": [7, 18, 26], "nsvf": 25, "num": 17, "num_bin": [3, 9], "num_iter": [1, 3, 12, 26], "num_param": 3, "num_pixel": 5, "num_repeat": 17, "number": [1, 13, 17, 26], "numer": [10, 13], "numpi": [1, 16, 18, 26], "numpy_from_base64": 8, "numpy_to_base64": 8, "nvidia": 26, "nvlab": 25, "nx3x3": 13, "o": [0, 1, 17, 18, 24], "object": [0, 1, 4, 9, 12, 13, 17, 18, 20, 25, 26, 28], "obtain": [6, 11, 12, 17, 20, 21, 22, 25, 26], "occlus": 20, "offer": 24, "offici": [1, 23, 25, 26, 27, 28], "offset": 5, "often": 24, "ohk3": 23, "older": 17, "omit": 0, "onc": 1, "one": [0, 3, 16, 17, 28], "onli": [0, 1, 3, 10, 16, 17, 21, 24, 25, 26, 27, 28], "onlin": [0, 23], "opac": [17, 19, 22], "opacity_lr": 26, "opacity_reset_interv": 26, "open": [0, 1, 3, 17, 18, 19, 21, 25, 26], "open_ani": 8, "open_any_directori": 8, "openaccess": [20, 25], "opencv": [1, 3, 6, 18, 25], "opencv_fishey": [3, 6, 25], "opengl": 6, "oper": [13, 24], "oppos": 1, "optim": [1, 3, 17, 20, 25, 26], "optim_st": 1, "optimize_embed": 3, "optimizeembeddingoutput": 3, "option": [0, 1, 3, 6, 7, 12, 17, 18, 19, 26, 27], "orbit": [0, 20], "orchestr": 16, "order": [0, 1, 16, 18, 19, 24, 28], "org": [0, 1, 13, 20, 25], "organ": 23, "orient": 25, "origin": [1, 5, 17, 21, 22, 25, 28], "orthogon": 13, "ortiz": 20, "other": [0, 1, 17, 18, 21, 24, 25, 28], "otherwis": [3, 16, 25, 28], "otto": 25, "our": [1, 19, 21, 22, 27], "out": [6, 23], "outdoor": [0, 20], "output": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 21, 22, 25, 26, 27], "output_artifact": 3, "output_dir": 0, "output_nam": [7, 17], "output_path": [8, 26, 28], "output_typ": 17, "output_type_dtyp": [3, 26], "output_zip": 0, "outputartifact": 3, "outsid": 20, "over": 21, "overlap": 28, "overrid": [1, 12, 17, 26], "overridden": 17, "overwrit": 17, "own": [0, 18, 19, 21, 26, 27], "p": [0, 4, 10, 13, 20, 25], "p1": 18, "p2": 18, "packag": [16, 24, 27], "pad": [12, 13], "pad_pos": 13, "padded_stack": 13, "page": [17, 19, 23, 24], "pair": 10, "pallet": 13, "pan": 25, "paper": [0, 1, 6, 11, 13, 17, 20, 23, 25], "paper_author": [0, 3, 11], "paper_link": [0, 3, 11], "paper_titl": [0, 3, 11], "param": [1, 10], "paramet": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 25, 26, 28], "parametr": 20, "parent": 19, "park": [20, 25], "pass": [1, 3, 13], "patch": [10, 21], "path": [0, 1, 3, 4, 6, 7, 8, 9, 11, 17, 18, 19, 21, 22, 24, 25, 26, 28], "path_is_video": 7, "pbar": 26, "pd": 4, "pdf": [0, 20, 25], "peak": 10, "pearl": [20, 25], "peihao": 25, "peleg": [20, 25], "peng": 25, "per": [10, 25], "percent_dens": 26, "perceptu": 10, "perform": [1, 10, 21, 25, 27], "period": 17, "perman": 1, "persist": 26, "perspect": 18, "peter": [0, 20, 25], "philipp": 25, "phone": 20, "photo": [17, 27], "photo_tour": 20, "phototour": 20, "pickl": 16, "pickle5": 26, "pid": 12, "pil": 26, "pinhol": [1, 3, 5, 6, 25, 26], "pip": [1, 19, 24], "pipelin": 25, "pixel": [5, 10], "pixelwis": 25, "place": [17, 18, 20, 28], "placehold": 17, "plane": [3, 18], "pleas": [0, 23, 24, 27, 28], "ply": [17, 18, 22], "point": [5, 18, 22, 25, 26, 27, 28], "points3d": [0, 18, 28], "points3d_indic": 18, "points3d_rgb": [3, 6, 18, 25], "points3d_xyz": [1, 3, 6, 18, 25, 26], "poisson": 25, "pollefei": 25, "polycam": 20, "pop": 12, "port": [4, 14, 17, 21], "pose": [3, 5, 13, 18, 20, 25, 26, 27], "posit": 23, "position_lr_delay_mult": 26, "position_lr_fin": 26, "position_lr_init": 26, "position_lr_max_step": 26, "possibl": [0, 1, 10], "power": 23, "pp": 10, "pprint": 26, "practic": 26, "pragu": 23, "pratul": [0, 20, 25], "pre": [16, 17], "precis": 10, "precondit": 25, "pred": [1, 7, 10], "predefin": 1, "predict": [1, 3, 6, 7, 8, 10, 17, 19, 25, 26, 27], "predictions_path": 8, "predictions_sha": 8, "prefix": [9, 18], "prepar": [8, 26], "presenc": 0, "present": [17, 19, 24], "preserv": 17, "preset": [1, 3, 12, 17, 26], "pretti": 13, "previou": [26, 27], "primarili": 25, "primit": 25, "print": [26, 27], "prior": 28, "prioriti": 3, "privileg": 24, "problem": 25, "process": [10, 12, 16, 18, 19, 20, 24, 25, 26, 27], "produc": [10, 13, 17], "programmat": 26, "progress": [7, 17], "project": [5, 19, 23, 26], "properli": 21, "properti": [3, 4, 12], "protocol": [3, 7, 16, 17, 20, 23, 26], "protocol_nam": 4, "provid": [1, 3, 12, 16, 17, 21, 23, 25, 26], "psnr": [0, 10, 26], "pth": 1, "public": [0, 1, 23], "publish": 28, "pull": [1, 16, 18], "pure": 13, "purpos": [1, 25], "pwd": [0, 1], "py": [0, 1, 18, 26], "python": [0, 1, 3, 4, 16, 17, 18, 21, 23, 25], "python_path": 4, "python_vers": [1, 4], "pytorch": [1, 7], "q": 13, "q1": 13, "q2": 13, "qian": 20, "qin": 25, "qualiti": [10, 25], "quaternion": 13, "quaternion_conjug": 13, "quaternion_multipli": 13, "quaternion_to_rotation_matrix": 13, "quickstart": 23, "quit": 13, "r": [0, 1, 3, 8, 10, 13, 18], "radianc": [0, 20, 25], "radiu": [0, 20], "rai": [5, 25], "rais": [3, 13], "raise_for_statu": 0, "ramamoorthi": [20, 25], "ran": 28, "rand_idx": 1, "randint": 1, "random": 1, "random_background": 26, "rang": [10, 13, 26], "rank": 25, "rare": 26, "raster": 25, "ratio": [10, 17], "ravi": [20, 25], "raw": 24, "raymarch": 5, "reach": 25, "read": [17, 18], "read_imag": 8, "readabl": 0, "reader": 18, "readi": [16, 28], "real": [25, 26], "realist": 20, "rebain": 25, "rebuild": 17, "receiv": 4, "recht": 25, "recommend": [1, 16, 17, 21, 24, 28], "reconstruct": [20, 22, 25], "reduc": [7, 28], "refer": [25, 27], "refin": 25, "regist": [3, 17, 26], "registri": [1, 16, 17], "reimpl": [17, 25], "reimplement": 23, "reinterpret": 25, "rel": [13, 23, 28], "releas": [16, 19, 23, 24, 28], "reli": [16, 24], "reload": 17, "remot": [3, 17], "remoteprocessrpcbackend": 4, "remov": [13, 25], "ren": [20, 25], "render": [1, 3, 6, 7, 21, 23, 25], "render_all_imag": 7, "render_dataset_metadata": 26, "render_datetim": 26, "render_fram": 7, "render_latex_dataset_results_t": 11, "render_markdown_dataset_results_t": 11, "render_output": 3, "render_vers": 26, "renderopt": 3, "renderoutputtyp": 3, "repeat": 17, "replac": [3, 17], "replace_us": 4, "repo": [25, 26], "report": [1, 25], "repositori": [1, 11, 17], "repres": [13, 20, 25, 26], "represent": 20, "reproduc": [1, 3, 23], "republ": 23, "request": [0, 1, 18, 21], "requir": [0, 1, 3, 4, 17, 21, 22, 23, 24, 25, 26, 27], "required_featur": [1, 3, 26], "rerun": 17, "resav": 1, "rescal": 27, "research": [23, 25], "reshap": 18, "resiz": 28, "resolut": [17, 26, 28], "resolv": 26, "resources_util": 26, "resources_utilization_info": 8, "resourcesutilizationinfo": 12, "respons": 0, "restart": 24, "restor": 1, "result": [1, 2, 7, 13, 19, 23, 26, 28], "results_path": 11, "resum": 17, "return": [1, 3, 5, 6, 7, 10, 11, 12, 13, 18], "return_map": 10, "reus": 10, "revers": 16, "rgb": [18, 26], "ricardo": 25, "richard": 20, "right": 20, "rmtree": 0, "robust": [13, 25], "rodrigo": 20, "root": [0, 28], "rosenbaum": [20, 25], "rot": 13, "rotat": 13, "rotate_spherical_harmon": 13, "rotation_lr": 26, "rotation_matrix_to_quaternion": 13, "round": 17, "row": [13, 18], "ruilong": [20, 25], "run": [0, 1, 13, 16, 17, 21, 22, 23, 25, 26, 27, 28], "run_inside_eval_contain": 7, "run_lpips_vgg": 7, "run_on_host": 4, "run_viser_view": 14, "runner": 17, "runtim": 24, "rwn17": 25, "sacr": 20, "safer": 28, "safeti": 21, "salahi": [20, 25], "sam": 25, "same": [1, 18, 19, 23, 24, 28], "sampl": [1, 18, 25], "sampling_mask": 3, "sampling_mask_path": [3, 18], "sampling_mask_paths_root": [3, 18], "sampling_masks_path": 6, "sara": 25, "sarafridov": 25, "satisfi": 1, "sattler": [23, 25], "save": [1, 3, 12, 17, 26, 27], "save_cameras_npz": 8, "save_depth": 8, "save_evaluation_result": 8, "save_imag": 8, "save_it": [12, 17, 26], "save_output_artifact": 8, "save_predict": 8, "save_trajectori": 8, "scaffold": 17, "scalar": 13, "scale": [13, 20], "scale_coord": 26, "scaling_lr": 26, "scanner": 20, "scatter": [20, 25], "scene": [0, 3, 6, 11, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28], "sceneinfo": 11, "schi": 25, "schoenberger2016mv": 25, "sch\u0151nberger": 25, "scienc": 23, "scratch": 26, "script": [19, 27], "sea": [20, 25], "seamless": 25, "seathru": 17, "second": [10, 11], "section": [23, 26, 27], "sed": 24, "see": [0, 1, 13, 17, 18, 23, 24, 27], "seen": 27, "seiskari": 25, "seitz": 20, "select": [3, 16, 17, 25], "selector": 23, "self": [1, 3], "semi": 20, "send": 4, "sent": 16, "separ": [16, 17], "sequenc": [3, 4, 9, 10, 13, 16, 20], "serial": 16, "serialize_evaluation_result": 8, "serialize_nb_info": 8, "server": [0, 16, 17, 21], "servic": 21, "set": [0, 3, 7, 10, 12, 13, 16, 17, 19, 20, 21, 24, 25, 27, 28], "set_postfix": 26, "setdiff1d": 18, "setup": [16, 21, 23], "sever": [23, 25], "sgs24": 23, "sh": [19, 24], "sh_degre": 26, "shakiba": 25, "shallow": 25, "shape": [5, 13, 18], "share": [16, 21, 24], "shared_memory_nam": 4, "shared_memory_s": 4, "sharedmemoryprotocol": 4, "sharma": 25, "sheikh": 10, "shell": 4, "shenghua": 25, "ship": 6, "shm": [16, 26], "short": 0, "should": [0, 1, 10, 11, 12, 17, 18, 19, 26, 27, 28], "show": [0, 1, 21, 22, 26, 27, 28], "shown": 26, "shutil": 0, "side": 20, "siggraph": 6, "sigma": 10, "sign": 24, "signal": 10, "similar": [1, 5, 10, 19, 24], "similarli": 21, "simon": [20, 25], "simoncelli": 10, "simpl": 1, "simplebackend": 4, "simpler": 13, "simpli": [1, 21, 28], "simplifi": [18, 26], "sinc": 28, "singl": [1, 3, 17, 26, 27], "singular": 16, "size": [3, 10, 13, 18, 21, 26, 28], "skip": [1, 27, 28], "slice": [6, 13], "slow": 24, "slower": [13, 25], "small": [10, 20], "smaller": [21, 28], "snave": 20, "snippet": 26, "so": [0, 1, 19, 23], "solut": 13, "some": [0, 13, 16, 17, 21, 22, 24, 26, 27], "someth": 13, "songyou": 25, "sort": [0, 3], "sourc": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 24, 25], "space": [10, 13, 20, 25], "spars": [0, 25, 28], "spec": [0, 3, 4, 11, 12, 17, 18], "special": [12, 17], "specif": [0, 3, 16, 17, 21, 22, 25, 26, 27], "specifi": [0, 1, 13, 17, 18, 19, 21, 22, 26, 27, 28], "speed": [25, 26], "sphere": 20, "spheric": 13, "spinlock": 16, "spiral": 25, "splat": [17, 21, 22, 26, 27], "split": [6, 12, 17, 18, 20, 26, 27, 28], "sport": 23, "squar": 10, "src": 23, "srgb": [13, 26], "srinivasan": [0, 20, 25], "ssim": [0, 10], "stabl": 24, "stack": [13, 18, 26], "standalon": 21, "standard": [10, 27], "start": [1, 3, 16, 17, 19, 21, 24, 26, 27], "start_dev_serv": 15, "start_host": 4, "stat": 1, "state_dict": 1, "static": [13, 17, 19, 25], "static_cal": 4, "step": [1, 3, 9, 12, 13, 17, 25, 26, 28], "stereo": 25, "steven": 20, "still": 17, "stop": 13, "storag": 20, "store": [17, 19, 21, 22], "str": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15], "strategi": 25, "strongli": [1, 24], "structur": [0, 10, 18, 19, 25], "studio": [20, 25], "style": 23, "su": 25, "subdirectori": [9, 19], "suboptim": 16, "subsequ": 16, "subset": [6, 13, 20], "successfulli": 1, "sudo": 24, "suffici": 16, "sum": 12, "summari": 9, "sun": 25, "super": [1, 25], "suppli": 17, "support": [1, 3, 16, 17, 21, 23, 24, 25, 26, 27, 28], "supported_camera_model": [1, 3, 6, 7, 26], "supported_output": [1, 3, 17, 26], "surfac": 25, "surfsplat": 25, "svg": 23, "switch": 23, "sxm4": 26, "synchron": 16, "synthesi": [20, 23, 25], "synthet": 20, "system": [16, 18, 24, 28], "systemctl": 24, "szeliski": 20, "t": [0, 1, 3, 20, 21, 24, 25, 27], "t2": 20, "tabl": 11, "tag": [3, 9], "tagliasacchi": 25, "take": [0, 12, 16, 18, 19, 20, 22, 26], "tali": [20, 25], "tancik": [20, 25], "tank": 27, "tanksandtempl": 20, "tao": 25, "tar": [17, 27], "target": 10, "tcp": 16, "tcppickleprotocol": 4, "tdataset": 6, "technic": 23, "tee": 24, "tempfil": 0, "templ": 27, "temporari": [0, 26], "temporarili": 0, "temporarydirectori": 0, "tension": 3, "tensor": [1, 5, 8, 10, 13, 25], "tensorboard": [8, 9, 17, 19, 26, 27], "tensorboard_path": 8, "tensorboardlogg": 9, "tensorboardloggerev": 9, "tensorf": 17, "tensori": 25, "term": 13, "termin": 27, "terranc": [20, 25], "test": [0, 6, 18, 20, 26, 27, 28], "test_dataset": [12, 26], "test_indic": [6, 18], "test_list": 28, "tester": 25, "tetra": 17, "tetrahedr": 25, "tetrahedra": 25, "text": [3, 9], "tf": 10, "th": [0, 20, 21], "than": 13, "thank": 23, "thecvf": [20, 25], "thei": [16, 23, 24], "them": [13, 19, 23], "therefor": [0, 1, 23, 28], "thi": [0, 1, 3, 5, 10, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28], "thoma": 25, "though": 13, "thread": [13, 21], "three": [1, 16, 20], "through": [18, 19, 23, 26], "throughout": 13, "thru": [20, 25], "time": [16, 17, 20, 25], "timeout": 4, "titl": [0, 3, 9, 23], "tmp": [0, 26], "tmpc47_m09g": 26, "token": 13, "tool": 24, "toolkit": 24, "top": 23, "torch": 1, "torchmetr": 10, "torchmetrics_ssim": 10, "torchvis": 1, "torsten": [23, 25], "total": [13, 26], "total_train_tim": [8, 26], "tourism": [17, 27], "tourist": 20, "tqdm": 26, "train": [0, 1, 2, 3, 6, 13, 18, 19, 20, 21, 22, 25, 28], "train_dataset": [1, 3, 12, 26], "train_dataset_metadata": 8, "train_embed": 17, "train_iter": [1, 3, 12, 26], "train_list": 28, "trainer": [3, 12], "trajectori": [0, 3, 7, 8, 20], "trajectory_get_camera": 7, "trajectory_get_embed": 7, "trajectoryfram": 3, "trajectoryframeappear": 3, "trajectorykeyfram": 3, "transact": 10, "transfer": 16, "transform": [10, 13, 26], "transient": 25, "transition_dur": 3, "transmit": 26, "treibitz": [20, 25], "trevi": 20, "tri": 1, "true": [0, 1, 6, 7, 8, 10, 21, 26], "truth": [10, 17, 20], "try": [18, 27], "tseng": 25, "ttensor": [3, 5, 13], "ttensor_co": 3, "tupl": [3, 4, 5, 6, 7, 10, 12, 13, 15, 26], "turkulainen": 25, "tutori": [0, 1, 19, 21, 22, 23, 28], "two": [1, 13], "txt": 28, "type": [3, 11, 12, 13, 16, 17, 18, 26, 28], "typeddict": [3, 4, 11, 12], "ubc": 25, "ubuntu": 24, "uint8": [18, 26], "unam": 24, "unbound": [0, 20, 25], "uncertainti": 25, "unconstrain": 25, "under": [18, 20, 25], "understand": 20, "underwat": [20, 25], "undistort": 5, "undistort_camera": 5, "unifi": [16, 23], "uniform": 10, "uniqu": 0, "unit": 13, "univers": 23, "unknown": [4, 18, 25], "unless": 17, "unlik": 21, "unload": 6, "unloadeddataset": [3, 6, 18], "unoffici": 25, "unpad_pos": 13, "unprivileg": 24, "unproject": 5, "unstructur": 25, "unsupport": 26, "unsur": 16, "until": 16, "up": [19, 26], "updat": [1, 12, 13, 17, 24, 25, 26], "upgrad": 16, "upload": [0, 8, 17, 27], "url": [0, 1, 3, 8, 19, 26, 27], "us": [0, 1, 5, 6, 7, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "user": [0, 1, 12, 24, 28], "usermod": 24, "userwarn": 26, "usp": 6, "usr": 24, "usual": [17, 20, 26], "utf": 23, "util": [1, 2, 3, 12, 26], "v": [13, 17], "valid": [8, 12], "valu": [3, 9, 10, 16, 17, 18], "vari": [20, 24], "variabl": [0, 1, 13, 16, 17, 24], "variat": 20, "variou": [1, 18, 20, 24, 28], "vector": 13, "venv": 24, "verbin": [0, 20, 25], "verbos": 17, "veri": 25, "verif": 1, "verifi": 1, "version": [13, 16, 17, 19, 23], "via": 17, "vicki": 25, "video": [17, 20, 27], "view": [0, 17, 20, 21, 23, 25, 27], "viewer": [2, 21, 23], "viewer_initial_pos": 26, "viewer_transform": 26, "viewpoint": 26, "viridi": 13, "virtual": 24, "viser": 23, "visibl": 10, "vision": 25, "visit": [6, 23], "visual": [26, 27], "visualize_depth": 13, "vladlen": 20, "vol": [10, 13], "w": [0, 1, 5, 8, 10, 18, 20, 26], "wa": [0, 10, 17, 20, 23, 25], "wai": [1, 23, 25], "wait_for_work": 4, "walk": 18, "walkthrough": 27, "wandb": [17, 27], "wandblogg": 9, "wandbloggerev": 9, "wang": [10, 20, 25], "want": [0, 18, 19, 21, 24, 27, 28], "warburg": 25, "warn": 26, "warp": 5, "warp_image_between_camera": 5, "washington": 20, "wb": 0, "we": [0, 1, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "web": [2, 20, 22, 23, 25, 27], "weber": [20, 25], "webpag": 0, "websit": [11, 17, 21, 23, 24, 27], "weight": [17, 27], "wein": 25, "weird": 13, "weitao": 25, "weiwei": 25, "well": [0, 1, 25], "were": [0, 12, 20, 28], "wget": 8, "when": [0, 10, 12, 13, 16, 17, 21, 27, 28], "where": [0, 7, 13, 16, 17, 19, 20, 21, 22, 28], "whether": [13, 17], "which": [0, 1, 3, 12, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28], "while": [1, 17, 28], "white": 20, "white_background": 26, "whl": 1, "whole": 0, "wide": 25, "width": 18, "widthxheight": 17, "wild": [17, 20, 25], "window": [10, 24], "with_supported_camera_model": 7, "with_tot": 13, "within": [25, 26], "without": [1, 11, 18, 21], "work": [1, 3, 16, 19, 23, 27], "worker": [16, 21, 26], "world": [3, 5, 18, 25, 26], "would": [13, 18, 23, 28], "wrap": 23, "write": [0, 17, 26], "written": 7, "wsl2": 24, "www": [20, 25], "x": 5, "xiangli": 25, "xml": 23, "xu": 25, "xy": 5, "xyz": 5, "y": [5, 13, 24], "yang": 25, "ye": 25, "year": [20, 23], "yet": 24, "yi": [20, 23, 25], "yield": [1, 3], "you": [0, 1, 6, 13, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28], "your": [0, 1, 16, 18, 19, 21, 23, 24, 26, 27, 28], "youth": 23, "yu": 25, "yuanbo": 25, "z": 10, "zehao": 25, "zero": [13, 18, 26], "zero_grad": 1, "zexiang": 25, "zhang": 25, "zheng": 25, "zhou": 20, "zhu": 25, "zhuoyang": 25, "zihan": 25, "zip": [0, 3, 17, 19, 26, 27], "zip_ref": 0, "zipfil": 0, "zipnerf": [17, 25], "zshrc": 24, "\u00b9": 13, "\u211b": 13}, "titles": ["Adding new datasets", "Adding new methods", "API Reference", "nerfbaselines", "nerfbaselines.backends", "nerfbaselines.cameras", "nerfbaselines.datasets", "nerfbaselines.evaluation", "nerfbaselines.io", "nerfbaselines.logging", "nerfbaselines.metrics", "nerfbaselines.results", "nerfbaselines.training", "nerfbaselines.utils", "nerfbaselines.viewer", "nerfbaselines.web", "Isolated backends", "nerfbaselines", "Custom dataset loader", "Custom web benchmark", "Datasets", "Creating web demos", "Exporting meshes", "NerfBaselines documentation", "Installation", "Methods", "Python tutorial", "Quickstart", "Using custom data"], "titleterms": {"2d": 25, "360": [20, 25], "3dg": 25, "On": 25, "acknowledg": 23, "ad": [0, 1], "advanc": 23, "api": 2, "apper": 21, "appli": 21, "apptain": 24, "artifact": 17, "backend": [4, 16], "benchmark": [19, 27], "blender": [6, 20], "build": [17, 19], "bundler": 6, "camera": [5, 27, 28], "camp": 25, "checkpoint": 17, "citat": 23, "class": 26, "colmap": [6, 25], "commun": 16, "conda": 24, "configur": 21, "content": 23, "creat": [0, 1, 18, 21], "custom": [18, 19, 28], "data": [19, 28], "dataset": [0, 6, 17, 18, 20, 28], "demo": [17, 21], "dev": [17, 19], "docker": 24, "document": 23, "download": [0, 17], "embed": 21, "evalu": [7, 17], "export": [17, 21, 22], "featur": 23, "field": 25, "file": 1, "fix": 17, "fp": 17, "function": [0, 18], "g": 25, "gaussian": 25, "gener": 17, "go": 25, "gpu": 24, "gsplat": 25, "imag": [26, 27], "instal": [17, 24], "instanc": 18, "instant": 25, "introduct": [1, 16, 28], "io": 8, "isol": 16, "k": 25, "launch": 27, "llff": [6, 20], "loader": 18, "local": 19, "log": 9, "main": 23, "mcmc": 25, "measur": 17, "mesh": [17, 22], "metadata": 0, "method": [1, 17, 25, 26], "metric": 10, "mip": [20, 25], "mipnerf360": 6, "model": 27, "modul": 1, "nerf": [20, 25], "nerfbaselin": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 23], "nerfonthego": 6, "nerfstudio": [6, 20, 25], "new": [0, 1, 18], "ngp": 25, "nvidia": 24, "obtain": 28, "opac": 25, "output": 17, "photo": 20, "phototour": 6, "plane": 25, "pose": 28, "pre": 24, "prepar": 19, "prerequisit": 19, "protocol_shm_pickl": 4, "protocol_tcp_pickl": 4, "public": 27, "publish": 0, "python": 26, "quickstart": 27, "refer": [2, 23], "regist": [0, 1, 18], "reimplement": 25, "releas": 1, "render": [17, 26, 27], "requisit": 24, "result": [11, 17, 27], "run": 19, "scaffold": 25, "seathru": [20, 25], "seathru_nerf": 6, "server": 19, "shell": 17, "spec": 1, "splat": 25, "tank": 20, "tanksandtempl": 6, "templ": 20, "tensorf": 25, "test": [1, 17], "tetra": 25, "tourism": 20, "train": [12, 17, 26, 27], "trainer": 26, "trajectori": [17, 27], "tutori": 26, "us": [26, 28], "util": 13, "viewer": [14, 17, 27], "w": 25, "web": [15, 17, 19, 21], "wildgaussian": 25, "write": 18, "zip": 25}})
Search.setIndex({"alltitles": {"2D Gaussian Splatting": [[22, "2d-gaussian-splatting"]], "API Reference": [[2, null]], "Acknowledgements": [[20, "acknowledgements"]], "Adding a spec file": [[1, "adding-a-spec-file"]], "Adding new datasets": [[0, null]], "Adding new methods": [[1, null]], "Advanced": [[20, null]], "Apptainer": [[21, "apptainer"]], "Blender": [[19, "blender"]], "COLMAP": [[22, "colmap"]], "CamP": [[22, "camp"]], "Citation": [[20, "citation"]], "Communication with the backend": [[16, "communication-with-the-backend"]], "Conda": [[21, "conda"]], "Contents": [[20, "contents"]], "Creating a new method module": [[1, "creating-a-new-method-module"]], "Creating new Dataset instance": [[18, "creating-new-dataset-instance"]], "Creating the download function": [[0, "creating-the-download-function"]], "Custom dataset loader": [[18, null]], "Customizing the dataset": [[24, "customizing-the-dataset"]], "Dataset metadata": [[0, "dataset-metadata"]], "Datasets": [[19, null]], "Docker": [[21, "docker"]], "GS-W": [[22, "gaussian-splatting-wild"]], "Gaussian Opacity Fields": [[22, "gaussian-opacity-fields"]], "Gaussian Splatting": [[22, "gaussian-splatting"]], "Installation": [[21, null]], "Instant NGP": [[22, "instant-ngp"]], "Introduction": [[1, "introduction"], [16, "introduction"], [24, "introduction"]], "Isolated backends": [[16, null]], "K-Planes": [[22, "kplanes"]], "LLFF": [[19, "llff"]], "Launching the viewer": [[23, "launching-the-viewer"]], "Main features": [[20, "main-features"]], "Methods": [[22, null]], "Mip-NeRF 360": [[19, "mipnerf360"], [22, "mipnerf360"]], "Mip-Splatting": [[22, "mip-splatting"]], "NeRF": [[22, "nerf"]], "NeRF On-the-go": [[22, "nerfonthego"]], "NeRF-W (reimplementation)": [[22, "nerfw-reimpl"]], "NerfBaselines documentation": [[20, null]], "NerfStudio": [[22, "nerfacto"]], "Nerfstudio": [[19, "nerfstudio"]], "Obtaining camera poses": [[24, "obtaining-camera-poses"]], "Photo Tourism": [[19, "phototourism"]], "Pre-requisites (NVIDIA GPU)": [[21, "pre-requisites-nvidia-gpu"]], "Public benchmark results": [[23, "public-benchmark-results"]], "Publishing the dataset": [[0, "publishing-the-dataset"]], "Quickstart": [[23, null]], "Reference": [[20, null]], "Registering the dataset": [[0, "registering-the-dataset"]], "Registering the loader": [[18, "registering-the-loader"]], "Registering the method with NerfBaselines": [[1, "registering-the-method-with-nerfbaselines"]], "Release the method": [[1, "release-the-method"]], "Rendering a camera trajectory": [[23, "rendering-a-camera-trajectory"]], "Rendering images": [[23, "rendering-images"]], "Scaffold-GS": [[22, "scaffold-gs"]], "SeaThru-NeRF": [[19, "seathru-nerf"], [22, "seathru-nerf"]], "Tanks and Temples": [[19, "tanksandtemples"]], "TensoRF": [[22, "tensorf"]], "Testing the method": [[1, "testing-the-method"]], "Tetra-NeRF": [[22, "tetra-nerf"]], "Training a model": [[23, "training-a-model"]], "Using custom data": [[24, null]], "WildGaussians": [[22, "wild-gaussians"]], "Writing dataset loader function": [[18, "writing-dataset-loader-function"]], "Zip-NeRF": [[22, "zipnerf"]], "build": [[17, "nerfbaselines-web-build"]], "dev": [[17, "nerfbaselines-web-dev"]], "download-dataset": [[17, "nerfbaselines-download-dataset"]], "evaluate": [[17, "nerfbaselines-evaluate"]], "export-demo": [[17, "nerfbaselines-export-demo"]], "fix-checkpoint": [[17, "nerfbaselines-fix-checkpoint"]], "fix-output-artifact": [[17, "nerfbaselines-fix-output-artifact"]], "generate-dataset-results": [[17, "nerfbaselines-generate-dataset-results"]], "gsplat": [[22, "gsplat"]], "install-method": [[17, "nerfbaselines-install-method"]], "nerfbaselines": [[3, null], [17, null]], "nerfbaselines.backends": [[4, null]], "nerfbaselines.backends.protocol_shm_pickle": [[4, "module-nerfbaselines.backends.protocol_shm_pickle"]], "nerfbaselines.backends.protocol_tcp_pickle": [[4, "module-nerfbaselines.backends.protocol_tcp_pickle"]], "nerfbaselines.cameras": [[5, null]], "nerfbaselines.datasets": [[6, null]], "nerfbaselines.datasets.blender": [[6, "module-nerfbaselines.datasets.blender"]], "nerfbaselines.datasets.bundler": [[6, "module-nerfbaselines.datasets.bundler"]], "nerfbaselines.datasets.colmap": [[6, "module-nerfbaselines.datasets.colmap"]], "nerfbaselines.datasets.llff": [[6, "module-nerfbaselines.datasets.llff"]], "nerfbaselines.datasets.mipnerf360": [[6, "module-nerfbaselines.datasets.mipnerf360"]], "nerfbaselines.datasets.nerfonthego": [[6, "module-nerfbaselines.datasets.nerfonthego"]], "nerfbaselines.datasets.nerfstudio": [[6, "module-nerfbaselines.datasets.nerfstudio"]], "nerfbaselines.datasets.phototourism": [[6, "module-nerfbaselines.datasets.phototourism"]], "nerfbaselines.datasets.seathru_nerf": [[6, "module-nerfbaselines.datasets.seathru_nerf"]], "nerfbaselines.datasets.tanksandtemples": [[6, "module-nerfbaselines.datasets.tanksandtemples"]], "nerfbaselines.evaluation": [[7, null]], "nerfbaselines.io": [[8, null]], "nerfbaselines.logging": [[9, null]], "nerfbaselines.metrics": [[10, null]], "nerfbaselines.results": [[11, null]], "nerfbaselines.training": [[12, null]], "nerfbaselines.utils": [[13, null]], "nerfbaselines.viewer": [[14, null]], "nerfbaselines.web": [[15, null]], "render": [[17, "nerfbaselines-render"]], "render-trajectory": [[17, "nerfbaselines-render-trajectory"]], "shell": [[17, "nerfbaselines-shell"]], "test-method": [[17, "nerfbaselines-test-method"]], "train": [[17, "nerfbaselines-train"]], "viewer": [[17, "nerfbaselines-viewer"]], "web": [[17, "nerfbaselines-web"]]}, "docnames": ["adding-new-datasets", "adding-new-methods", "api/modules", "api/nerfbaselines", "api/nerfbaselines.backends", "api/nerfbaselines.cameras", "api/nerfbaselines.datasets", "api/nerfbaselines.evaluation", "api/nerfbaselines.io", "api/nerfbaselines.logging", "api/nerfbaselines.metrics", "api/nerfbaselines.results", "api/nerfbaselines.training", "api/nerfbaselines.utils", "api/nerfbaselines.viewer", "api/nerfbaselines.web", "backends", "cli", "custom-dataset-loader", "datasets", "index", "installation", "methods", "quickstart", "using-custom-data"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["adding-new-datasets.md", "adding-new-methods.md", "api/modules.rst", "api/nerfbaselines.rst", "api/nerfbaselines.backends.rst", "api/nerfbaselines.cameras.rst", "api/nerfbaselines.datasets.rst", "api/nerfbaselines.evaluation.rst", "api/nerfbaselines.io.rst", "api/nerfbaselines.logging.rst", "api/nerfbaselines.metrics.rst", "api/nerfbaselines.results.rst", "api/nerfbaselines.training.rst", "api/nerfbaselines.utils.rst", "api/nerfbaselines.viewer.rst", "api/nerfbaselines.web.rst", "backends.md", "cli.rst", "custom-dataset-loader.md", "datasets.md", "index.md", "installation.md", "methods.md", "quickstart.md", "using-custom-data.md"], "indexentries": {"--backend": [[17, "cmdoption-nerfbaselines-export-demo-backend", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [17, "cmdoption-nerfbaselines-install-method-backend", false], [17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-render-trajectory-backend", false], [17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-test-method-backend", false], [17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-viewer-backend", false]], "--base-path": [[17, "cmdoption-nerfbaselines-web-build-base-path", false]], "--checkpoint": [[17, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false]], "--data": [[17, "cmdoption-nerfbaselines-export-demo-data", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-test-method-data", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-viewer-data", false], [17, "cmdoption-nerfbaselines-web-build-data", false], [17, "cmdoption-nerfbaselines-web-dev-data", false]], "--dataset": [[17, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false]], "--datasets": [[17, "cmdoption-nerfbaselines-web-build-datasets", false], [17, "cmdoption-nerfbaselines-web-dev-datasets", false]], "--disable-output-artifact": [[17, "cmdoption-nerfbaselines-train-disable-output-artifact", false]], "--docs": [[17, "cmdoption-nerfbaselines-web-build-docs", false], [17, "cmdoption-nerfbaselines-web-dev-docs", false]], "--eval-all-iters": [[17, "cmdoption-nerfbaselines-train-eval-all-iters", false]], "--eval-few-iters": [[17, "cmdoption-nerfbaselines-train-eval-few-iters", false]], "--force": [[17, "cmdoption-nerfbaselines-fix-output-artifact-force", false], [17, "cmdoption-nerfbaselines-install-method-force", false]], "--force-output-artifact": [[17, "cmdoption-nerfbaselines-train-force-output-artifact", false]], "--full": [[17, "cmdoption-nerfbaselines-test-method-full", false]], "--inplace": [[17, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false]], "--input": [[17, "cmdoption-nerfbaselines-fix-output-artifact-input", false]], "--logger": [[17, "cmdoption-nerfbaselines-train-logger", false]], "--method": [[17, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [17, "cmdoption-nerfbaselines-install-method-method", false], [17, "cmdoption-nerfbaselines-shell-method", false], [17, "cmdoption-nerfbaselines-test-method-method", false], [17, "cmdoption-nerfbaselines-train-method", false]], "--method-links": [[17, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false]], "--new-checkpoint": [[17, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false]], "--output": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-render-trajectory-output", false], [17, "cmdoption-nerfbaselines-train-output", false], [17, "cmdoption-nerfbaselines-web-build-output", false]], "--output-names": [[17, "cmdoption-nerfbaselines-render-trajectory-output-names", false]], "--output-type": [[17, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false]], "--port": [[17, "cmdoption-nerfbaselines-viewer-port", false]], "--presets": [[17, "cmdoption-nerfbaselines-fix-checkpoint-presets", false], [17, "cmdoption-nerfbaselines-test-method-presets", false], [17, "cmdoption-nerfbaselines-train-presets", false]], "--rebuild-checkpoint": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false]], "--rerun-evaluation": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false]], "--rerun-render": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false]], "--resolution": [[17, "cmdoption-nerfbaselines-render-trajectory-resolution", false]], "--results": [[17, "cmdoption-nerfbaselines-generate-dataset-results-results", false]], "--save-iters": [[17, "cmdoption-nerfbaselines-train-save-iters", false]], "--set": [[17, "cmdoption-nerfbaselines-export-demo-set", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-set", false], [17, "cmdoption-nerfbaselines-test-method-set", false], [17, "cmdoption-nerfbaselines-train-set", false]], "--spec": [[17, "cmdoption-nerfbaselines-install-method-spec", false]], "--split": [[17, "cmdoption-nerfbaselines-render-split", false]], "--steps": [[17, "cmdoption-nerfbaselines-test-method-steps", false]], "--train-embedding": [[17, "cmdoption-nerfbaselines-export-demo-train-embedding", false]], "--trajectory": [[17, "cmdoption-nerfbaselines-render-trajectory-trajectory", false]], "--verbose": [[17, "cmdoption-nerfbaselines-fix-checkpoint-v", false], [17, "cmdoption-nerfbaselines-shell-v", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "-o": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false], [17, "cmdoption-nerfbaselines-export-demo-o", false]], "-v": [[17, "cmdoption-nerfbaselines-fix-checkpoint-v", false], [17, "cmdoption-nerfbaselines-shell-v", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "accumulate_metrics() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.accumulate_metrics", false]], "add_embedding() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_embedding", false]], "add_embedding() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_embedding", false]], "add_embedding() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_embedding", false]], "add_event() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_event", false]], "add_event() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_event", false]], "add_event() (nerfbaselines.logging.concatlogger method)": [[9, "nerfbaselines.logging.ConcatLogger.add_event", false]], "add_event() (nerfbaselines.logging.tensorboardlogger method)": [[9, "nerfbaselines.logging.TensorboardLogger.add_event", false]], "add_event() (nerfbaselines.logging.wandblogger method)": [[9, "nerfbaselines.logging.WandbLogger.add_event", false]], "add_histogram() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_histogram", false]], "add_hparams() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.concatlogger method)": [[9, "nerfbaselines.logging.ConcatLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.tensorboardlogger method)": [[9, "nerfbaselines.logging.TensorboardLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.wandblogger method)": [[9, "nerfbaselines.logging.WandbLogger.add_hparams", false]], "add_image() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_image", false]], "add_image() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_image", false]], "add_image() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_image", false]], "add_plot() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_plot", false]], "add_scalar() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_scalar", false]], "add_scalar() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_scalar", false]], "add_scalar() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_scalar", false]], "add_text() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_text", false]], "add_text() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_text", false]], "add_text() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_text", false]], "appearance (nerfbaselines.trajectorykeyframe attribute)": [[3, "nerfbaselines.TrajectoryKeyframe.appearance", false]], "appearance_weights (nerfbaselines.trajectoryframe attribute)": [[3, "nerfbaselines.TrajectoryFrame.appearance_weights", false]], "appearances (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.appearances", false]], "apply() (nerfbaselines.genericcameras method)": [[3, "nerfbaselines.GenericCameras.apply", false]], "apply_colormap() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.apply_colormap", false]], "apply_transform() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.apply_transform", false]], "apptainer (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.apptainer", false]], "apptainerbackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.ApptainerBackend", false]], "apptainerbackendspec (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.ApptainerBackendSpec", false]], "ascending (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.ascending", false]], "backend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.Backend", false]], "backends_order (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.backends_order", false]], "baselogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.BaseLogger", false]], "baseloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.BaseLoggerEvent", false]], "batch_size (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.batch_size", false]], "build() (in module nerfbaselines.web)": [[15, "nerfbaselines.web.build", false]], "build_evaluation_protocol() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.build_evaluation_protocol", false]], "build_logger() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.build_logger", false]], "build_method_class() (in module nerfbaselines)": [[3, "nerfbaselines.build_method_class", false]], "build_script (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.build_script", false]], "camera_model (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.camera_model", false]], "camera_model_from_int() (in module nerfbaselines)": [[3, "nerfbaselines.camera_model_from_int", false]], "camera_model_to_int() (in module nerfbaselines)": [[3, "nerfbaselines.camera_model_to_int", false]], "camera_models (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.camera_models", false]], "cameras (class in nerfbaselines)": [[3, "nerfbaselines.Cameras", false]], "cameras (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.cameras", false]], "cameras (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.cameras", false]], "cancel() (nerfbaselines.utils.cancellationtoken method)": [[13, "nerfbaselines.utils.CancellationToken.cancel", false]], "cancel_if_requested() (nerfbaselines.utils.cancellationtoken method)": [[13, "nerfbaselines.utils.CancellationToken.cancel_if_requested", false]], "cancellationtoken (class in nerfbaselines.utils)": [[13, "nerfbaselines.utils.CancellationToken", false]], "cancelledexception": [[13, "nerfbaselines.utils.CancelledException", false]], "cat() (nerfbaselines.genericcameras class method)": [[3, "nerfbaselines.GenericCameras.cat", false]], "close() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.close", false]], "close() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.close", false]], "command": [[17, "cmdoption-nerfbaselines-shell-arg-COMMAND", false]], "compile_dataset_results() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.compile_dataset_results", false]], "compute_metrics() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.compute_metrics", false]], "concatlogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.ConcatLogger", false]], "concatloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.ConcatLoggerEvent", false]], "conda (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.conda", false]], "conda_spec (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.conda_spec", false]], "conda_spec (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.conda_spec", false]], "condabackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.CondaBackend", false]], "condabackendspec (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.CondaBackendSpec", false]], "connect_worker() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.connect_worker", false]], "connect_worker() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.connect_worker", false]], "connectionclosed": [[4, "nerfbaselines.backends.protocol_shm_pickle.ConnectionClosed", false]], "convert_image_dtype() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.convert_image_dtype", false]], "dataset": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false]], "dataset (class in nerfbaselines)": [[3, "nerfbaselines.Dataset", false]], "dataset_index_select() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.dataset_index_select", false]], "dataset_load_features() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.dataset_load_features", false]], "datasetinfo (class in nerfbaselines.results)": [[11, "nerfbaselines.results.DatasetInfo", false]], "datasetloaderspec (class in nerfbaselines)": [[3, "nerfbaselines.DatasetLoaderSpec", false]], "datasetnotfounderror": [[3, "nerfbaselines.DatasetNotFoundError", false]], "datasetspec (class in nerfbaselines)": [[3, "nerfbaselines.DatasetSpec", false]], "datasetspecmetadata (class in nerfbaselines)": [[3, "nerfbaselines.DatasetSpecMetadata", false]], "default_appearance (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.default_appearance", false]], "default_appearance (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.default_appearance", false]], "default_cuda_archs (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.default_cuda_archs", false]], "default_cuda_archs (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.default_cuda_archs", false]], "default_fov (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.default_fov", false]], "default_fov (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.default_fov", false]], "default_metric (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.default_metric", false]], "default_metric (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.default_metric", false]], "default_transition_duration (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.default_transition_duration", false]], "default_transition_duration (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.default_transition_duration", false]], "defaultevaluationprotocol (class in nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol", false]], "description (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.description", false]], "description (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.description", false]], "description (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.description", false]], "deserialize_nb_info() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.deserialize_nb_info", false]], "distortion_parameters (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.distortion_parameters", false]], "dmpix_ssim() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.dmpix_ssim", false]], "docker (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.docker", false]], "dockerbackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.DockerBackend", false]], "dockerbackendspec (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.DockerBackendSpec", false]], "download_blender_dataset() (in module nerfbaselines.datasets.blender)": [[6, "nerfbaselines.datasets.blender.download_blender_dataset", false]], "download_dataset() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.download_dataset", false]], "download_dataset_function (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.download_dataset_function", false]], "download_llff_dataset() (in module nerfbaselines.datasets.llff)": [[6, "nerfbaselines.datasets.llff.download_llff_dataset", false]], "download_mipnerf360_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[6, "nerfbaselines.datasets.mipnerf360.download_mipnerf360_dataset", false]], "download_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[6, "nerfbaselines.datasets.nerfstudio.download_nerfstudio_dataset", false]], "download_phototourism_dataset() (in module nerfbaselines.datasets.phototourism)": [[6, "nerfbaselines.datasets.phototourism.download_phototourism_dataset", false]], "download_seathru_nerf_dataset() (in module nerfbaselines.datasets.seathru_nerf)": [[6, "nerfbaselines.datasets.seathru_nerf.download_seathru_nerf_dataset", false]], "download_tanksandtemples_dataset() (in module nerfbaselines.datasets.tanksandtemples)": [[6, "nerfbaselines.datasets.tanksandtemples.download_tanksandtemples_dataset", false]], "downloaddatasetfunction (class in nerfbaselines)": [[3, "nerfbaselines.DownloadDatasetFunction", false]], "embedding (nerfbaselines.optimizeembeddingoutput attribute)": [[3, "nerfbaselines.OptimizeEmbeddingOutput.embedding", false]], "embedding (nerfbaselines.renderoptions attribute)": [[3, "nerfbaselines.RenderOptions.embedding", false]], "embedding (nerfbaselines.trajectoryframeappearance attribute)": [[3, "nerfbaselines.TrajectoryFrameAppearance.embedding", false]], "embedding_train_index (nerfbaselines.trajectoryframeappearance attribute)": [[3, "nerfbaselines.TrajectoryFrameAppearance.embedding_train_index", false]], "environment_name (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.condabackendspec attribute)": [[4, "nerfbaselines.backends.CondaBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.environment_name", false]], "eval_all() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.eval_all", false]], "eval_all() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.eval_all", false]], "eval_batch_size (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.eval_batch_size", false]], "eval_few() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.eval_few", false]], "eval_few() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.eval_few", false]], "evaluate() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.evaluate", false]], "evaluate() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.evaluate", false]], "evaluation_protocol (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.evaluation_protocol", false]], "evaluation_protocol_class (nerfbaselines.evaluationprotocolspec attribute)": [[3, "nerfbaselines.EvaluationProtocolSpec.evaluation_protocol_class", false]], "evaluationprotocol (class in nerfbaselines)": [[3, "nerfbaselines.EvaluationProtocol", false]], "evaluationprotocolspec (class in nerfbaselines)": [[3, "nerfbaselines.EvaluationProtocolSpec", false]], "every_iters() (nerfbaselines.utils.indices class method)": [[13, "nerfbaselines.utils.Indices.every_iters", false]], "format_duration() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.format_duration", false]], "format_memory() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.format_memory", false]], "forward_port() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.forward_port", false]], "fov (nerfbaselines.trajectorykeyframe attribute)": [[3, "nerfbaselines.TrajectoryKeyframe.fov", false]], "fps (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.fps", false]], "frames (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.frames", false]], "genericcameras (class in nerfbaselines)": [[3, "nerfbaselines.GenericCameras", false]], "get_backend() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_backend", false]], "get_checkpoint_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_checkpoint_sha", false]], "get_dataset_info() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.get_dataset_info", false]], "get_dataset_loader_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_dataset_loader_spec", false]], "get_dataset_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_dataset_spec", false]], "get_evaluation_protocol_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_evaluation_protocol_spec", false]], "get_forwarded_ports() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_forwarded_ports", false]], "get_image_pixels() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.get_image_pixels", false]], "get_implemented_backends() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_implemented_backends", false]], "get_info() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.get_info", false]], "get_logger() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.get_logger", false]], "get_logger_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_logger_spec", false]], "get_method_info() (nerfbaselines.method class method)": [[3, "nerfbaselines.Method.get_method_info", false]], "get_method_info_from_spec() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.get_method_info_from_spec", false]], "get_method_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_method_sha", false]], "get_method_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_method_spec", false]], "get_metrics_hash() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_metrics_hash", false]], "get_mounts() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_mounts", false]], "get_name() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.get_name", false]], "get_predictions_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_predictions_sha", false]], "get_presets_and_config_overrides() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.get_presets_and_config_overrides", false]], "get_rays() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.get_rays", false]], "get_resources_utilization_info() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.get_resources_utilization_info", false]], "get_supported_dataset_loaders() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_dataset_loaders", false]], "get_supported_datasets() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_datasets", false]], "get_supported_evaluation_protocols() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_evaluation_protocols", false]], "get_supported_loggers() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_loggers", false]], "get_supported_methods() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_methods", false]], "get_torch_checkpoint_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_torch_checkpoint_sha", false]], "get_train_embedding() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.get_train_embedding", false]], "get_transform_and_scale() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.get_transform_and_scale", false]], "get_worker_configuration() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.get_worker_configuration", false]], "get_worker_configuration() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.get_worker_configuration", false]], "gpu_memory (nerfbaselines.training.resourcesutilizationinfo attribute)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo.gpu_memory", false]], "gpu_name (nerfbaselines.training.resourcesutilizationinfo attribute)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo.gpu_name", false]], "home_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.home_path", false]], "home_path (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.home_path", false]], "hparams (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.hparams", false]], "id (nerfbaselines.datasetloaderspec attribute)": [[3, "nerfbaselines.DatasetLoaderSpec.id", false]], "id (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.id", false]], "id (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.id", false]], "id (nerfbaselines.evaluationprotocolspec attribute)": [[3, "nerfbaselines.EvaluationProtocolSpec.id", false]], "id (nerfbaselines.loggerspec attribute)": [[3, "nerfbaselines.LoggerSpec.id", false]], "id (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.id", false]], "id (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.id", false]], "id (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.id", false]], "id (nerfbaselines.results.sceneinfo attribute)": [[11, "nerfbaselines.results.SceneInfo.id", false]], "image (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.image", false]], "image (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.image", false]], "image_paths (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.image_paths", false]], "image_paths (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.image_paths", false]], "image_paths_root (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.image_paths_root", false]], "image_paths_root (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.image_paths_root", false]], "image_size (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.image_size", false]], "image_sizes (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.image_sizes", false]], "image_to_srgb() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.image_to_srgb", false]], "images (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.images", false]], "images (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.images", false]], "images_points3d_indices (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.images_points3D_indices", false]], "images_points3d_indices (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.images_points3D_indices", false]], "imagesetinterpolationsource (class in nerfbaselines)": [[3, "nerfbaselines.ImageSetInterpolationSource", false]], "implementation_status (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.implementation_status", false]], "indices (class in nerfbaselines.utils)": [[13, "nerfbaselines.utils.Indices", false]], "install() (nerfbaselines.backends.apptainerbackend method)": [[4, "nerfbaselines.backends.ApptainerBackend.install", false]], "install() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.install", false]], "install() (nerfbaselines.backends.condabackend method)": [[4, "nerfbaselines.backends.CondaBackend.install", false]], "install() (nerfbaselines.backends.dockerbackend method)": [[4, "nerfbaselines.backends.DockerBackend.install", false]], "install_script (nerfbaselines.backends.condabackendspec attribute)": [[4, "nerfbaselines.backends.CondaBackendSpec.install_script", false]], "instance_call() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.instance_call", false]], "instance_call() (nerfbaselines.backends.simplebackend method)": [[4, "nerfbaselines.backends.SimpleBackend.instance_call", false]], "instance_del() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.instance_del", false]], "instance_del() (nerfbaselines.backends.simplebackend method)": [[4, "nerfbaselines.backends.SimpleBackend.instance_del", false]], "interpolate_bilinear() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.interpolate_bilinear", false]], "interpolation (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.interpolation", false]], "interpolation (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.interpolation", false]], "intrinsics (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.intrinsics", false]], "intrinsics (nerfbaselines.trajectoryframe attribute)": [[3, "nerfbaselines.TrajectoryFrame.intrinsics", false]], "invert_transform() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.invert_transform", false]], "is_cycle (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.is_cycle", false]], "item() (nerfbaselines.genericcameras method)": [[3, "nerfbaselines.GenericCameras.item", false]], "keyframes (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.keyframes", false]], "keyframes (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.keyframes", false]], "kochanekbartelsinterpolationsource (class in nerfbaselines)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource", false]], "licenses (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.licenses", false]], "licenses (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.licenses", false]], "licensespec (class in nerfbaselines)": [[3, "nerfbaselines.LicenseSpec", false]], "link (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.link", false]], "link (nerfbaselines.outputartifact attribute)": [[3, "nerfbaselines.OutputArtifact.link", false]], "link (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.link", false]], "link (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.link", false]], "load_blender_dataset() (in module nerfbaselines.datasets.blender)": [[6, "nerfbaselines.datasets.blender.load_blender_dataset", false]], "load_bundler_dataset() (in module nerfbaselines.datasets.bundler)": [[6, "nerfbaselines.datasets.bundler.load_bundler_dataset", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.colmap)": [[6, "nerfbaselines.datasets.colmap.load_colmap_dataset", false]], "load_dataset() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.load_dataset", false]], "load_dataset_function (nerfbaselines.datasetloaderspec attribute)": [[3, "nerfbaselines.DatasetLoaderSpec.load_dataset_function", false]], "load_llff_dataset() (in module nerfbaselines.datasets.llff)": [[6, "nerfbaselines.datasets.llff.load_llff_dataset", false]], "load_metrics_from_results() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.load_metrics_from_results", false]], "load_nerfonthego_dataset() (in module nerfbaselines.datasets.nerfonthego)": [[6, "nerfbaselines.datasets.nerfonthego.load_nerfonthego_dataset", false]], "load_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[6, "nerfbaselines.datasets.nerfstudio.load_nerfstudio_dataset", false]], "load_seathru_nerf_dataset() (in module nerfbaselines.datasets.seathru_nerf)": [[6, "nerfbaselines.datasets.seathru_nerf.load_seathru_nerf_dataset", false]], "load_trajectory() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.load_trajectory", false]], "loaddatasetfunction (class in nerfbaselines)": [[3, "nerfbaselines.LoadDatasetFunction", false]], "loaded_checkpoint (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.loaded_checkpoint", false]], "loaded_step (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.loaded_step", false]], "log_metrics() (in module nerfbaselines.logging)": [[9, "nerfbaselines.logging.log_metrics", false]], "logger (class in nerfbaselines)": [[3, "nerfbaselines.Logger", false]], "logger_class (nerfbaselines.loggerspec attribute)": [[3, "nerfbaselines.LoggerSpec.logger_class", false]], "loggerevent (class in nerfbaselines)": [[3, "nerfbaselines.LoggerEvent", false]], "loggerspec (class in nerfbaselines)": [[3, "nerfbaselines.LoggerSpec", false]], "lpips() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.lpips", false]], "lpips_alex() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.lpips_alex", false]], "lpips_vgg() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.lpips_vgg", false]], "mae() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.mae", false]], "make_image_grid() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.make_image_grid", false]], "memory (nerfbaselines.training.resourcesutilizationinfo attribute)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo.memory", false]], "metadata (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.metadata", false]], "metadata (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.metadata", false]], "metadata (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.metadata", false]], "metadata (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.metadata", false]], "metadata (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.metadata", false]], "method (class in nerfbaselines)": [[3, "nerfbaselines.Method", false]], "method_class (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.method_class", false]], "method_id (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.method_id", false]], "method_id (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.method_id", false]], "methodinfo (class in nerfbaselines)": [[3, "nerfbaselines.MethodInfo", false]], "methodspec (class in nerfbaselines)": [[3, "nerfbaselines.MethodSpec", false]], "metricinfo (class in nerfbaselines.results)": [[11, "nerfbaselines.results.MetricInfo", false]], "metrics (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.metrics", false]], "metrics (nerfbaselines.optimizeembeddingoutput attribute)": [[3, "nerfbaselines.OptimizeEmbeddingOutput.metrics", false]], "metrics (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.metrics", false]], "metricsaccumulator (class in nerfbaselines.training)": [[12, "nerfbaselines.training.MetricsAccumulator", false]], "modelinfo (class in nerfbaselines)": [[3, "nerfbaselines.ModelInfo", false]], "module": [[3, "module-nerfbaselines", false], [4, "module-nerfbaselines.backends", false], [4, "module-nerfbaselines.backends.protocol_shm_pickle", false], [4, "module-nerfbaselines.backends.protocol_tcp_pickle", false], [5, "module-nerfbaselines.cameras", false], [6, "module-nerfbaselines.datasets", false], [6, "module-nerfbaselines.datasets.blender", false], [6, "module-nerfbaselines.datasets.bundler", false], [6, "module-nerfbaselines.datasets.colmap", false], [6, "module-nerfbaselines.datasets.llff", false], [6, "module-nerfbaselines.datasets.mipnerf360", false], [6, "module-nerfbaselines.datasets.nerfonthego", false], [6, "module-nerfbaselines.datasets.nerfstudio", false], [6, "module-nerfbaselines.datasets.phototourism", false], [6, "module-nerfbaselines.datasets.seathru_nerf", false], [6, "module-nerfbaselines.datasets.tanksandtemples", false], [7, "module-nerfbaselines.evaluation", false], [8, "module-nerfbaselines.io", false], [9, "module-nerfbaselines.logging", false], [10, "module-nerfbaselines.metrics", false], [11, "module-nerfbaselines.results", false], [12, "module-nerfbaselines.training", false], [13, "module-nerfbaselines.utils", false], [14, "module-nerfbaselines.viewer", false], [15, "module-nerfbaselines.web", false]], "mount() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.mount", false]], "mse() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.mse", false]], "name (nerfbaselines.backends.apptainerbackend attribute)": [[4, "nerfbaselines.backends.ApptainerBackend.name", false]], "name (nerfbaselines.backends.backend attribute)": [[4, "nerfbaselines.backends.Backend.name", false]], "name (nerfbaselines.backends.condabackend attribute)": [[4, "nerfbaselines.backends.CondaBackend.name", false]], "name (nerfbaselines.backends.dockerbackend attribute)": [[4, "nerfbaselines.backends.DockerBackend.name", false]], "name (nerfbaselines.backends.simplebackend attribute)": [[4, "nerfbaselines.backends.SimpleBackend.name", false]], "name (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.name", false]], "name (nerfbaselines.licensespec attribute)": [[3, "nerfbaselines.LicenseSpec.name", false]], "name (nerfbaselines.renderoutputtype attribute)": [[3, "nerfbaselines.RenderOutputType.name", false]], "name (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.name", false]], "name (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.name", false]], "name (nerfbaselines.results.sceneinfo attribute)": [[11, "nerfbaselines.results.SceneInfo.name", false]], "nears_fars (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.nears_fars", false]], "nerfbaselines": [[3, "module-nerfbaselines", false]], "nerfbaselines-download-dataset command line option": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false], [17, "cmdoption-nerfbaselines-download-dataset-o", false]], "nerfbaselines-evaluate command line option": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false], [17, "cmdoption-nerfbaselines-evaluate-o", false]], "nerfbaselines-export-demo command line option": [[17, "cmdoption-nerfbaselines-export-demo-backend", false], [17, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [17, "cmdoption-nerfbaselines-export-demo-data", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-export-demo-set", false], [17, "cmdoption-nerfbaselines-export-demo-train-embedding", false]], "nerfbaselines-fix-checkpoint command line option": [[17, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-presets", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-set", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-v", false]], "nerfbaselines-fix-output-artifact command line option": [[17, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-force", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-input", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false]], "nerfbaselines-generate-dataset-results command line option": [[17, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-results", false]], "nerfbaselines-install-method command line option": [[17, "cmdoption-nerfbaselines-install-method-backend", false], [17, "cmdoption-nerfbaselines-install-method-force", false], [17, "cmdoption-nerfbaselines-install-method-method", false], [17, "cmdoption-nerfbaselines-install-method-spec", false]], "nerfbaselines-render command line option": [[17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-render-split", false]], "nerfbaselines-render-trajectory command line option": [[17, "cmdoption-nerfbaselines-render-trajectory-backend", false], [17, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [17, "cmdoption-nerfbaselines-render-trajectory-output", false], [17, "cmdoption-nerfbaselines-render-trajectory-output-names", false], [17, "cmdoption-nerfbaselines-render-trajectory-resolution", false], [17, "cmdoption-nerfbaselines-render-trajectory-trajectory", false]], "nerfbaselines-shell command line option": [[17, "cmdoption-nerfbaselines-shell-arg-COMMAND", false], [17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-shell-method", false], [17, "cmdoption-nerfbaselines-shell-v", false]], "nerfbaselines-test-method command line option": [[17, "cmdoption-nerfbaselines-test-method-backend", false], [17, "cmdoption-nerfbaselines-test-method-data", false], [17, "cmdoption-nerfbaselines-test-method-full", false], [17, "cmdoption-nerfbaselines-test-method-method", false], [17, "cmdoption-nerfbaselines-test-method-presets", false], [17, "cmdoption-nerfbaselines-test-method-set", false], [17, "cmdoption-nerfbaselines-test-method-steps", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "nerfbaselines-train command line option": [[17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-train-disable-output-artifact", false], [17, "cmdoption-nerfbaselines-train-eval-all-iters", false], [17, "cmdoption-nerfbaselines-train-eval-few-iters", false], [17, "cmdoption-nerfbaselines-train-force-output-artifact", false], [17, "cmdoption-nerfbaselines-train-logger", false], [17, "cmdoption-nerfbaselines-train-method", false], [17, "cmdoption-nerfbaselines-train-output", false], [17, "cmdoption-nerfbaselines-train-presets", false], [17, "cmdoption-nerfbaselines-train-save-iters", false], [17, "cmdoption-nerfbaselines-train-set", false]], "nerfbaselines-viewer command line option": [[17, "cmdoption-nerfbaselines-viewer-backend", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-data", false], [17, "cmdoption-nerfbaselines-viewer-port", false]], "nerfbaselines-web-build command line option": [[17, "cmdoption-nerfbaselines-web-build-base-path", false], [17, "cmdoption-nerfbaselines-web-build-data", false], [17, "cmdoption-nerfbaselines-web-build-datasets", false], [17, "cmdoption-nerfbaselines-web-build-docs", false], [17, "cmdoption-nerfbaselines-web-build-output", false]], "nerfbaselines-web-dev command line option": [[17, "cmdoption-nerfbaselines-web-dev-data", false], [17, "cmdoption-nerfbaselines-web-dev-datasets", false], [17, "cmdoption-nerfbaselines-web-dev-docs", false]], "nerfbaselines.backends": [[4, "module-nerfbaselines.backends", false]], "nerfbaselines.backends.protocol_shm_pickle": [[4, "module-nerfbaselines.backends.protocol_shm_pickle", false]], "nerfbaselines.backends.protocol_tcp_pickle": [[4, "module-nerfbaselines.backends.protocol_tcp_pickle", false]], "nerfbaselines.cameras": [[5, "module-nerfbaselines.cameras", false]], "nerfbaselines.datasets": [[6, "module-nerfbaselines.datasets", false]], "nerfbaselines.datasets.blender": [[6, "module-nerfbaselines.datasets.blender", false]], "nerfbaselines.datasets.bundler": [[6, "module-nerfbaselines.datasets.bundler", false]], "nerfbaselines.datasets.colmap": [[6, "module-nerfbaselines.datasets.colmap", false]], "nerfbaselines.datasets.llff": [[6, "module-nerfbaselines.datasets.llff", false]], "nerfbaselines.datasets.mipnerf360": [[6, "module-nerfbaselines.datasets.mipnerf360", false]], "nerfbaselines.datasets.nerfonthego": [[6, "module-nerfbaselines.datasets.nerfonthego", false]], "nerfbaselines.datasets.nerfstudio": [[6, "module-nerfbaselines.datasets.nerfstudio", false]], "nerfbaselines.datasets.phototourism": [[6, "module-nerfbaselines.datasets.phototourism", false]], "nerfbaselines.datasets.seathru_nerf": [[6, "module-nerfbaselines.datasets.seathru_nerf", false]], "nerfbaselines.datasets.tanksandtemples": [[6, "module-nerfbaselines.datasets.tanksandtemples", false]], "nerfbaselines.evaluation": [[7, "module-nerfbaselines.evaluation", false]], "nerfbaselines.io": [[8, "module-nerfbaselines.io", false]], "nerfbaselines.logging": [[9, "module-nerfbaselines.logging", false]], "nerfbaselines.metrics": [[10, "module-nerfbaselines.metrics", false]], "nerfbaselines.results": [[11, "module-nerfbaselines.results", false]], "nerfbaselines.training": [[12, "module-nerfbaselines.training", false]], "nerfbaselines.utils": [[13, "module-nerfbaselines.utils", false]], "nerfbaselines.viewer": [[14, "module-nerfbaselines.viewer", false]], "nerfbaselines.web": [[15, "module-nerfbaselines.web", false]], "nerfevaluationprotocol (class in nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.NerfEvaluationProtocol", false]], "nerfwevaluationprotocol (class in nerfbaselines.datasets.phototourism)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol", false]], "new_cameras() (in module nerfbaselines)": [[3, "nerfbaselines.new_cameras", false]], "new_dataset() (in module nerfbaselines)": [[3, "nerfbaselines.new_dataset", false]], "new_nb_info() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.new_nb_info", false]], "num_iterations (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.num_iterations", false]], "num_iterations (nerfbaselines.training.trainer property)": [[12, "nerfbaselines.training.Trainer.num_iterations", false]], "numpy_from_base64() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.numpy_from_base64", false]], "numpy_to_base64() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.numpy_to_base64", false]], "open_any() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.open_any", false]], "open_any_directory() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.open_any_directory", false]], "optimize_embedding() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.optimize_embedding", false]], "optimizeembeddingoutput (class in nerfbaselines)": [[3, "nerfbaselines.OptimizeEmbeddingOutput", false]], "output_artifacts (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.output_artifacts", false]], "output_type_dtypes (nerfbaselines.renderoptions attribute)": [[3, "nerfbaselines.RenderOptions.output_type_dtypes", false]], "outputartifact (class in nerfbaselines)": [[3, "nerfbaselines.OutputArtifact", false]], "outputs (nerfbaselines.renderoptions attribute)": [[3, "nerfbaselines.RenderOptions.outputs", false]], "pad_poses() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.pad_poses", false]], "padded_stack() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.padded_stack", false]], "paper_authors (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.paper_authors", false]], "paper_authors (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.paper_authors", false]], "paper_link (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.paper_link", false]], "paper_link (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.paper_link", false]], "paper_title (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.paper_title", false]], "paper_title (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.paper_title", false]], "path_is_video() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.path_is_video", false]], "points3d_rgb (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.points3D_rgb", false]], "points3d_xyz (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.points3D_xyz", false]], "pop() (nerfbaselines.training.metricsaccumulator method)": [[12, "nerfbaselines.training.MetricsAccumulator.pop", false]], "pose (nerfbaselines.trajectoryframe attribute)": [[3, "nerfbaselines.TrajectoryFrame.pose", false]], "pose (nerfbaselines.trajectorykeyframe attribute)": [[3, "nerfbaselines.TrajectoryKeyframe.pose", false]], "poses (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.poses", false]], "predictions": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false]], "presets (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.presets", false]], "project() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.project", false]], "protocol_name (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol property)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.protocol_name", false]], "protocol_name (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol property)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.protocol_name", false]], "psnr() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.psnr", false]], "python_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.python_path", false]], "python_path (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.python_path", false]], "python_version (nerfbaselines.backends.condabackendspec attribute)": [[4, "nerfbaselines.backends.CondaBackendSpec.python_version", false]], "quaternion_conjugate() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.quaternion_conjugate", false]], "quaternion_multiply() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.quaternion_multiply", false]], "quaternion_to_rotation_matrix() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.quaternion_to_rotation_matrix", false]], "read_image() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.read_image", false]], "receive() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.receive", false]], "receive() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.receive", false]], "register() (in module nerfbaselines)": [[3, "nerfbaselines.register", false]], "render() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.render", false]], "render() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.render", false]], "render() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.render", false]], "render() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.render", false]], "render_all_images() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.render_all_images", false]], "render_frames() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.render_frames", false]], "render_markdown_dataset_results_table() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.render_markdown_dataset_results_table", false]], "render_output (nerfbaselines.optimizeembeddingoutput attribute)": [[3, "nerfbaselines.OptimizeEmbeddingOutput.render_output", false]], "renderoptions (class in nerfbaselines)": [[3, "nerfbaselines.RenderOptions", false]], "renderoutputtype (class in nerfbaselines)": [[3, "nerfbaselines.RenderOutputType", false]], "replace() (nerfbaselines.genericcameras method)": [[3, "nerfbaselines.GenericCameras.replace", false]], "replace_user (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.replace_user", false]], "required_features (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.required_features", false]], "required_features (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.required_features", false]], "required_features (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.required_features", false]], "resourcesutilizationinfo (class in nerfbaselines.training)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo", false]], "rotate_spherical_harmonics() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.rotate_spherical_harmonics", false]], "rotation_matrix_to_quaternion() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.rotation_matrix_to_quaternion", false]], "run_inside_eval_container() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.run_inside_eval_container", false]], "run_on_host() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.run_on_host", false]], "run_viser_viewer() (in module nerfbaselines.viewer)": [[14, "nerfbaselines.viewer.run_viser_viewer", false]], "sampling_mask_paths (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.sampling_mask_paths", false]], "sampling_mask_paths (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.sampling_mask_paths", false]], "sampling_mask_paths_root (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.sampling_mask_paths_root", false]], "sampling_mask_paths_root (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.sampling_mask_paths_root", false]], "sampling_masks (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.sampling_masks", false]], "sampling_masks (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.sampling_masks", false]], "save() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.save", false]], "save() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.save", false]], "save_cameras_npz() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_cameras_npz", false]], "save_depth() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_depth", false]], "save_evaluation_results() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_evaluation_results", false]], "save_image() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_image", false]], "save_output_artifact() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_output_artifact", false]], "save_predictions() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_predictions", false]], "save_trajectory() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_trajectory", false]], "sceneinfo (class in nerfbaselines.results)": [[11, "nerfbaselines.results.SceneInfo", false]], "scenes (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.scenes", false]], "scenes (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.scenes", false]], "send() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.send", false]], "send() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.send", false]], "serialize_evaluation_results() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.serialize_evaluation_results", false]], "serialize_nb_info() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.serialize_nb_info", false]], "sharedmemoryprotocol (class in nerfbaselines.backends.protocol_shm_pickle)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol", false]], "shell() (nerfbaselines.backends.apptainerbackend method)": [[4, "nerfbaselines.backends.ApptainerBackend.shell", false]], "shell() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.shell", false]], "shell() (nerfbaselines.backends.condabackend method)": [[4, "nerfbaselines.backends.CondaBackend.shell", false]], "shell() (nerfbaselines.backends.dockerbackend method)": [[4, "nerfbaselines.backends.DockerBackend.shell", false]], "simplebackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.SimpleBackend", false]], "source (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.source", false]], "ssim() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.ssim", false]], "start_dev_server() (in module nerfbaselines.web)": [[15, "nerfbaselines.web.start_dev_server", false]], "start_host() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.start_host", false]], "start_host() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.start_host", false]], "static_call() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.static_call", false]], "static_call() (nerfbaselines.backends.simplebackend method)": [[4, "nerfbaselines.backends.SimpleBackend.static_call", false]], "supported_camera_models (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.supported_camera_models", false]], "supported_camera_models (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.supported_camera_models", false]], "supported_camera_models (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.supported_camera_models", false]], "supported_outputs (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.supported_outputs", false]], "supported_outputs (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.supported_outputs", false]], "supported_outputs (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.supported_outputs", false]], "tcppickleprotocol (class in nerfbaselines.backends.protocol_tcp_pickle)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol", false]], "tension (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.tension", false]], "tensorboardlogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.TensorboardLogger", false]], "tensorboardloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent", false]], "torchmetrics_ssim() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.torchmetrics_ssim", false]], "train() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.train", false]], "train_iteration() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.train_iteration", false]], "train_iteration() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.train_iteration", false]], "trainer (class in nerfbaselines.training)": [[12, "nerfbaselines.training.Trainer", false]], "trajectory (class in nerfbaselines)": [[3, "nerfbaselines.Trajectory", false]], "trajectory_get_cameras() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.trajectory_get_cameras", false]], "trajectory_get_embeddings() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.trajectory_get_embeddings", false]], "trajectoryframe (class in nerfbaselines)": [[3, "nerfbaselines.TrajectoryFrame", false]], "trajectoryframeappearance (class in nerfbaselines)": [[3, "nerfbaselines.TrajectoryFrameAppearance", false]], "trajectorykeyframe (class in nerfbaselines)": [[3, "nerfbaselines.TrajectoryKeyframe", false]], "transition_duration (nerfbaselines.trajectorykeyframe attribute)": [[3, "nerfbaselines.TrajectoryKeyframe.transition_duration", false]], "type (nerfbaselines.imagesetinterpolationsource attribute)": [[3, "nerfbaselines.ImageSetInterpolationSource.type", false]], "type (nerfbaselines.kochanekbartelsinterpolationsource attribute)": [[3, "nerfbaselines.KochanekBartelsInterpolationSource.type", false]], "type (nerfbaselines.renderoutputtype attribute)": [[3, "nerfbaselines.RenderOutputType.type", false]], "undistort_camera() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.undistort_camera", false]], "unloadeddataset (class in nerfbaselines)": [[3, "nerfbaselines.UnloadedDataset", false]], "unpad_poses() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.unpad_poses", false]], "unproject() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.unproject", false]], "update() (nerfbaselines.training.metricsaccumulator method)": [[12, "nerfbaselines.training.MetricsAccumulator.update", false]], "url (nerfbaselines.licensespec attribute)": [[3, "nerfbaselines.LicenseSpec.url", false]], "visualize_depth() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.visualize_depth", false]], "wait_for_worker() (nerfbaselines.backends.protocol_shm_pickle.sharedmemoryprotocol method)": [[4, "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol.wait_for_worker", false]], "wait_for_worker() (nerfbaselines.backends.protocol_tcp_pickle.tcppickleprotocol method)": [[4, "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol.wait_for_worker", false]], "wandblogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.WandbLogger", false]], "wandbloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.WandbLoggerEvent", false]], "warp_image_between_cameras() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.warp_image_between_cameras", false]], "wget() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.wget", false]], "with_supported_camera_models() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.with_supported_camera_models", false]]}, "objects": {"": [[3, 0, 0, "-", "nerfbaselines"]], "nerfbaselines": [[3, 1, 1, "", "Cameras"], [3, 1, 1, "", "Dataset"], [3, 1, 1, "", "DatasetLoaderSpec"], [3, 3, 1, "", "DatasetNotFoundError"], [3, 1, 1, "", "DatasetSpec"], [3, 1, 1, "", "DatasetSpecMetadata"], [3, 1, 1, "", "DownloadDatasetFunction"], [3, 1, 1, "", "EvaluationProtocol"], [3, 1, 1, "", "EvaluationProtocolSpec"], [3, 1, 1, "", "GenericCameras"], [3, 1, 1, "", "ImageSetInterpolationSource"], [3, 1, 1, "", "KochanekBartelsInterpolationSource"], [3, 1, 1, "", "LicenseSpec"], [3, 1, 1, "", "LoadDatasetFunction"], [3, 1, 1, "", "Logger"], [3, 1, 1, "", "LoggerEvent"], [3, 1, 1, "", "LoggerSpec"], [3, 1, 1, "", "Method"], [3, 1, 1, "", "MethodInfo"], [3, 1, 1, "", "MethodSpec"], [3, 1, 1, "", "ModelInfo"], [3, 1, 1, "", "OptimizeEmbeddingOutput"], [3, 1, 1, "", "OutputArtifact"], [3, 1, 1, "", "RenderOptions"], [3, 1, 1, "", "RenderOutputType"], [3, 1, 1, "", "Trajectory"], [3, 1, 1, "", "TrajectoryFrame"], [3, 1, 1, "", "TrajectoryFrameAppearance"], [3, 1, 1, "", "TrajectoryKeyframe"], [3, 1, 1, "", "UnloadedDataset"], [4, 0, 0, "-", "backends"], [3, 6, 1, "", "build_method_class"], [3, 6, 1, "", "camera_model_from_int"], [3, 6, 1, "", "camera_model_to_int"], [5, 0, 0, "-", "cameras"], [6, 0, 0, "-", "datasets"], [7, 0, 0, "-", "evaluation"], [3, 6, 1, "", "get_dataset_loader_spec"], [3, 6, 1, "", "get_dataset_spec"], [3, 6, 1, "", "get_evaluation_protocol_spec"], [3, 6, 1, "", "get_logger_spec"], [3, 6, 1, "", "get_method_spec"], [3, 6, 1, "", "get_supported_dataset_loaders"], [3, 6, 1, "", "get_supported_datasets"], [3, 6, 1, "", "get_supported_evaluation_protocols"], [3, 6, 1, "", "get_supported_loggers"], [3, 6, 1, "", "get_supported_methods"], [8, 0, 0, "-", "io"], [9, 0, 0, "-", "logging"], [10, 0, 0, "-", "metrics"], [3, 6, 1, "", "new_cameras"], [3, 6, 1, "", "new_dataset"], [3, 6, 1, "", "register"], [11, 0, 0, "-", "results"], [12, 0, 0, "-", "training"], [13, 0, 0, "-", "utils"], [14, 0, 0, "-", "viewer"], [15, 0, 0, "-", "web"]], "nerfbaselines-download-dataset": [[17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", "DATASET"]], "nerfbaselines-evaluate": [[17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", "PREDICTIONS"]], "nerfbaselines-export-demo": [[17, 7, 1, "cmdoption-nerfbaselines-export-demo-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-train-embedding", "--train-embedding"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "-o"]], "nerfbaselines-fix-checkpoint": [[17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", "--new-checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-presets", "--presets"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-v", "-v"]], "nerfbaselines-fix-output-artifact": [[17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-force", "--force"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-inplace", "--inplace"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-input", "--input"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", "--rebuild-checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", "--rerun-evaluation"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", "--rerun-render"]], "nerfbaselines-generate-dataset-results": [[17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-dataset", "--dataset"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-method-links", "--method-links"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output-type", "--output-type"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-results", "--results"]], "nerfbaselines-install-method": [[17, 7, 1, "cmdoption-nerfbaselines-install-method-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-install-method-force", "--force"], [17, 7, 1, "cmdoption-nerfbaselines-install-method-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-install-method-spec", "--spec"]], "nerfbaselines-render": [[17, 7, 1, "cmdoption-nerfbaselines-render-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-render-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-render-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-render-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-split", "--split"]], "nerfbaselines-render-trajectory": [[17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output-names", "--output-names"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-resolution", "--resolution"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-trajectory", "--trajectory"]], "nerfbaselines-shell": [[17, 7, 1, "cmdoption-nerfbaselines-shell-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-shell-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-shell-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-shell-v", "-v"], [17, 7, 1, "cmdoption-nerfbaselines-shell-arg-COMMAND", "COMMAND"]], "nerfbaselines-test-method": [[17, 7, 1, "cmdoption-nerfbaselines-test-method-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-full", "--full"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-presets", "--presets"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-steps", "--steps"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-v", "-v"]], "nerfbaselines-train": [[17, 7, 1, "cmdoption-nerfbaselines-train-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-train-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-train-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-train-disable-output-artifact", "--disable-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-all-iters", "--eval-all-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-few-iters", "--eval-few-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-force-output-artifact", "--force-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-logger", "--logger"], [17, 7, 1, "cmdoption-nerfbaselines-train-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-train-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-train-presets", "--presets"], [17, 7, 1, "cmdoption-nerfbaselines-train-save-iters", "--save-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-set", "--set"]], "nerfbaselines-viewer": [[17, 7, 1, "cmdoption-nerfbaselines-viewer-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-port", "--port"]], "nerfbaselines-web-build": [[17, 7, 1, "cmdoption-nerfbaselines-web-build-base-path", "--base-path"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-datasets", "--datasets"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-docs", "--docs"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-output", "--output"]], "nerfbaselines-web-dev": [[17, 7, 1, "cmdoption-nerfbaselines-web-dev-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-web-dev-datasets", "--datasets"], [17, 7, 1, "cmdoption-nerfbaselines-web-dev-docs", "--docs"]], "nerfbaselines.Dataset": [[3, 2, 1, "", "cameras"], [3, 2, 1, "", "image_paths"], [3, 2, 1, "", "image_paths_root"], [3, 2, 1, "", "images"], [3, 2, 1, "", "images_points3D_indices"], [3, 2, 1, "", "metadata"], [3, 2, 1, "", "points3D_rgb"], [3, 2, 1, "", "points3D_xyz"], [3, 2, 1, "", "sampling_mask_paths"], [3, 2, 1, "", "sampling_mask_paths_root"], [3, 2, 1, "", "sampling_masks"]], "nerfbaselines.DatasetLoaderSpec": [[3, 2, 1, "", "id"], [3, 2, 1, "", "load_dataset_function"]], "nerfbaselines.DatasetSpec": [[3, 2, 1, "", "download_dataset_function"], [3, 2, 1, "", "evaluation_protocol"], [3, 2, 1, "", "id"], [3, 2, 1, "", "metadata"]], "nerfbaselines.DatasetSpecMetadata": [[3, 2, 1, "", "default_metric"], [3, 2, 1, "", "description"], [3, 2, 1, "", "id"], [3, 2, 1, "", "licenses"], [3, 2, 1, "", "link"], [3, 2, 1, "", "metrics"], [3, 2, 1, "", "name"], [3, 2, 1, "", "paper_authors"], [3, 2, 1, "", "paper_link"], [3, 2, 1, "", "paper_title"], [3, 2, 1, "", "scenes"]], "nerfbaselines.EvaluationProtocol": [[3, 4, 1, "", "accumulate_metrics"], [3, 4, 1, "", "evaluate"], [3, 4, 1, "", "get_name"], [3, 4, 1, "", "render"]], "nerfbaselines.EvaluationProtocolSpec": [[3, 2, 1, "", "evaluation_protocol_class"], [3, 2, 1, "", "id"]], "nerfbaselines.GenericCameras": [[3, 4, 1, "", "apply"], [3, 5, 1, "", "camera_models"], [3, 4, 1, "", "cat"], [3, 5, 1, "", "distortion_parameters"], [3, 5, 1, "", "image_sizes"], [3, 5, 1, "", "intrinsics"], [3, 4, 1, "", "item"], [3, 5, 1, "", "metadata"], [3, 5, 1, "", "nears_fars"], [3, 5, 1, "", "poses"], [3, 4, 1, "", "replace"]], "nerfbaselines.ImageSetInterpolationSource": [[3, 2, 1, "", "default_appearance"], [3, 2, 1, "", "default_fov"], [3, 2, 1, "", "default_transition_duration"], [3, 2, 1, "", "interpolation"], [3, 2, 1, "", "keyframes"], [3, 2, 1, "", "type"]], "nerfbaselines.KochanekBartelsInterpolationSource": [[3, 2, 1, "", "default_appearance"], [3, 2, 1, "", "default_fov"], [3, 2, 1, "", "default_transition_duration"], [3, 2, 1, "", "interpolation"], [3, 2, 1, "", "is_cycle"], [3, 2, 1, "", "keyframes"], [3, 2, 1, "", "tension"], [3, 2, 1, "", "type"]], "nerfbaselines.LicenseSpec": [[3, 2, 1, "", "name"], [3, 2, 1, "", "url"]], "nerfbaselines.Logger": [[3, 4, 1, "", "add_embedding"], [3, 4, 1, "", "add_event"], [3, 4, 1, "", "add_image"], [3, 4, 1, "", "add_scalar"], [3, 4, 1, "", "add_text"]], "nerfbaselines.LoggerEvent": [[3, 4, 1, "", "add_embedding"], [3, 4, 1, "", "add_histogram"], [3, 4, 1, "", "add_image"], [3, 4, 1, "", "add_plot"], [3, 4, 1, "", "add_scalar"], [3, 4, 1, "", "add_text"]], "nerfbaselines.LoggerSpec": [[3, 2, 1, "", "id"], [3, 2, 1, "", "logger_class"]], "nerfbaselines.Method": [[3, 4, 1, "", "get_info"], [3, 4, 1, "", "get_method_info"], [3, 4, 1, "", "get_train_embedding"], [3, 4, 1, "", "optimize_embedding"], [3, 4, 1, "", "render"], [3, 4, 1, "", "save"], [3, 4, 1, "", "train_iteration"]], "nerfbaselines.MethodInfo": [[3, 2, 1, "", "method_id"], [3, 2, 1, "", "required_features"], [3, 2, 1, "", "supported_camera_models"], [3, 2, 1, "", "supported_outputs"]], "nerfbaselines.MethodSpec": [[3, 2, 1, "", "apptainer"], [3, 2, 1, "", "backends_order"], [3, 2, 1, "", "conda"], [3, 2, 1, "", "docker"], [3, 2, 1, "", "id"], [3, 2, 1, "", "implementation_status"], [3, 2, 1, "", "metadata"], [3, 2, 1, "", "method_class"], [3, 2, 1, "", "output_artifacts"], [3, 2, 1, "", "presets"], [3, 2, 1, "", "required_features"], [3, 2, 1, "", "supported_camera_models"], [3, 2, 1, "", "supported_outputs"]], "nerfbaselines.ModelInfo": [[3, 2, 1, "", "batch_size"], [3, 2, 1, "", "eval_batch_size"], [3, 2, 1, "", "hparams"], [3, 2, 1, "", "loaded_checkpoint"], [3, 2, 1, "", "loaded_step"], [3, 2, 1, "", "method_id"], [3, 2, 1, "", "num_iterations"], [3, 2, 1, "", "required_features"], [3, 2, 1, "", "supported_camera_models"], [3, 2, 1, "", "supported_outputs"]], "nerfbaselines.OptimizeEmbeddingOutput": [[3, 2, 1, "", "embedding"], [3, 2, 1, "", "metrics"], [3, 2, 1, "", "render_output"]], "nerfbaselines.OutputArtifact": [[3, 2, 1, "", "link"]], "nerfbaselines.RenderOptions": [[3, 2, 1, "", "embedding"], [3, 2, 1, "", "output_type_dtypes"], [3, 2, 1, "", "outputs"]], "nerfbaselines.RenderOutputType": [[3, 2, 1, "", "name"], [3, 2, 1, "", "type"]], "nerfbaselines.Trajectory": [[3, 2, 1, "", "appearances"], [3, 2, 1, "", "camera_model"], [3, 2, 1, "", "fps"], [3, 2, 1, "", "frames"], [3, 2, 1, "", "image_size"], [3, 2, 1, "", "source"]], "nerfbaselines.TrajectoryFrame": [[3, 2, 1, "", "appearance_weights"], [3, 2, 1, "", "intrinsics"], [3, 2, 1, "", "pose"]], "nerfbaselines.TrajectoryFrameAppearance": [[3, 2, 1, "", "embedding"], [3, 2, 1, "", "embedding_train_index"]], "nerfbaselines.TrajectoryKeyframe": [[3, 2, 1, "", "appearance"], [3, 2, 1, "", "fov"], [3, 2, 1, "", "pose"], [3, 2, 1, "", "transition_duration"]], "nerfbaselines.UnloadedDataset": [[3, 2, 1, "", "cameras"], [3, 2, 1, "", "image_paths"], [3, 2, 1, "", "image_paths_root"], [3, 2, 1, "", "images"], [3, 2, 1, "", "images_points3D_indices"], [3, 2, 1, "", "metadata"], [3, 2, 1, "", "points3D_rgb"], [3, 2, 1, "", "points3D_xyz"], [3, 2, 1, "", "sampling_mask_paths"], [3, 2, 1, "", "sampling_mask_paths_root"], [3, 2, 1, "", "sampling_masks"]], "nerfbaselines.backends": [[4, 1, 1, "", "ApptainerBackend"], [4, 1, 1, "", "ApptainerBackendSpec"], [4, 1, 1, "", "Backend"], [4, 1, 1, "", "CondaBackend"], [4, 1, 1, "", "CondaBackendSpec"], [4, 1, 1, "", "DockerBackend"], [4, 1, 1, "", "DockerBackendSpec"], [4, 1, 1, "", "SimpleBackend"], [4, 6, 1, "", "forward_port"], [4, 6, 1, "", "get_backend"], [4, 6, 1, "", "get_forwarded_ports"], [4, 6, 1, "", "get_implemented_backends"], [4, 6, 1, "", "get_mounts"], [4, 6, 1, "", "mount"], [4, 0, 0, "-", "protocol_shm_pickle"], [4, 0, 0, "-", "protocol_tcp_pickle"], [4, 6, 1, "", "run_on_host"]], "nerfbaselines.backends.ApptainerBackend": [[4, 4, 1, "", "install"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"]], "nerfbaselines.backends.ApptainerBackendSpec": [[4, 2, 1, "", "conda_spec"], [4, 2, 1, "", "default_cuda_archs"], [4, 2, 1, "", "environment_name"], [4, 2, 1, "", "home_path"], [4, 2, 1, "", "image"], [4, 2, 1, "", "python_path"]], "nerfbaselines.backends.Backend": [[4, 4, 1, "", "install"], [4, 4, 1, "", "instance_call"], [4, 4, 1, "", "instance_del"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"], [4, 4, 1, "", "static_call"]], "nerfbaselines.backends.CondaBackend": [[4, 4, 1, "", "install"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"]], "nerfbaselines.backends.CondaBackendSpec": [[4, 2, 1, "", "environment_name"], [4, 2, 1, "", "install_script"], [4, 2, 1, "", "python_version"]], "nerfbaselines.backends.DockerBackend": [[4, 4, 1, "", "install"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"]], "nerfbaselines.backends.DockerBackendSpec": [[4, 2, 1, "", "build_script"], [4, 2, 1, "", "conda_spec"], [4, 2, 1, "", "default_cuda_archs"], [4, 2, 1, "", "environment_name"], [4, 2, 1, "", "home_path"], [4, 2, 1, "", "image"], [4, 2, 1, "", "python_path"], [4, 2, 1, "", "replace_user"]], "nerfbaselines.backends.SimpleBackend": [[4, 4, 1, "", "instance_call"], [4, 4, 1, "", "instance_del"], [4, 2, 1, "", "name"], [4, 4, 1, "", "static_call"]], "nerfbaselines.backends.protocol_shm_pickle": [[4, 3, 1, "", "ConnectionClosed"], [4, 1, 1, "", "SharedMemoryProtocol"]], "nerfbaselines.backends.protocol_shm_pickle.SharedMemoryProtocol": [[4, 4, 1, "", "close"], [4, 4, 1, "", "connect_worker"], [4, 4, 1, "", "get_worker_configuration"], [4, 5, 1, "", "protocol_name"], [4, 4, 1, "", "receive"], [4, 4, 1, "", "send"], [4, 4, 1, "", "start_host"], [4, 4, 1, "", "wait_for_worker"]], "nerfbaselines.backends.protocol_tcp_pickle": [[4, 1, 1, "", "TCPPickleProtocol"]], "nerfbaselines.backends.protocol_tcp_pickle.TCPPickleProtocol": [[4, 4, 1, "", "close"], [4, 4, 1, "", "connect_worker"], [4, 4, 1, "", "get_worker_configuration"], [4, 5, 1, "", "protocol_name"], [4, 4, 1, "", "receive"], [4, 4, 1, "", "send"], [4, 4, 1, "", "start_host"], [4, 4, 1, "", "wait_for_worker"]], "nerfbaselines.cameras": [[5, 6, 1, "", "get_image_pixels"], [5, 6, 1, "", "get_rays"], [5, 6, 1, "", "interpolate_bilinear"], [5, 6, 1, "", "project"], [5, 6, 1, "", "undistort_camera"], [5, 6, 1, "", "unproject"], [5, 6, 1, "", "warp_image_between_cameras"]], "nerfbaselines.datasets": [[6, 0, 0, "-", "blender"], [6, 0, 0, "-", "bundler"], [6, 0, 0, "-", "colmap"], [6, 6, 1, "", "dataset_index_select"], [6, 6, 1, "", "dataset_load_features"], [6, 6, 1, "", "download_dataset"], [6, 0, 0, "-", "llff"], [6, 6, 1, "", "load_dataset"], [6, 0, 0, "-", "mipnerf360"], [6, 0, 0, "-", "nerfonthego"], [6, 0, 0, "-", "nerfstudio"], [6, 0, 0, "-", "phototourism"], [6, 0, 0, "-", "seathru_nerf"], [6, 0, 0, "-", "tanksandtemples"]], "nerfbaselines.datasets.blender": [[6, 6, 1, "", "download_blender_dataset"], [6, 6, 1, "", "load_blender_dataset"]], "nerfbaselines.datasets.bundler": [[6, 6, 1, "", "load_bundler_dataset"]], "nerfbaselines.datasets.colmap": [[6, 6, 1, "", "load_colmap_dataset"]], "nerfbaselines.datasets.llff": [[6, 6, 1, "", "download_llff_dataset"], [6, 6, 1, "", "load_llff_dataset"]], "nerfbaselines.datasets.mipnerf360": [[6, 6, 1, "", "download_mipnerf360_dataset"]], "nerfbaselines.datasets.nerfonthego": [[6, 6, 1, "", "load_nerfonthego_dataset"]], "nerfbaselines.datasets.nerfstudio": [[6, 6, 1, "", "download_nerfstudio_dataset"], [6, 6, 1, "", "load_nerfstudio_dataset"]], "nerfbaselines.datasets.phototourism": [[6, 1, 1, "", "NerfWEvaluationProtocol"], [6, 6, 1, "", "download_phototourism_dataset"]], "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol": [[6, 4, 1, "", "accumulate_metrics"], [6, 4, 1, "", "evaluate"], [6, 4, 1, "", "get_name"], [6, 4, 1, "", "render"]], "nerfbaselines.datasets.seathru_nerf": [[6, 6, 1, "", "download_seathru_nerf_dataset"], [6, 6, 1, "", "load_seathru_nerf_dataset"]], "nerfbaselines.datasets.tanksandtemples": [[6, 6, 1, "", "download_tanksandtemples_dataset"]], "nerfbaselines.evaluation": [[7, 1, 1, "", "DefaultEvaluationProtocol"], [7, 1, 1, "", "NerfEvaluationProtocol"], [7, 6, 1, "", "build_evaluation_protocol"], [7, 6, 1, "", "compute_metrics"], [7, 6, 1, "", "evaluate"], [7, 6, 1, "", "path_is_video"], [7, 6, 1, "", "render_all_images"], [7, 6, 1, "", "render_frames"], [7, 6, 1, "", "run_inside_eval_container"], [7, 6, 1, "", "trajectory_get_cameras"], [7, 6, 1, "", "trajectory_get_embeddings"], [7, 6, 1, "", "with_supported_camera_models"]], "nerfbaselines.evaluation.DefaultEvaluationProtocol": [[7, 4, 1, "", "accumulate_metrics"], [7, 4, 1, "", "evaluate"], [7, 4, 1, "", "get_name"], [7, 4, 1, "", "render"]], "nerfbaselines.io": [[8, 6, 1, "", "deserialize_nb_info"], [8, 6, 1, "", "get_checkpoint_sha"], [8, 6, 1, "", "get_method_sha"], [8, 6, 1, "", "get_metrics_hash"], [8, 6, 1, "", "get_predictions_sha"], [8, 6, 1, "", "get_torch_checkpoint_sha"], [8, 6, 1, "", "load_trajectory"], [8, 6, 1, "", "new_nb_info"], [8, 6, 1, "", "numpy_from_base64"], [8, 6, 1, "", "numpy_to_base64"], [8, 6, 1, "", "open_any"], [8, 6, 1, "", "open_any_directory"], [8, 6, 1, "", "read_image"], [8, 6, 1, "", "save_cameras_npz"], [8, 6, 1, "", "save_depth"], [8, 6, 1, "", "save_evaluation_results"], [8, 6, 1, "", "save_image"], [8, 6, 1, "", "save_output_artifact"], [8, 6, 1, "", "save_predictions"], [8, 6, 1, "", "save_trajectory"], [8, 6, 1, "", "serialize_evaluation_results"], [8, 6, 1, "", "serialize_nb_info"], [8, 6, 1, "", "wget"]], "nerfbaselines.logging": [[9, 1, 1, "", "BaseLogger"], [9, 1, 1, "", "BaseLoggerEvent"], [9, 1, 1, "", "ConcatLogger"], [9, 1, 1, "", "ConcatLoggerEvent"], [9, 1, 1, "", "TensorboardLogger"], [9, 1, 1, "", "TensorboardLoggerEvent"], [9, 1, 1, "", "WandbLogger"], [9, 1, 1, "", "WandbLoggerEvent"], [9, 6, 1, "", "log_metrics"]], "nerfbaselines.logging.BaseLogger": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.logging.BaseLoggerEvent": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_plot"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.logging.ConcatLogger": [[9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLogger": [[9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLoggerEvent": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_histogram"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.logging.WandbLogger": [[9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.WandbLoggerEvent": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_histogram"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_plot"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.metrics": [[10, 6, 1, "", "dmpix_ssim"], [10, 6, 1, "", "lpips"], [10, 6, 1, "", "lpips_alex"], [10, 6, 1, "", "lpips_vgg"], [10, 6, 1, "", "mae"], [10, 6, 1, "", "mse"], [10, 6, 1, "", "psnr"], [10, 6, 1, "", "ssim"], [10, 6, 1, "", "torchmetrics_ssim"]], "nerfbaselines.results": [[11, 1, 1, "", "DatasetInfo"], [11, 1, 1, "", "MetricInfo"], [11, 1, 1, "", "SceneInfo"], [11, 6, 1, "", "compile_dataset_results"], [11, 6, 1, "", "format_duration"], [11, 6, 1, "", "format_memory"], [11, 6, 1, "", "get_dataset_info"], [11, 6, 1, "", "get_method_info_from_spec"], [11, 6, 1, "", "load_metrics_from_results"], [11, 6, 1, "", "render_markdown_dataset_results_table"]], "nerfbaselines.results.DatasetInfo": [[11, 2, 1, "", "default_metric"], [11, 2, 1, "", "description"], [11, 2, 1, "", "id"], [11, 2, 1, "", "licenses"], [11, 2, 1, "", "link"], [11, 2, 1, "", "metrics"], [11, 2, 1, "", "name"], [11, 2, 1, "", "paper_authors"], [11, 2, 1, "", "paper_link"], [11, 2, 1, "", "paper_title"], [11, 2, 1, "", "scenes"]], "nerfbaselines.results.MetricInfo": [[11, 2, 1, "", "ascending"], [11, 2, 1, "", "description"], [11, 2, 1, "", "id"], [11, 2, 1, "", "link"], [11, 2, 1, "", "name"]], "nerfbaselines.results.SceneInfo": [[11, 2, 1, "", "id"], [11, 2, 1, "", "name"]], "nerfbaselines.training": [[12, 1, 1, "", "MetricsAccumulator"], [12, 1, 1, "", "ResourcesUtilizationInfo"], [12, 1, 1, "", "Trainer"], [12, 6, 1, "", "build_logger"], [12, 6, 1, "", "eval_all"], [12, 6, 1, "", "eval_few"], [12, 6, 1, "", "get_presets_and_config_overrides"], [12, 6, 1, "", "get_resources_utilization_info"], [12, 6, 1, "", "make_image_grid"]], "nerfbaselines.training.MetricsAccumulator": [[12, 4, 1, "", "pop"], [12, 4, 1, "", "update"]], "nerfbaselines.training.ResourcesUtilizationInfo": [[12, 2, 1, "", "gpu_memory"], [12, 2, 1, "", "gpu_name"], [12, 2, 1, "", "memory"]], "nerfbaselines.training.Trainer": [[12, 4, 1, "", "eval_all"], [12, 4, 1, "", "eval_few"], [12, 4, 1, "", "get_logger"], [12, 5, 1, "", "num_iterations"], [12, 4, 1, "", "save"], [12, 4, 1, "", "train"], [12, 4, 1, "", "train_iteration"]], "nerfbaselines.utils": [[13, 1, 1, "", "CancellationToken"], [13, 3, 1, "", "CancelledException"], [13, 1, 1, "", "Indices"], [13, 6, 1, "", "apply_colormap"], [13, 6, 1, "", "apply_transform"], [13, 6, 1, "", "convert_image_dtype"], [13, 6, 1, "", "get_transform_and_scale"], [13, 6, 1, "", "image_to_srgb"], [13, 6, 1, "", "invert_transform"], [13, 6, 1, "", "pad_poses"], [13, 6, 1, "", "padded_stack"], [13, 6, 1, "", "quaternion_conjugate"], [13, 6, 1, "", "quaternion_multiply"], [13, 6, 1, "", "quaternion_to_rotation_matrix"], [13, 6, 1, "", "rotate_spherical_harmonics"], [13, 6, 1, "", "rotation_matrix_to_quaternion"], [13, 6, 1, "", "unpad_poses"], [13, 6, 1, "", "visualize_depth"]], "nerfbaselines.utils.CancellationToken": [[13, 4, 1, "", "cancel"], [13, 4, 1, "", "cancel_if_requested"]], "nerfbaselines.utils.Indices": [[13, 4, 1, "", "every_iters"]], "nerfbaselines.viewer": [[14, 6, 1, "", "run_viser_viewer"]], "nerfbaselines.web": [[15, 6, 1, "", "build"], [15, 6, 1, "", "start_dev_server"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:method", "5": "py:property", "6": "py:function", "7": "std:cmdoption"}, "terms": {"": [0, 1, 10, 12, 13, 17, 18, 21, 23, 24], "0": [0, 1, 10, 13, 18, 19, 20, 22, 24], "00109": 22, "0031308": 13, "00889": 19, "01": 10, "03": 10, "04": 21, "04264": [19, 22], "055": 13, "06706": 22, "06765": 22, "07973x": 20, "08447": 22, "08934": [19, 22], "095": 20, "09517": 22, "09987": 22, "1": [0, 1, 10, 12, 13, 18, 22, 24], "10": [13, 18, 19], "100": 1, "10000": 12, "10241": 22, "10772": 22, "1085": 13, "10902": 22, "11": [1, 10], "12": [13, 22], "12077": [0, 19, 22], "12em": 20, "13": [10, 20], "134217728": 4, "15704": 22, "16493": 22, "17": 1, "17888": 22, "18715": 22, "1905": 19, "1920": 12, "19tv6kdvgcmg3cgz1bniunbbmd": 6, "1e": 1, "1em": 20, "2": [1, 3, 12, 13, 18, 19, 22], "200": 22, "2000": 12, "2003": [19, 22], "2004": 10, "2023": 6, "2024": 20, "2111": [0, 19, 22], "22": 21, "2203": 22, "23": [13, 20], "2301": 22, "2302": [19, 22], "2304": 22, "2308": 22, "2311": 22, "2312": 22, "2403": 22, "2404": 22, "2405": 22, "2407": 22, "2409": 22, "2514": 13, "2d": 17, "2dg": 22, "2t": 20, "3": [1, 13, 16, 18, 22], "30000": 23, "360": [0, 23], "3d": [18, 19, 22, 23], "3d_gaussian_splatting_low": 22, "3dg": [20, 22], "3x3": 13, "3x4": [13, 18], "4": [6, 10, 13, 18, 22], "4654": 13, "4x4": 13, "5": 10, "6": [13, 22], "600": 10, "6006": 14, "612": 10, "8": [16, 19, 20], "90254": 20, "92": 13, "A": [0, 3, 7, 10, 11, 12, 13, 16, 18, 19, 20, 22], "But": 20, "By": [13, 18, 23], "For": [0, 1, 13, 16, 20, 21, 23], "If": [0, 1, 6, 7, 10, 11, 13, 16, 17, 18, 20, 21, 23, 24], "In": [0, 1, 13, 16, 18, 21, 22, 23, 24], "It": [3, 10, 12, 13, 16, 19, 22, 23], "Near": 3, "No": 13, "On": 21, "One": 10, "Or": [0, 24], "The": [0, 1, 3, 6, 7, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24], "Then": 0, "There": [1, 18, 24], "These": [16, 24], "To": [1, 21, 23], "_": 6, "__init__": 1, "_incompletedataset": 3, "_load_camera": 18, "_loaded_step": 1, "_state": 1, "_type": 12, "abhik": [19, 22], "abhishek": 19, "abl": [0, 24], "about": [0, 18], "absolut": [10, 18], "abstract": 3, "acceler": 22, "accept": [1, 16], "access": [13, 16, 21], "accumul": [17, 22], "accumulate_metr": [3, 6, 7], "accur": 22, "achiev": 22, "acquir": 19, "actual": 13, "ad": [18, 20, 22, 24], "adam": 1, "adapt": 22, "add": [0, 1, 9, 21, 22, 24], "add_embed": [3, 9], "add_ev": [3, 9], "add_histogram": [3, 9], "add_hparam": 9, "add_imag": [3, 9], "add_plot": [3, 9], "add_scalar": [3, 9], "add_text": [3, 9], "addapt": 22, "addit": 21, "address": 22, "adopt": 22, "advanc": 19, "affect": 24, "after": [10, 12, 13, 16, 22, 23, 24], "ag": 21, "agenc": 20, "ahuja": [19, 22], "aim": 20, "akkaynak": [19, 22], "alex": 22, "alexand": [19, 22], "algorithm": 13, "alia": 22, "alias": [0, 19, 22], "align": 23, "all": [1, 3, 7, 12, 15, 17, 18, 20, 21, 23], "allow": [1, 13, 21, 22, 23], "allow_alpha": 13, "almost": 13, "along": 22, "alpha": 13, "alreadi": [0, 13, 23, 24], "also": [0, 1, 13, 16, 18, 20, 21, 22, 23, 24], "altern": 1, "alwai": 24, "amit": [19, 22], "an": [0, 1, 3, 13, 16, 18, 19, 21, 22], "anchor": 22, "andrea": 22, "angjoo": [19, 22], "ani": [0, 1, 3, 9, 10, 11, 12, 13, 21], "anisotrop": 10, "anoth": [13, 24], "anpei": 22, "anti": [0, 19, 22], "anyth": 0, "apach": [19, 22], "apchenstu": 22, "api": 20, "app": 19, "appear": [0, 3, 13, 19, 22, 23], "appearance_weight": 3, "append": 18, "appli": [3, 12, 13, 17], "applied_preset": [8, 12], "apply_colormap": 13, "apply_transform": 13, "approach": 22, "approxim": 22, "apptain": [3, 4, 16, 17, 22], "apptainerbackend": 4, "apptainerbackendspec": 4, "apt": 21, "ar": [0, 1, 3, 6, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24], "arang": 18, "archiv": 23, "arg": [3, 4, 9, 17], "argument": [0, 1, 12, 17, 18, 21, 23, 24], "arno": 19, "around": [0, 19], "arrai": [8, 13, 16, 18], "articl": 20, "artifact": [8, 22], "arxiv": [0, 19, 20, 22], "ascend": 11, "aselin": 20, "aspect": 1, "assert": [0, 1], "assess": 10, "asset": 22, "assum": [0, 13, 18, 23, 24], "attach": 16, "attempt": 16, "attribut": [6, 22], "austin": [19, 22], "authkei": 4, "author": [0, 1, 19, 20, 22], "auto": [12, 17], "automat": [3, 12, 18, 20, 22, 23, 24], "avail": [0, 1, 7, 16, 20, 21, 22], "averag": [10, 12], "avoid": 21, "axes_label": [3, 9], "b": [10, 20], "back": 22, "backend": [1, 2, 3, 17, 20, 21, 22, 23], "backend_nam": [3, 7, 17], "backends_ord": 3, "background": [12, 13, 19, 22, 23], "background_color": 13, "backward": 1, "bake": 22, "bandwidth": 10, "bar": [7, 13], "barron": [0, 19, 22], "bartel": 3, "base": [1, 3, 4, 6, 7, 9, 10, 11, 12, 13, 17, 19, 20, 22, 23], "base_path": [15, 17], "baselogg": 9, "baseloggerev": 9, "bash": 21, "bash_profil": 21, "bashrc": 21, "batch_siz": 3, "becaus": 21, "been": 13, "befor": 23, "beforehand": 24, "being": [16, 21], "believ": 18, "below": 13, "ben": [0, 19, 22], "benchmark": [0, 8, 19, 20, 22], "benjamin": 22, "bernhard": 22, "better": [10, 22, 23], "between": [10, 16, 20, 24], "bias": 23, "bicycl": 0, "big": 20, "bin": [0, 21, 24], "binari": 16, "binaryio": 8, "binbin": 22, "bind": [1, 22], "bit": 13, "black": 13, "blend": 13, "blender": [1, 22, 23], "bmild": 19, "bookkeep": 24, "bool": [3, 4, 6, 7, 8, 10, 11, 12, 13], "both": [16, 19], "bottom": [13, 20], "bovik": 10, "boyang": 22, "brandenburg": 19, "brent": [19, 20, 22], "browser": 23, "brualla": 22, "bsd": 22, "buffer": 16, "bug": 22, "build": [3, 9, 12, 15, 16, 18], "build_evaluation_protocol": 7, "build_logg": 12, "build_method_class": 3, "build_script": 4, "built": [16, 21], "bundler_fil": 6, "byte": 8, "c": [1, 10, 16, 19, 24], "call": [0, 1, 12, 16, 18], "callabl": [3, 10, 12], "camera": [0, 1, 2, 3, 6, 7, 8, 18, 19, 22], "camera_model": [3, 6, 18], "camera_model_from_int": 3, "camera_model_to_int": [3, 18], "cameras1": 5, "cameras2": 5, "camp": 17, "can": [0, 1, 6, 10, 13, 16, 18, 20, 21, 22, 23, 24], "cancel": 13, "cancel_if_request": 13, "cancellationtoken": 13, "cancelledexcept": 13, "capabl": 1, "captur": [6, 19, 22], "case": [0, 1, 10, 13, 16, 18, 22, 23, 24], "casual": 22, "cat": 3, "caus": 10, "cayon": 19, "cc": 19, "center_i": 18, "center_x": 18, "centric": [0, 18, 19, 22, 24], "certainli": 13, "chair": 6, "chang": [3, 22], "channel": 13, "charset": 20, "check": [13, 20, 21], "checkpoint": [1, 3, 20, 23], "checkpoint_data": 8, "chen": 22, "choos": [16, 23], "chosen": 16, "christoph": 22, "chume": 22, "cite": 20, "citi": 22, "ckpt": 1, "ckpt_meta": 1, "cl": 1, "class": [1, 3, 4, 6, 7, 9, 11, 12, 13], "classmethod": [1, 3, 13], "cli": [20, 21, 24], "close": 4, "closest": 13, "cloud": [22, 23], "code": [0, 1, 19], "coeffici": 13, "coeur": 19, "collect": [0, 19, 22], "colmap": [0, 17, 18, 19, 24], "colmap_path": 6, "color": [1, 3, 6, 7, 9, 10, 13, 17, 22], "color_backscatt": 22, "color_clean": 22, "color_spac": 13, "colormap": 13, "colorspac": 10, "column": 13, "com": [0, 6, 19, 21, 22], "combin": 22, "comma": [16, 17], "command": [0, 1, 17, 21, 23, 24], "commit": 9, "common": [16, 18], "commun": 18, "compact": 22, "compar": [10, 20, 22], "comparison": 1, "compil": 11, "compile_dataset_result": 11, "complic": 1, "compon": [13, 22], "compress": 23, "comput": [1, 7, 10, 12, 19], "compute_metr": 7, "concatlogg": 9, "concatloggerev": 9, "concept": 16, "conda": [1, 3, 4, 16, 17, 22, 24], "conda_spec": 4, "condabackend": 4, "condabackendspec": 4, "condit": [19, 22], "config": 12, "config_overrid": [1, 3, 8, 12, 17], "configur": 21, "conflict": 21, "conjug": 13, "connect": [16, 23], "connect_work": 4, "connectionclos": 4, "connectionerror": 4, "consid": [13, 18], "consist": [19, 20, 22, 24], "construct": [18, 23], "contain": [0, 1, 7, 11, 16, 17, 18, 19, 21, 23, 24], "content": [0, 1, 18, 19, 22, 24], "context": 13, "contextmanag": [3, 9], "continu": 16, "contribut": 18, "convent": [13, 18], "converg": 13, "convers": 13, "convert": [13, 18], "convert_image_dtyp": [1, 13], "convolut": 10, "coordin": 18, "coordinate_system": 6, "copi": 1, "copy_": 1, "corner": 20, "correct": [18, 24], "correctli": 1, "correspond": [13, 23], "could": 24, "cover": 1, "cpu": 1, "creat": [13, 23, 24], "csv": 18, "ctk": 21, "cu118": 1, "cuda": [21, 22], "curl": 21, "current": [3, 13, 16, 20, 21, 23], "custom": [0, 20, 22], "cvpr2023": [19, 22], "cx": [3, 6, 22], "cy": [3, 6, 22], "cz": 20, "czech": 20, "d": [21, 22], "dahua": 22, "dai": [19, 22], "dampen": 10, "dan": [19, 22], "data": [0, 1, 3, 6, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23], "data_path": 17, "data_rang": 10, "databas": 24, "database_path": 24, "dataset": [1, 2, 3, 7, 8, 11, 12, 15, 20, 22, 23], "dataset_index_select": [6, 18], "dataset_load_featur": 6, "dataset_metadata": 12, "datasetinfo": 11, "datasetloaderspec": 3, "datasetnotfounderror": 3, "datasetspec": 3, "datasetspecmetadata": 3, "david": [19, 22], "db": 24, "de": 22, "dearmor": 21, "deb": 21, "deborah": [19, 22], "decid": 24, "declar": 1, "decompos": 13, "def": [0, 1, 18], "default": [0, 1, 3, 10, 13, 16, 17, 18, 19, 21, 23, 24], "default_appear": 3, "default_cuda_arch": 4, "default_fov": 3, "default_metr": [0, 3, 11], "default_transition_dur": 3, "defaultevaluationprotocol": 7, "defin": 10, "degre": 22, "delaunai": 22, "demo": [20, 22], "demonstr": 1, "demuc": 22, "dens": 22, "depend": [1, 11, 16, 21, 24], "depth": [3, 13, 17, 22], "depth_mean": 22, "derya": [19, 22], "describ": [1, 21], "descript": [0, 3, 7, 8, 9, 11], "deserialize_nb_info": 8, "design": 22, "detach": 1, "detail": 20, "detect": [0, 18, 23, 24], "determin": [1, 10], "develop": [1, 19, 22], "deviat": 10, "dict": [0, 1, 3, 6, 7, 8, 9, 11, 12], "dictionari": [6, 7, 11, 18], "differ": [1, 13, 16, 19, 20, 22, 23], "differenct": 23, "difficult": 20, "difficulti": 20, "dim": 10, "dimens": 13, "dimension": 22, "direct": 22, "directli": [0, 6, 24], "directori": [0, 1, 6, 7, 8, 12, 17, 18, 23, 24], "dirnam": 0, "disabl": 17, "disagn": 22, "discov": 1, "discover": 1, "disk": 22, "display_nam": [3, 9], "distanc": 22, "distort": [3, 18, 22], "distortion_map": 22, "distortion_paramet": [3, 18], "distractor": 22, "distribut": [21, 22], "dm_pix": 10, "dmpix_ssim": 10, "do": [0, 1, 13, 18, 24], "doc": [15, 17, 22], "docker": [3, 4, 16, 17, 22, 23], "dockerbackend": 4, "dockerbackendspec": 4, "dockerfil": 16, "document": [17, 18, 24], "doe": [0, 10, 13, 21, 22, 24], "doi": 13, "don": 1, "done": [0, 20], "dongbin": 22, "dor": [0, 19, 22], "download": [1, 6, 16, 19, 20, 21, 23], "download_blender_dataset": 6, "download_dataset": [0, 6], "download_dataset_funct": [0, 3], "download_llff_dataset": 6, "download_mipnerf360_dataset": 6, "download_my_dataset": 0, "download_nerfstudio_dataset": 6, "download_phototourism_dataset": 6, "download_seathru_nerf_dataset": 6, "download_tanksandtemples_dataset": 6, "downloaddatasetfunct": 3, "downscal": 24, "downscale_factor": [6, 24], "downscale_loaded_factor": 24, "drettaki": 22, "drive": [0, 6], "drive_link": 6, "driver": 21, "drum": 6, "dtype": [1, 13, 18], "dump": 1, "dx": 13, "dynam": 22, "e": [0, 1, 10, 17, 18, 20, 23, 24], "each": [0, 10, 13, 16, 18, 19, 21, 24], "easi": [1, 20, 21], "easier": 1, "easiest": [1, 16], "easili": [1, 20], "eastbeanzhang": 22, "edu": 19, "educ": 20, "effici": 22, "eigenvalu": 13, "either": [1, 6, 16, 19, 22], "element": 22, "elev": [0, 19], "els": [0, 1, 13, 18], "embed": [3, 7, 9, 17, 19, 22, 23], "embedding_train_index": 3, "enabl": [1, 21, 22, 23], "encapsul": 16, "encod": 22, "end": [16, 22, 23], "endpoint": 18, "enliang": 22, "ensur": [7, 18, 24], "environ": [0, 1, 16, 17, 19, 21, 24], "environment_nam": [1, 4], "equival": 13, "erf": 20, "error": [3, 10, 13], "especi": 20, "establish": 16, "estim": 10, "etc": [1, 18, 21, 23, 24], "ethan": [19, 22], "eval": [1, 17], "eval_al": 12, "eval_all_it": [12, 17], "eval_batch_s": 3, "eval_few": 12, "eval_few_it": [12, 17], "evalu": [0, 1, 2, 3, 6, 11, 13, 19, 20, 22, 23], "evaluation_protocol": [0, 3, 7, 8, 12], "evaluation_protocol_class": 3, "evaluationprotocol": [3, 6, 7, 12], "evaluationprotocolspec": 3, "evan": 22, "event": [8, 9], "everi": 13, "every_it": 13, "everyth": 23, "evonn": [19, 22], "exactli": 10, "exampl": [0, 1, 13, 18, 23, 24], "except": [3, 4, 13], "exhaustive_match": 24, "exist": [0, 1, 17, 20, 24], "exist_ok": [0, 1], "expand": 1, "expected_scal": 13, "experi": 23, "explicit": [18, 22, 24], "explicitli": 18, "exploit": 22, "explor": 19, "export": [0, 1, 21], "express": 13, "expro": 20, "extend": [22, 23], "extens": [20, 22, 23], "extern": [0, 1, 23], "extra": 7, "extract": [0, 22, 23], "extractal": 0, "f": [0, 1, 6, 18], "face": [19, 24], "factor": [22, 24], "fail": 16, "fallback": 16, "fals": [4, 7, 10, 13, 18], "famou": 19, "far": [3, 18], "fast": [1, 22], "faster": [16, 22], "fastest": 16, "featur": [1, 6, 22], "feature_extractor": 24, "few": [1, 17], "ficu": 6, "field": [0, 11, 17, 18, 19, 24], "file": [0, 7, 8, 11, 17, 18, 23, 24], "filter": [3, 10], "filter_fn": 10, "final": [0, 1, 12, 17, 22], "finish": 23, "first": [0, 1, 10, 16, 18, 21], "fishey": 19, "fit": 18, "five": [0, 19], "fix": [0, 19, 22], "float": [1, 3, 6, 7, 9, 10, 11, 12, 13, 18], "float32": [1, 10, 18], "float64": 10, "fly": 22, "fn": 3, "focal": 18, "focal_i": 18, "focal_x": 18, "folder": [6, 23], "follow": [0, 1, 13, 18, 20, 21, 22, 23, 24], "footprint": 22, "forc": 17, "forg": [21, 24], "form": [18, 19], "format": [0, 6, 23, 24], "format_dur": 11, "format_memori": 11, "formula": 13, "forward": [19, 24], "forward_port": 4, "found": [1, 16, 21], "foundat": 20, "fountain": 19, "four": [0, 19], "fov": 3, "fp": [3, 7, 22], "fr": 22, "frahm": 22, "frame": [0, 3, 7, 19, 23], "framework": [1, 19, 20, 22], "frederik": 22, "free": 22, "fridovich": 22, "from": [0, 1, 3, 6, 7, 10, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24], "from_numpi": 1, "frozenset": [1, 3, 6, 12], "frustum": [22, 23], "fssl": 21, "full": [0, 1, 17, 20, 23], "full_opencv": [3, 6, 22], "function": [1, 4, 10, 12, 13], "fungraph": 22, "further": 23, "fx": 3, "fy": 3, "g": [0, 1, 17, 18, 21, 23, 24], "gao": 22, "garden": [0, 23], "gate": 19, "gaussian": [10, 17, 23], "gaussian_kernel": 10, "ga\u010dr": 20, "geiger": 22, "gener": [11, 16, 18, 22], "generate_output_artifact": 12, "genericcamera": [3, 5], "geometr": 22, "geometri": 22, "georg": 22, "georgio": 22, "get": [0, 3, 11, 21, 23], "get_backend": 4, "get_checkpoint_sha": 8, "get_dataset_info": 11, "get_dataset_loader_spec": 3, "get_dataset_spec": 3, "get_evaluation_protocol_spec": 3, "get_forwarded_port": 4, "get_image_pixel": 5, "get_implemented_backend": 4, "get_info": [1, 3], "get_logg": 12, "get_logger_spec": 3, "get_method_info": [1, 3], "get_method_info_from_spec": 11, "get_method_sha": 8, "get_method_spec": 3, "get_metrics_hash": 8, "get_mount": 4, "get_nam": [3, 6, 7], "get_predictions_sha": 8, "get_presets_and_config_overrid": 12, "get_rai": 5, "get_resources_utilization_info": 12, "get_supported_dataset": 3, "get_supported_dataset_load": 3, "get_supported_evaluation_protocol": 3, "get_supported_logg": 3, "get_supported_method": 3, "get_torch_checkpoint_sha": 8, "get_train_embed": 3, "get_transform_and_scal": 13, "get_worker_configur": 4, "giacomo": 22, "git": 21, "github": [19, 20, 21, 22], "githubusercont": 21, "give": 21, "given": [3, 12, 13], "good": [21, 22], "googl": [0, 6], "googleapi": 19, "gpg": 21, "gpgkei": 21, "gpu_memori": 12, "gpu_nam": 12, "grant": 20, "graphic": 22, "graviti": 23, "grayscal": 10, "great": [20, 24], "grid": 22, "ground": [10, 19], "ground_truth_sha": 8, "group": 21, "grow": 22, "gsplat": 17, "gt": 7, "guid": [0, 1, 18, 23, 24], "guidanc": 13, "gz": [17, 23], "h": [1, 10, 18], "ha": [13, 21, 22], "handl": 22, "hao": 22, "haoqian": 22, "happen": 13, "harmon": 13, "has_scal": 13, "hash": [8, 22], "have": [0, 1, 10, 11, 13, 18, 19, 20, 21, 23, 24], "haven": [21, 23], "hedman": [0, 19, 22], "height": [18, 20], "help": [1, 23, 24], "helper": 18, "henzler": 22, "here": [0, 1, 21, 23, 24], "high": 22, "higher": 10, "highest": 16, "histogram": 9, "home": 21, "home_path": 4, "homogen": 13, "host": [0, 16], "hostnam": 4, "hotdog": 6, "hou": 22, "how": [0, 1, 24], "howev": [1, 18, 22, 24], "hparam": [1, 3, 9], "hparam_plugin_metr": 9, "hpc": [16, 21], "http": [0, 1, 6, 13, 19, 21, 22], "hu": 22, "huang": 22, "huge": 22, "human": 0, "hyperparamet": 1, "i": [0, 1, 3, 6, 7, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "id": [0, 1, 3, 7, 11, 17, 18, 19, 20, 22, 24], "identifi": [0, 9], "ieee": 10, "ignor": 10, "imag": [0, 1, 3, 4, 5, 7, 9, 10, 12, 13, 16, 17, 18, 19, 20, 22, 24], "image_nam": 18, "image_path": [3, 18, 24], "image_paths_root": [3, 18], "image_s": [1, 3, 5, 18], "image_to_srgb": 13, "images_path": 6, "images_points3d_indic": [3, 6, 22], "imagesetinterpolationsourc": 3, "img": 20, "implement": [0, 1, 10, 11, 16, 18, 20, 21, 22, 23, 24], "implementation_statu": 3, "import": [0, 1, 11, 18], "improv": 22, "includ": [13, 17, 19], "include_doc": [15, 17], "increas": 20, "index": [1, 3, 10, 17], "indic": [6, 12, 13, 18], "individu": [10, 23], "indoor": [0, 19], "industri": 19, "infer": 1, "info": [0, 1, 3, 7, 8, 11, 18, 19, 22, 24], "inform": [0, 1, 18, 24], "infra": 20, "ingp": 22, "initi": [1, 3, 12, 16, 17], "initial_color": 1, "inplac": 17, "input": [10, 13, 17, 22, 23], "inria": 22, "insid": [16, 21], "inspect": 23, "inspir": 22, "instal": [1, 4, 16, 20, 23, 24], "install_script": [1, 4], "instanc": 4, "instance_cal": 4, "instance_del": 4, "instant": 17, "instead": [20, 22, 23], "instruct": [1, 21, 24], "int": [1, 3, 4, 6, 7, 9, 10, 12, 13], "int32": 18, "integ": 18, "integr": [1, 22], "interact": [21, 23], "interest": 6, "interfac": [1, 16, 20], "intermedi": 19, "interpol": 3, "interpolate_bilinear": 5, "interrupt": 4, "intrins": [3, 18, 19, 22], "introduc": 0, "invalid": 0, "invert": 13, "invert_transform": 13, "io": [2, 19, 21, 22], "iqjrbg": 6, "is_cycl": 3, "isol": [20, 21], "issu": 1, "item": [1, 3], "iter": [1, 3, 6, 7, 8, 13, 17], "its": 1, "itself": 13, "itzhack": 13, "j": 13, "jaesik": 19, "jake": [19, 22], "jan": 22, "jeffrei": 22, "jianbo": 22, "jingyi": 22, "jkulhanek": 22, "johann": 22, "join": [0, 1, 18], "jona": [20, 22], "jonathan": [0, 19, 22], "jonbarron": [0, 19, 22], "journal": 20, "jpg": [0, 18, 24], "json": [0, 1, 7, 11, 17, 18, 23, 24], "julia": 22, "just": [1, 13], "justin": [19, 22], "k": 18, "k1": [10, 18], "k2": [10, 18], "k3": 18, "k4": 18, "k5": 18, "k6": 18, "kalantari": 19, "kamyar": [19, 22], "kanazawa": [19, 22], "kar": 19, "keil": 22, "keller": 22, "kerbl": 22, "kernel": 10, "kernel_s": 10, "kerr": [19, 22], "keunhong": 22, "keyfram": 3, "keyr": 21, "keyword": 18, "khademi": 19, "knapitsch": 19, "know": 24, "kochanek": 3, "kochanekbartelsinterpolationsourc": 3, "koltun": 19, "kopana": 22, "korman": [19, 22], "kplane": [17, 22], "kristoffersen": [19, 22], "kulhanek": [20, 22], "kulhanek2024nerfbaselin": 20, "kwarg": [3, 4, 6, 9, 18], "l": 21, "lab": 19, "label": [3, 9], "landmark": 19, "larg": [19, 22], "larger": 24, "laser": 19, "last": [12, 13], "later": 23, "latest": [17, 21], "latter": 16, "lazi": 12, "learn": 10, "least": [10, 18], "left": [13, 19, 20], "lego": [1, 6], "leimk\u00fchler": 22, "len": [1, 18, 19], "less": 19, "let": [0, 1, 18, 23, 24], "level": [20, 21], "levi": [19, 22], "levy_seathru": [19, 22], "li": [19, 22], "libnvidia": 21, "librari": 22, "licens": [3, 11, 19, 22], "licensespec": [3, 11], "light": 19, "like": [18, 20], "limin": 22, "lin": 22, "linalgerror": 13, "linbo": 22, "line": [21, 24], "linear": 13, "link": [0, 1, 3, 11, 17], "linspac": 18, "linux": [16, 21], "list": [0, 1, 3, 6, 7, 9, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23], "liter": [3, 4, 6, 7, 8, 11, 12, 15], "llff": 22, "load": [1, 6, 11, 18, 24], "load_blender_dataset": 6, "load_bundler_dataset": 6, "load_colmap_dataset": 6, "load_dataset": 6, "load_dataset_funct": [3, 18], "load_featur": 6, "load_llff_dataset": 6, "load_metrics_from_result": 11, "load_my_dataset": 18, "load_nerfonthego_dataset": 6, "load_nerfstudio_dataset": 6, "load_seathru_nerf_dataset": 6, "load_state_dict": 1, "load_trajectori": 8, "loaddatasetfunct": 3, "loaded_checkpoint": [1, 3], "loaded_step": [1, 3], "loader": [0, 3, 20, 24], "local": [13, 21, 22], "locat": 0, "log": [2, 23], "log_metr": 9, "logdir": 9, "logger": [3, 9, 12, 17, 23], "logger_class": 3, "loggerev": [3, 9], "loggerspec": 3, "long": [13, 19], "loss": 1, "low": 22, "lower": 10, "lpip": [7, 10], "lpips_alex": 10, "lpips_vgg": [0, 10], "lr": 1, "lu": 22, "lutz": 22, "m": [18, 19, 21], "maco": [16, 21], "mae": 10, "magnitud": 10, "mai": [0, 13, 16, 24], "main": [1, 13, 16, 21, 22], "make": [0, 1, 13], "make_image_grid": 12, "makedir": [0, 1], "manag": 13, "mani": [1, 18], "map": [10, 18], "mapper": 24, "marc": 22, "markdown": [11, 17], "martin": 22, "mask": [18, 22], "match": [1, 10, 22], "materi": 6, "matia": 22, "matplotlib": 13, "matric": [3, 13, 18], "matrix": [13, 18], "matthew": [19, 22], "matthewtancik": [19, 22], "max": 10, "max_message_s": 4, "max_val": 10, "max_width": 12, "maximum": [10, 13], "mcallist": [19, 22], "mean": [10, 16], "meanti": 22, "measur": 10, "media": [19, 22], "memori": [11, 12, 16, 22], "merg": [1, 12], "mesh": 22, "messag": [4, 16], "metadata": [1, 3, 11, 12, 17, 18, 24], "method": [3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 19, 20, 21, 23, 24], "method_class": [1, 3], "method_id": [1, 3], "method_link": [11, 17], "method_nam": 17, "method_spec": [4, 12], "methodinfo": [3, 11], "methodspec": [3, 4, 11, 12], "metric": [0, 2, 3, 6, 7, 8, 9, 11, 12, 19, 20, 23], "metricinfo": 11, "metrics_list": 8, "metrics_path": 8, "metricsaccumul": 12, "mic": 6, "michael": 22, "might": 24, "mildenhal": [0, 19, 22], "min": [10, 22], "minghan": 22, "miniforg": 21, "miniforge3": 21, "minim": 20, "ministri": 20, "mip": [0, 17, 23], "mipnerf": 22, "mipnerf360": [0, 17, 19, 22, 23], "mirror": 19, "mit": 22, "mkdir": 24, "mlp": 22, "mobil": 19, "mode": 8, "model": [0, 1, 3, 8, 10, 17, 22], "model_path": 8, "modelinfo": [1, 3], "modif": 22, "modifi": 22, "modul": 13, "modular": [19, 22], "more": [1, 13, 18, 22], "most": [16, 20], "mount": 4, "move": 0, "mp4": [17, 23], "mse": 10, "mse_loss": 1, "much": [1, 24], "mueller2022inst": 22, "mulin": 22, "multi": 22, "multipl": [1, 16, 22], "multipli": 13, "multiresolut": 22, "must": [1, 10], "mv": 22, "my": [0, 1, 18, 24], "my_dataload": 18, "my_dataloader_spec": 18, "my_dataset": 0, "my_dataset_spec": 0, "my_method": 1, "my_method_spec": 1, "my_scen": 0, "mymethod": 1, "m\u00fcller": 22, "n": [0, 3, 18, 19, 20], "naama": [19, 22], "name": [0, 3, 4, 6, 11, 17, 18], "navig": 21, "nb": [0, 18, 24], "nb_info": [7, 8, 12, 14], "nbsp": 20, "ncol": 12, "ndarrai": [3, 5, 6, 7, 8, 9, 10, 12, 13], "ndc": 19, "ndim": 13, "near_far": 13, "nearest": 13, "nears_far": [3, 18], "necessari": [1, 16, 24], "need": [0, 1, 3, 18, 21, 23, 24], "nerf": [0, 8, 17, 20, 23], "nerf_neural_radiance_fields_in_scattering_media_cvpr_2023_pap": [19, 22], "nerfacto": [17, 22], "nerfbaselin": [0, 2, 16, 18, 21, 22, 23, 24], "nerfbaselines_backend": [17, 21], "nerfbaselines_protocol": 16, "nerfbaselines_regist": [0, 1], "nerfevaluationprotocol": 7, "nerfonthego": [17, 22], "nerfstudio": [20, 23], "nerfw": [17, 19, 22], "nerfwevaluationprotocol": 6, "neural": [0, 19, 22], "new": [17, 20, 22, 24], "new_artifact": 17, "new_camera": [3, 18], "new_checkpoint": 17, "new_dataset": [3, 18], "new_nb_info": 8, "next": [1, 21, 23, 24], "ng": [19, 22], "ngp": 17, "nima": 19, "niujinshuchong": 22, "nn": 1, "no_grad": 1, "noah": 19, "nois": 10, "non": 13, "none": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18], "nor": 0, "normal": 22, "note": [10, 13, 16, 22, 24], "notic": 24, "notifi": 0, "notrequir": [3, 11], "novel": [20, 22], "now": [0, 1, 13, 18, 20, 21, 24], "np": [7, 18], "nsvf": 22, "num_bin": [3, 9], "num_iter": [1, 3, 12], "num_param": 3, "number": [1, 13, 17], "numer": [10, 13], "numpi": [1, 16, 18], "numpy_from_base64": 8, "numpy_to_base64": 8, "nvlab": 22, "nx3x3": 13, "o": [0, 1, 17, 18, 21], "object": [0, 1, 4, 9, 12, 13, 18, 19, 22, 24], "obtain": [6, 11, 12, 19, 22], "occlus": 19, "offer": 21, "offici": [1, 20, 22, 23, 24], "often": 21, "ohk3": 20, "omit": 0, "onc": 1, "one": [0, 3, 16, 24], "onli": [0, 1, 3, 10, 16, 21, 22, 23, 24], "onlin": [0, 20], "opac": 17, "open": [0, 1, 18, 22], "open_ani": 8, "open_any_directori": 8, "openaccess": [19, 22], "opencv": [1, 3, 6, 18, 22], "opencv_fishey": [3, 6, 22], "opengl": 6, "oper": [13, 21], "oppos": 1, "optim": [1, 3, 19, 22], "optim_st": 1, "optimize_embed": 3, "optimizeembeddingoutput": 3, "option": [0, 1, 3, 6, 7, 12, 17, 18, 23], "orbit": [0, 19], "orchestr": 16, "order": [0, 1, 16, 18, 21, 24], "org": [0, 1, 13, 19, 22], "organ": 20, "orient": 22, "origin": [1, 22, 24], "orthogon": 13, "ortiz": 19, "other": [0, 1, 18, 21, 22, 24], "otherwis": [3, 16, 22, 24], "otto": 22, "our": [1, 23], "out": [6, 20], "outdoor": [0, 19], "output": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 22, 23], "output_artifact": 3, "output_dir": 0, "output_nam": [7, 17], "output_path": [8, 24], "output_typ": 17, "output_type_dtyp": 3, "output_zip": 0, "outputartifact": 3, "outsid": 19, "overlap": 24, "overrid": [1, 12, 17], "overwrit": 17, "own": [0, 18, 23], "p": [0, 4, 10, 13, 19, 22], "p1": 18, "p2": 18, "packag": [16, 21, 23], "pad": [12, 13], "pad_pos": 13, "padded_stack": 13, "page": [17, 20, 21], "pair": 10, "pallet": 13, "pan": 22, "paper": [0, 1, 6, 11, 13, 17, 19, 20, 22], "paper_author": [0, 3, 11], "paper_link": [0, 3, 11], "paper_titl": [0, 3, 11], "param": [1, 10], "paramet": [1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 22, 24], "parametr": 19, "park": [19, 22], "pass": [1, 3, 13], "patch": 10, "path": [0, 1, 3, 4, 6, 7, 8, 9, 11, 17, 18, 21, 22, 24], "path_is_video": 7, "pd": 4, "pdf": [0, 19, 22], "peak": 10, "pearl": [19, 22], "peihao": 22, "peleg": [19, 22], "peng": 22, "per": [10, 22], "perceptu": 10, "perform": [1, 10, 22, 23], "perman": 1, "perspect": 18, "peter": [0, 19, 22], "philipp": 22, "phone": 19, "photo": 23, "photo_tour": 19, "phototour": 19, "pickl": 16, "pid": 12, "pinhol": [1, 3, 6, 22], "pip": [1, 21], "pipelin": 22, "pixel": 10, "pixelwis": 22, "place": [18, 19, 24], "placehold": 17, "plane": [3, 18], "pleas": [0, 20, 21, 23, 24], "ply": 18, "point": [18, 22, 23, 24], "points3d": [0, 18, 24], "points3d_indic": 18, "points3d_rgb": [3, 6, 18, 22], "points3d_xyz": [1, 3, 6, 18, 22], "poisson": 22, "pollefei": 22, "polycam": 19, "pop": 12, "port": [4, 14, 17], "pose": [3, 13, 18, 19, 22, 23], "posit": 20, "possibl": [0, 1, 10], "power": 20, "pp": 10, "pragu": 20, "pratul": [0, 19, 22], "pre": 16, "precis": 10, "precondit": 22, "pred": [1, 7, 10], "predefin": 1, "predict": [1, 3, 6, 7, 8, 10, 17, 22, 23], "predictions_path": 8, "predictions_sha": 8, "prefix": [9, 18], "prepar": 8, "presenc": 0, "present": [17, 21], "preset": [1, 3, 12, 17], "pretti": 13, "previou": 23, "primarili": 22, "primit": 22, "print": 23, "prior": 24, "prioriti": 3, "privileg": 21, "problem": 22, "process": [10, 12, 16, 18, 19, 21, 22, 23], "produc": [10, 13, 17], "progress": 7, "project": [5, 20], "properti": [3, 4, 12], "protocol": [3, 7, 16, 19, 20], "protocol_nam": 4, "provid": [1, 3, 12, 16, 17, 20, 22], "psnr": [0, 10], "pth": 1, "public": [0, 1, 20], "publish": 24, "pull": [1, 16, 18], "pure": 13, "purpos": [1, 22], "pwd": [0, 1], "py": [0, 1, 18], "python": [0, 1, 3, 4, 16, 17, 18, 22], "python_path": 4, "python_vers": [1, 4], "pytorch": [1, 7], "q": 13, "q1": 13, "q2": 13, "qian": 19, "qin": 22, "qualiti": [10, 22], "quaternion": 13, "quaternion_conjug": 13, "quaternion_multipli": 13, "quaternion_to_rotation_matrix": 13, "quickstart": 20, "quit": 13, "r": [0, 1, 3, 8, 10, 13, 18], "radianc": [0, 19, 22], "radiu": [0, 19], "rai": 22, "rais": [3, 13], "raise_for_statu": 0, "ramamoorthi": [19, 22], "ran": 24, "rand_idx": 1, "randint": 1, "random": 1, "rang": [10, 13], "rank": 22, "raster": 22, "ratio": 10, "ravi": [19, 22], "raw": 21, "reach": 22, "read": 18, "read_imag": 8, "readabl": 0, "reader": 18, "readi": [16, 24], "real": 22, "realist": 19, "rebuild": 17, "receiv": 4, "recht": 22, "recommend": [1, 16, 21, 24], "reconstruct": [19, 22], "reduc": [7, 24], "refer": [22, 23], "refin": 22, "regist": 3, "registri": [1, 16], "reimpl": [17, 22], "reimplement": 20, "rel": [13, 20, 24], "releas": [16, 20, 21, 24], "reli": [16, 21], "remoteprocessrpcbackend": 4, "remov": 13, "ren": [19, 22], "render": [1, 3, 6, 7, 20, 22], "render_all_imag": 7, "render_fram": 7, "render_markdown_dataset_results_t": 11, "render_output": 3, "renderopt": 3, "renderoutputtyp": 3, "replac": 3, "replace_us": 4, "repo": 22, "report": [1, 22], "repositori": [1, 11, 17], "repres": [13, 19, 22], "represent": 19, "reproduc": [1, 3, 20], "republ": 20, "request": [0, 1, 18], "requir": [0, 1, 3, 4, 17, 20, 21, 22, 23], "required_featur": [1, 3], "rerun": 17, "resav": 1, "rescal": 23, "research": [20, 22], "reshap": 18, "resiz": 24, "resolut": [17, 24], "resources_utilization_info": 8, "resourcesutilizationinfo": 12, "respons": 0, "restart": 21, "restor": 1, "result": [1, 2, 7, 13, 20, 24], "results_path": 11, "return": [1, 3, 6, 7, 10, 11, 12, 13, 18], "return_map": 10, "reus": 10, "revers": 16, "rgb": 18, "ricardo": 22, "richard": 19, "right": 19, "rmtree": 0, "robust": 13, "rodrigo": 19, "root": [0, 24], "rosenbaum": [19, 22], "rot": 13, "rotat": 13, "rotate_spherical_harmon": 13, "rotation_matrix_to_quaternion": 13, "row": [13, 18], "ruilong": [19, 22], "run": [0, 1, 13, 16, 17, 20, 22, 23, 24], "run_inside_eval_contain": 7, "run_lpips_vgg": 7, "run_on_host": 4, "run_viser_view": 14, "runtim": 21, "rwn17": 22, "sacr": 19, "safer": 24, "salahi": [19, 22], "sam": 22, "same": [1, 18, 20, 21, 24], "sampl": [1, 18, 22], "sampling_mask": 3, "sampling_mask_path": [3, 18], "sampling_mask_paths_root": [3, 18], "sampling_masks_path": 6, "sara": 22, "sarafridov": 22, "satisfi": 1, "sattler": [20, 22], "save": [1, 3, 12, 17, 23], "save_cameras_npz": 8, "save_depth": 8, "save_evaluation_result": 8, "save_imag": 8, "save_it": [12, 17], "save_output_artifact": 8, "save_predict": 8, "save_trajectori": 8, "scaffold": 17, "scalar": 13, "scale": [13, 19], "scanner": 19, "scatter": [19, 22], "scene": [0, 3, 6, 11, 18, 19, 22, 23, 24], "sceneinfo": 11, "schi": 22, "schoenberger2016mv": 22, "sch\u0151nberger": 22, "scienc": 20, "script": 23, "sea": [19, 22], "seamless": 22, "seathru": 17, "second": [10, 11], "section": [20, 23], "sed": 21, "see": [0, 1, 13, 18, 20, 21, 23], "seen": 23, "seiskari": 22, "seitz": 19, "select": [3, 16, 17, 22], "selector": 20, "self": [1, 3], "semi": 19, "send": 4, "sent": 16, "separ": [16, 17], "sequenc": [3, 4, 9, 10, 16, 19], "serial": 16, "serialize_evaluation_result": 8, "serialize_nb_info": 8, "server": [0, 16], "set": [0, 3, 7, 10, 12, 13, 16, 17, 19, 21, 22, 23, 24], "setdiff1d": 18, "setup": [16, 20], "sever": [20, 22], "sgs24": 20, "sh": 21, "shallow": 22, "shape": [13, 18], "share": [16, 21], "shared_memory_nam": 4, "shared_memory_s": 4, "sharedmemoryprotocol": 4, "sheikh": 10, "shell": 4, "shenghua": 22, "ship": 6, "shm": 16, "short": 0, "should": [0, 1, 10, 11, 12, 18, 23, 24], "show": [0, 1, 23, 24], "shutil": 0, "side": 19, "siggraph": 6, "sigma": 10, "sign": 21, "signal": 10, "similar": [1, 10, 21], "simon": [19, 22], "simoncelli": 10, "simpl": 1, "simplebackend": 4, "simpler": 13, "simpli": [1, 24], "simplifi": 18, "sinc": 24, "singl": [1, 3, 23], "singular": 16, "size": [3, 10, 13, 18, 24], "skip": [1, 23, 24], "slice": [6, 13], "slow": 21, "slower": [13, 22], "small": [10, 19], "smaller": 24, "snave": 19, "so": [0, 1, 20], "solut": 13, "some": [0, 13, 16, 21, 23], "someth": 13, "songyou": 22, "sort": [0, 3], "sourc": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 21, 22], "space": [10, 13, 19, 22], "spars": [0, 22, 24], "spec": [0, 3, 4, 11, 12, 17, 18], "special": [12, 17], "specif": [0, 3, 16, 22, 23], "specifi": [0, 1, 13, 18, 23, 24], "speed": 22, "sphere": 19, "spheric": 13, "spinlock": 16, "spiral": 22, "splat": [17, 23], "split": [6, 12, 17, 18, 19, 23, 24], "sport": 20, "squar": 10, "src": 20, "srgb": 13, "srinivasan": [0, 19, 22], "ssim": [0, 10], "stabl": 21, "stack": [13, 18], "standard": [10, 23], "start": [1, 16, 21, 23], "start_dev_serv": 15, "start_host": 4, "stat": 1, "state_dict": 1, "static": [13, 22], "static_cal": 4, "step": [1, 3, 9, 12, 13, 17, 22, 24], "stereo": 22, "steven": 19, "stop": 13, "storag": 19, "str": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15], "strongli": [1, 21], "structur": [0, 10, 18, 22], "studio": [19, 22], "style": 20, "su": 22, "subdirectori": 9, "suboptim": 16, "subsequ": 16, "subset": [6, 13, 19], "successfulli": 1, "sudo": 21, "suffici": 16, "sum": 12, "summari": 9, "sun": 22, "super": [1, 22], "suppli": 17, "support": [1, 3, 16, 20, 21, 22, 23, 24], "supported_camera_model": [1, 3, 6, 7], "supported_output": [1, 3], "surfac": 22, "surfsplat": 22, "svg": 20, "switch": 20, "synchron": 16, "synthesi": [19, 20, 22], "synthet": 19, "system": [16, 18, 21, 24], "systemctl": 21, "szeliski": 19, "t": [0, 1, 3, 19, 21, 22, 23], "t2": 19, "tabl": 11, "tag": [3, 9], "take": [0, 12, 16, 18, 19], "tali": [19, 22], "tancik": [19, 22], "tank": 23, "tanksandtempl": 19, "tao": 22, "tar": [17, 23], "target": 10, "tcp": 16, "tcppickleprotocol": 4, "tdataset": 6, "technic": 20, "tee": 21, "tempfil": 0, "templ": 23, "temporari": 0, "temporarili": 0, "temporarydirectori": 0, "tension": 3, "tensor": [1, 8, 10, 13, 22], "tensorboard": [8, 9, 17, 23], "tensorboard_path": 8, "tensorboardlogg": 9, "tensorboardloggerev": 9, "tensorf": 17, "tensori": 22, "term": 13, "termin": 23, "terranc": [19, 22], "test": [0, 6, 18, 19, 23, 24], "test_dataset": 12, "test_indic": [6, 18], "test_list": 24, "tester": 22, "tetra": 17, "tetrahedr": 22, "tetrahedra": 22, "text": [3, 9], "tf": 10, "th": [0, 19], "than": 13, "thank": 20, "thecvf": [19, 22], "thei": [16, 20, 21], "them": [13, 20], "therefor": [0, 1, 20, 24], "thi": [0, 1, 10, 12, 13, 16, 18, 20, 21, 22, 23, 24], "thoma": 22, "though": 13, "thread": 13, "three": [1, 16, 19], "through": [18, 20], "throughout": 13, "thru": [19, 22], "time": [16, 19, 22], "timeout": 4, "titl": [0, 3, 9, 20], "tmp": 0, "token": 13, "tool": 21, "toolkit": 21, "top": 20, "torch": 1, "torchmetr": 10, "torchmetrics_ssim": 10, "torchvis": 1, "torsten": [20, 22], "total": 13, "total_train_tim": 8, "tourism": 23, "tourist": 19, "train": [0, 1, 2, 3, 6, 13, 18, 19, 22, 24], "train_dataset": [1, 3, 12], "train_dataset_metadata": 8, "train_embed": 17, "train_iter": [1, 3, 12], "train_list": 24, "trainer": [3, 12], "trajectori": [0, 3, 7, 8, 19], "trajectory_get_camera": 7, "trajectory_get_embed": 7, "trajectoryfram": 3, "trajectoryframeappear": 3, "trajectorykeyfram": 3, "transact": 10, "transfer": 16, "transform": [10, 13], "transient": 22, "transition_dur": 3, "treibitz": [19, 22], "trevi": 19, "tri": 1, "true": [0, 1, 6, 7, 8, 10], "truth": [10, 19], "try": [18, 23], "ttensor": [3, 5, 13], "ttensor_co": 3, "tupl": [3, 4, 5, 6, 7, 10, 12, 13, 15], "turkulainen": 22, "tutori": [0, 1, 24], "two": [1, 13], "txt": 24, "type": [3, 11, 12, 13, 16, 17, 18, 24], "typeddict": [3, 4, 11, 12], "ubuntu": 21, "uint8": 18, "unam": 21, "unbound": [0, 19, 22], "uncertainti": 22, "unconstrain": 22, "under": [18, 19, 22], "understand": 19, "underwat": [19, 22], "undistort_camera": 5, "unifi": [16, 20], "uniform": 10, "uniqu": 0, "unit": 13, "univers": 20, "unknown": [4, 18, 22], "unload": 6, "unloadeddataset": [3, 6, 18], "unoffici": 22, "unpad_pos": 13, "unprivileg": 21, "unproject": 5, "unstructur": 22, "unsur": 16, "until": 16, "updat": [1, 12, 21], "upgrad": 16, "upload": [0, 8, 23], "url": [0, 1, 3, 8, 23], "us": [0, 1, 6, 7, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23], "user": [0, 1, 12, 21, 24], "usermod": 21, "usp": 6, "usr": 21, "usual": 19, "utf": 20, "util": [1, 2, 12], "v": [13, 17], "valid": [8, 12], "valu": [3, 9, 10, 16, 18], "vari": [19, 21], "variabl": [0, 1, 13, 16, 17, 21], "variat": 19, "variou": [1, 18, 19, 21, 24], "vector": 13, "venv": 21, "verbin": [0, 19, 22], "verbos": 17, "veri": 22, "verif": 1, "verifi": 1, "version": [13, 16, 17, 20], "vicki": 22, "video": [19, 23], "view": [0, 19, 20, 22, 23], "viewer": [2, 20], "viridi": 13, "virtual": 21, "viser": 20, "visibl": 10, "visit": [6, 20], "visual": 23, "visualize_depth": 13, "vladlen": 19, "vol": [10, 13], "w": [0, 1, 8, 10, 18, 19], "wa": [0, 10, 19, 20, 22], "wai": [1, 20, 22], "wait_for_work": 4, "walk": 18, "walkthrough": 23, "wandb": [17, 23], "wandblogg": 9, "wandbloggerev": 9, "wang": [10, 19, 22], "want": [0, 18, 21, 23, 24], "warburg": 22, "warp_image_between_camera": 5, "washington": 19, "wb": 0, "we": [0, 1, 13, 16, 18, 19, 20, 21, 22, 23, 24], "web": [2, 19, 20, 22, 23], "weber": [19, 22], "webpag": 0, "websit": [11, 17, 20, 21, 23], "weight": 23, "wein": 22, "weird": 13, "weitao": 22, "well": [0, 1, 22], "were": [0, 12, 19, 24], "wget": 8, "when": [0, 10, 12, 13, 16, 17, 23, 24], "where": [0, 7, 13, 16, 19, 24], "whether": [13, 17], "which": [0, 1, 3, 12, 16, 18, 20, 21, 22, 23, 24], "while": [1, 24], "white": 19, "whl": 1, "whole": 0, "wide": 22, "width": 18, "wild": [17, 19, 22], "window": [10, 21], "with_supported_camera_model": 7, "within": 22, "without": [1, 11, 18], "work": [1, 3, 16, 20, 23], "worker": 16, "world": [3, 18, 22], "would": [13, 18, 20, 24], "wrap": 20, "write": 0, "written": 7, "wsl2": 21, "www": [19, 22], "xiangli": 22, "xml": 20, "xu": 22, "xy": 5, "xyz": 5, "y": [13, 21], "ye": 22, "year": [19, 20], "yet": 21, "yi": [19, 20, 22], "yield": 1, "you": [0, 1, 6, 13, 16, 18, 20, 21, 23, 24], "your": [0, 1, 16, 18, 20, 21, 23, 24], "youth": 20, "yu": 22, "yuanbo": 22, "z": 10, "zehao": 22, "zero": [13, 18], "zero_grad": 1, "zexiang": 22, "zhang": 22, "zheng": 22, "zhou": 19, "zhu": 22, "zhuoyang": 22, "zihan": 22, "zip": [0, 23], "zip_ref": 0, "zipfil": 0, "zipnerf": [17, 22], "zshrc": 21, "\u00b9": 13, "\u211b": 13}, "titles": ["Adding new datasets", "Adding new methods", "API Reference", "nerfbaselines", "nerfbaselines.backends", "nerfbaselines.cameras", "nerfbaselines.datasets", "nerfbaselines.evaluation", "nerfbaselines.io", "nerfbaselines.logging", "nerfbaselines.metrics", "nerfbaselines.results", "nerfbaselines.training", "nerfbaselines.utils", "nerfbaselines.viewer", "nerfbaselines.web", "Isolated backends", "nerfbaselines", "Custom dataset loader", "Datasets", "NerfBaselines documentation", "Installation", "Methods", "Quickstart", "Using custom data"], "titleterms": {"2d": 22, "360": [19, 22], "On": 22, "acknowledg": 20, "ad": [0, 1], "advanc": 20, "api": 2, "apptain": 21, "artifact": 17, "backend": [4, 16], "benchmark": 23, "blender": [6, 19], "build": 17, "bundler": 6, "camera": [5, 23, 24], "camp": 22, "checkpoint": 17, "citat": 20, "colmap": [6, 22], "commun": 16, "conda": 21, "content": 20, "creat": [0, 1, 18], "custom": [18, 24], "data": 24, "dataset": [0, 6, 17, 18, 19, 24], "demo": 17, "dev": 17, "docker": 21, "document": 20, "download": [0, 17], "evalu": [7, 17], "export": 17, "featur": 20, "field": 22, "file": 1, "fix": 17, "function": [0, 18], "g": 22, "gaussian": 22, "gener": 17, "go": 22, "gpu": 21, "gsplat": 22, "imag": 23, "instal": [17, 21], "instanc": 18, "instant": 22, "introduct": [1, 16, 24], "io": 8, "isol": 16, "k": 22, "launch": 23, "llff": [6, 19], "loader": 18, "log": 9, "main": 20, "metadata": 0, "method": [1, 17, 22], "metric": 10, "mip": [19, 22], "mipnerf360": 6, "model": 23, "modul": 1, "nerf": [19, 22], "nerfbaselin": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "nerfonthego": 6, "nerfstudio": [6, 19, 22], "new": [0, 1, 18], "ngp": 22, "nvidia": 21, "obtain": 24, "opac": 22, "output": 17, "photo": 19, "phototour": 6, "plane": 22, "pose": 24, "pre": 21, "protocol_shm_pickl": 4, "protocol_tcp_pickl": 4, "public": 23, "publish": 0, "quickstart": 23, "refer": [2, 20], "regist": [0, 1, 18], "reimplement": 22, "releas": 1, "render": [17, 23], "requisit": 21, "result": [11, 17, 23], "scaffold": 22, "seathru": [19, 22], "seathru_nerf": 6, "shell": 17, "spec": 1, "splat": 22, "tank": 19, "tanksandtempl": 6, "templ": 19, "tensorf": 22, "test": [1, 17], "tetra": 22, "tourism": 19, "train": [12, 17, 23], "trajectori": [17, 23], "us": 24, "util": 13, "viewer": [14, 17, 23], "w": 22, "web": [15, 17], "wildgaussian": 22, "write": 18, "zip": 22}})
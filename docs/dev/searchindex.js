Search.setIndex({"alltitles": {"2D Gaussian Splatting": [[26, "2d-gaussian-splatting"]], "3DGS-MCMC": [[26, "3dgs-mcmc"]], "API Reference": [[2, null]], "Acknowledgements": [[24, "acknowledgements"]], "Adding a spec file": [[1, "adding-a-spec-file"]], "Adding new datasets": [[0, null]], "Adding new methods": [[1, null]], "Advanced": [[24, null]], "Applying apperance embeddings": [[21, "applying-apperance-embeddings"]], "Apptainer": [[25, "apptainer"]], "Avoid copy on caller site": [[16, "avoid-copy-on-caller-site"]], "Avoiding copy on worker site": [[16, "avoiding-copy-on-worker-site"]], "Blender": [[20, "blender"]], "Building the web": [[19, "building-the-web"]], "COLMAP": [[26, "colmap"]], "CamP": [[26, "camp"]], "Camera control": [[30, "camera-control"]], "Citation": [[24, "citation"]], "Communication with the backend": [[16, "communication-with-the-backend"]], "Conda": [[25, "conda"]], "Connecting to the viewer remotely": [[30, "connecting-to-the-viewer-remotely"]], "Contents": [[24, "contents"]], "Creating a new method module": [[1, "creating-a-new-method-module"]], "Creating camera trajectories": [[30, "creating-camera-trajectories"]], "Creating new Dataset instance": [[18, "creating-new-dataset-instance"]], "Creating the download function": [[0, "creating-the-download-function"]], "Creating web demos": [[21, null]], "Custom dataset loader": [[18, null]], "Custom web benchmark": [[19, null]], "Customizing the dataset": [[29, "customizing-the-dataset"]], "Dataset metadata": [[0, "dataset-metadata"]], "Datasets": [[20, null]], "Docker": [[25, "docker"]], "DropGaussian": [[26, "dropgaussian"]], "Exporting a mesh": [[22, "exporting-a-mesh"]], "Exporting a web demo": [[21, "exporting-a-web-demo"]], "Exporting meshes": [[22, null]], "Exporting results tables": [[23, null]], "Exporting/loading camera trajectories": [[30, "exporting-loading-camera-trajectories"]], "GS-W": [[26, "gaussian-splatting-wild"]], "Gaussian Opacity Fields": [[26, "gaussian-opacity-fields"]], "Gaussian Splatting": [[26, "gaussian-splatting"]], "Generating latex tables": [[23, "generating-latex-tables"]], "Generating markdown tables": [[23, "generating-markdown-tables"]], "Getting started": [[30, "getting-started"]], "H3DGS": [[26, "hierarchical-3dgs"]], "Hierarchical 3DGS": [[20, "hierarchical-3dgs"]], "Implementation details": [[30, "implementation-details"]], "Installation": [[25, null]], "Instant NGP": [[26, "instant-ngp"]], "Introduction": [[1, "introduction"], [16, "introduction"], [29, "introduction"]], "Isolated backends": [[16, null]], "K-Planes": [[26, "kplanes"]], "LLFF": [[20, "llff"]], "Launching the viewer": [[28, "launching-the-viewer"]], "Main features": [[24, "main-features"]], "Methods": [[26, null]], "Mip-NeRF 360": [[20, "mipnerf360"], [26, "mipnerf360"]], "Mip-NeRF 360 Sparse": [[20, "mipnerf360-sparse"]], "Mip-Splatting": [[26, "mip-splatting"]], "NeRF": [[26, "nerf"]], "NeRF On-the-go": [[26, "nerfonthego"]], "NeRF-W (reimplementation)": [[26, "nerfw-reimpl"]], "NerfBaselines documentation": [[24, null]], "NerfStudio": [[26, "nerfacto"]], "Nerfstudio": [[20, "nerfstudio"]], "Obtaining camera poses": [[29, "obtaining-camera-poses"]], "Octree-GS": [[26, "octree-gs"]], "PGSR": [[26, "pgsr"]], "Photo Tourism": [[20, "phototourism"]], "Pre-requisites (NVIDIA GPU)": [[25, "pre-requisites-nvidia-gpu"]], "Preparing the data": [[19, "preparing-the-data"]], "Prerequisites": [[19, "prerequisites"]], "Public benchmark results": [[28, "public-benchmark-results"]], "Publishing the dataset": [[0, "publishing-the-dataset"]], "Python tutorial": [[27, null]], "Quickstart": [[28, null]], "Reference": [[24, null]], "Registering the dataset": [[0, "registering-the-dataset"]], "Registering the loader": [[18, "registering-the-loader"]], "Registering the method with NerfBaselines": [[1, "registering-the-method-with-nerfbaselines"]], "Release the method": [[1, "release-the-method"]], "Rendering a camera trajectory": [[28, "rendering-a-camera-trajectory"]], "Rendering images": [[27, "rendering-images"], [28, "rendering-images"]], "Rendering individual images": [[30, "rendering-individual-images"]], "Rendering video": [[30, "rendering-video"]], "Running a local dev server": [[19, "running-a-local-dev-server"]], "Scaffold-GS": [[26, "scaffold-gs"]], "SeaThru-NeRF": [[20, "seathru-nerf"], [26, "seathru-nerf"]], "SparseGS": [[26, "sparsegs"]], "Student Splatting Scooping": [[26, "student-splatting-scooping"]], "Taming 3DGS": [[26, "taming-3dgs"]], "Tanks and Temples": [[20, "tanksandtemples"]], "TensoRF": [[26, "tensorf"]], "Testing the method": [[1, "testing-the-method"]], "Tetra-NeRF": [[26, "tetra-nerf"]], "Training a method": [[27, "training-a-method"]], "Training a model": [[28, "training-a-model"]], "Using Jupyter Notebook or Google Colab": [[30, "using-jupyter-notebook-or-google-colab"]], "Using Trainer class": [[27, "using-trainer-class"]], "Using custom data": [[29, null]], "Viewer": [[30, null]], "Viewing dataset": [[30, "viewing-dataset"]], "WildGaussians": [[26, "wild-gaussians"]], "Writing dataset loader function": [[18, "writing-dataset-loader-function"]], "Zero-copy communication": [[16, "zero-copy-communication"]], "Zip-NeRF": [[20, "zipnerf"], [26, "zipnerf"]], "build": [[17, "nerfbaselines-web-build"]], "dev": [[17, "nerfbaselines-web-dev"]], "download-dataset": [[17, "nerfbaselines-download-dataset"]], "evaluate": [[17, "nerfbaselines-evaluate"]], "export-demo": [[17, "nerfbaselines-export-demo"]], "export-mesh": [[17, "nerfbaselines-export-mesh"]], "fix-checkpoint": [[17, "nerfbaselines-fix-checkpoint"]], "fix-output-artifact": [[17, "nerfbaselines-fix-output-artifact"]], "generate-dataset-results": [[17, "nerfbaselines-generate-dataset-results"]], "gsplat": [[26, "gsplat"]], "install": [[17, "nerfbaselines-install"]], "measure-fps": [[17, "nerfbaselines-measure-fps"]], "nerfbaselines": [[3, null], [17, null]], "nerfbaselines.backends": [[4, null]], "nerfbaselines.cameras": [[5, null]], "nerfbaselines.datasets": [[6, null]], "nerfbaselines.datasets.blender": [[6, "module-nerfbaselines.datasets.blender"]], "nerfbaselines.datasets.bundler": [[6, "module-nerfbaselines.datasets.bundler"]], "nerfbaselines.datasets.colmap": [[6, "module-nerfbaselines.datasets.colmap"]], "nerfbaselines.datasets.hierarchical_3dgs": [[6, "module-nerfbaselines.datasets.hierarchical_3dgs"]], "nerfbaselines.datasets.llff": [[6, "module-nerfbaselines.datasets.llff"]], "nerfbaselines.datasets.mipnerf360": [[6, "module-nerfbaselines.datasets.mipnerf360"]], "nerfbaselines.datasets.mipnerf360_sparse": [[6, "module-nerfbaselines.datasets.mipnerf360_sparse"]], "nerfbaselines.datasets.nerfonthego": [[6, "module-nerfbaselines.datasets.nerfonthego"]], "nerfbaselines.datasets.nerfstudio": [[6, "module-nerfbaselines.datasets.nerfstudio"]], "nerfbaselines.datasets.phototourism": [[6, "module-nerfbaselines.datasets.phototourism"]], "nerfbaselines.datasets.seathru_nerf": [[6, "module-nerfbaselines.datasets.seathru_nerf"]], "nerfbaselines.datasets.tanksandtemples": [[6, "module-nerfbaselines.datasets.tanksandtemples"]], "nerfbaselines.datasets.zipnerf": [[6, "module-nerfbaselines.datasets.zipnerf"]], "nerfbaselines.evaluation": [[7, null]], "nerfbaselines.io": [[8, null]], "nerfbaselines.logging": [[9, null]], "nerfbaselines.metrics": [[10, null]], "nerfbaselines.results": [[11, null]], "nerfbaselines.training": [[12, null]], "nerfbaselines.utils": [[13, null]], "nerfbaselines.viewer": [[14, null]], "nerfbaselines.web": [[15, null]], "render": [[17, "nerfbaselines-render"]], "render-trajectory": [[17, "nerfbaselines-render-trajectory"]], "shell": [[17, "nerfbaselines-shell"]], "test-method": [[17, "nerfbaselines-test-method"]], "train": [[17, "nerfbaselines-train"]], "viewer": [[17, "nerfbaselines-viewer"]], "web": [[17, "nerfbaselines-web"]]}, "docnames": ["adding-new-datasets", "adding-new-methods", "api/modules", "api/nerfbaselines", "api/nerfbaselines.backends", "api/nerfbaselines.cameras", "api/nerfbaselines.datasets", "api/nerfbaselines.evaluation", "api/nerfbaselines.io", "api/nerfbaselines.logging", "api/nerfbaselines.metrics", "api/nerfbaselines.results", "api/nerfbaselines.training", "api/nerfbaselines.utils", "api/nerfbaselines.viewer", "api/nerfbaselines.web", "backends", "cli", "custom-dataset-loader", "custom-web", "datasets", "exporting-demos", "exporting-meshes", "exporting-results-tables", "index", "installation", "methods", "python-tutorial", "quickstart", "using-custom-data", "viewer", "viewer-notebook"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxext.opengraph": 1}, "filenames": ["adding-new-datasets.md", "adding-new-methods.md", "api/modules.rst", "api/nerfbaselines.rst", "api/nerfbaselines.backends.rst", "api/nerfbaselines.cameras.rst", "api/nerfbaselines.datasets.rst", "api/nerfbaselines.evaluation.rst", "api/nerfbaselines.io.rst", "api/nerfbaselines.logging.rst", "api/nerfbaselines.metrics.rst", "api/nerfbaselines.results.rst", "api/nerfbaselines.training.rst", "api/nerfbaselines.utils.rst", "api/nerfbaselines.viewer.rst", "api/nerfbaselines.web.rst", "backends.md", "cli.rst", "custom-dataset-loader.md", "custom-web.md", "datasets.md", "exporting-demos.md", "exporting-meshes.md", "exporting-results-tables.ipynb", "index.md", "installation.md", "methods.md", "python-tutorial.ipynb", "quickstart.md", "using-custom-data.md", "viewer.md", "viewer-notebook.ipynb"], "indexentries": {"--backend": [[17, "cmdoption-nerfbaselines-export-demo-backend", false], [17, "cmdoption-nerfbaselines-export-mesh-backend", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [17, "cmdoption-nerfbaselines-install-backend", false], [17, "cmdoption-nerfbaselines-measure-fps-backend", false], [17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-render-trajectory-backend", false], [17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-test-method-backend", false], [17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-viewer-backend", false]], "--base-path": [[17, "cmdoption-nerfbaselines-web-build-base-path", false]], "--checkpoint": [[17, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [17, "cmdoption-nerfbaselines-export-mesh-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [17, "cmdoption-nerfbaselines-measure-fps-checkpoint", false], [17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false]], "--data": [[17, "cmdoption-nerfbaselines-export-demo-data", false], [17, "cmdoption-nerfbaselines-export-mesh-data", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [17, "cmdoption-nerfbaselines-measure-fps-data", false], [17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-test-method-data", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-viewer-data", false], [17, "cmdoption-nerfbaselines-web-build-data", false], [17, "cmdoption-nerfbaselines-web-dev-data", false]], "--data-indices": [[17, "cmdoption-nerfbaselines-measure-fps-data-indices", false]], "--dataset": [[17, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false]], "--datasets": [[17, "cmdoption-nerfbaselines-web-build-datasets", false], [17, "cmdoption-nerfbaselines-web-dev-datasets", false]], "--disable-output-artifact": [[17, "cmdoption-nerfbaselines-train-disable-output-artifact", false]], "--docs": [[17, "cmdoption-nerfbaselines-web-build-docs", false], [17, "cmdoption-nerfbaselines-web-dev-docs", false]], "--eval-all-iters": [[17, "cmdoption-nerfbaselines-train-eval-all-iters", false]], "--eval-few-iters": [[17, "cmdoption-nerfbaselines-train-eval-few-iters", false]], "--force": [[17, "cmdoption-nerfbaselines-fix-output-artifact-force", false], [17, "cmdoption-nerfbaselines-install-force", false]], "--force-output-artifact": [[17, "cmdoption-nerfbaselines-train-force-output-artifact", false]], "--full": [[17, "cmdoption-nerfbaselines-test-method-full", false]], "--host": [[17, "cmdoption-nerfbaselines-viewer-host", false]], "--inplace": [[17, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false]], "--input": [[17, "cmdoption-nerfbaselines-fix-output-artifact-input", false]], "--logger": [[17, "cmdoption-nerfbaselines-train-logger", false]], "--method": [[17, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [17, "cmdoption-nerfbaselines-install-method", false], [17, "cmdoption-nerfbaselines-shell-method", false], [17, "cmdoption-nerfbaselines-test-method-method", false], [17, "cmdoption-nerfbaselines-train-method", false]], "--method-links": [[17, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false]], "--new-checkpoint": [[17, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false]], "--num-repeats": [[17, "cmdoption-nerfbaselines-measure-fps-num-repeats", false]], "--num-repeats-median": [[17, "cmdoption-nerfbaselines-measure-fps-num-repeats-median", false]], "--output": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-export-mesh-o", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [17, "cmdoption-nerfbaselines-measure-fps-output", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-render-trajectory-output", false], [17, "cmdoption-nerfbaselines-train-output", false], [17, "cmdoption-nerfbaselines-web-build-output", false]], "--output-names": [[17, "cmdoption-nerfbaselines-measure-fps-output-names", false], [17, "cmdoption-nerfbaselines-render-trajectory-output-names", false]], "--output-type": [[17, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false]], "--port": [[17, "cmdoption-nerfbaselines-viewer-port", false], [17, "cmdoption-nerfbaselines-web-dev-port", false]], "--presets": [[17, "cmdoption-nerfbaselines-fix-checkpoint-presets", false], [17, "cmdoption-nerfbaselines-test-method-presets", false], [17, "cmdoption-nerfbaselines-train-presets", false]], "--rebuild-checkpoint": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false]], "--rerun-evaluation": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false]], "--rerun-render": [[17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false]], "--resolution": [[17, "cmdoption-nerfbaselines-measure-fps-resolution", false], [17, "cmdoption-nerfbaselines-render-trajectory-resolution", false]], "--results": [[17, "cmdoption-nerfbaselines-generate-dataset-results-results", false]], "--save-iters": [[17, "cmdoption-nerfbaselines-train-save-iters", false]], "--scenes": [[17, "cmdoption-nerfbaselines-generate-dataset-results-scenes", false]], "--set": [[17, "cmdoption-nerfbaselines-export-demo-set", false], [17, "cmdoption-nerfbaselines-export-mesh-set", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-set", false], [17, "cmdoption-nerfbaselines-test-method-set", false], [17, "cmdoption-nerfbaselines-train-set", false]], "--spec": [[17, "cmdoption-nerfbaselines-install-spec", false]], "--split": [[17, "cmdoption-nerfbaselines-measure-fps-split", false], [17, "cmdoption-nerfbaselines-render-split", false]], "--steps": [[17, "cmdoption-nerfbaselines-test-method-steps", false]], "--train-embedding": [[17, "cmdoption-nerfbaselines-export-demo-train-embedding", false]], "--trajectory": [[17, "cmdoption-nerfbaselines-render-trajectory-trajectory", false]], "--verbose": [[17, "cmdoption-nerfbaselines-export-mesh-v", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "-o": [[17, "cmdoption-nerfbaselines-download-dataset-o", false], [17, "cmdoption-nerfbaselines-evaluate-o", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-export-mesh-o", false]], "-v": [[17, "cmdoption-nerfbaselines-export-mesh-v", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "accumulate_metrics() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.accumulate_metrics", false]], "accumulate_metrics() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.accumulate_metrics", false]], "add_embedding() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_embedding", false]], "add_embedding() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_embedding", false]], "add_embedding() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_embedding", false]], "add_embedding() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_embedding", false]], "add_event() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_event", false]], "add_event() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_event", false]], "add_event() (nerfbaselines.logging.concatlogger method)": [[9, "nerfbaselines.logging.ConcatLogger.add_event", false]], "add_event() (nerfbaselines.logging.tensorboardlogger method)": [[9, "nerfbaselines.logging.TensorboardLogger.add_event", false]], "add_event() (nerfbaselines.logging.wandblogger method)": [[9, "nerfbaselines.logging.WandbLogger.add_event", false]], "add_histogram() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_histogram", false]], "add_histogram() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_histogram", false]], "add_hparams() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.concatlogger method)": [[9, "nerfbaselines.logging.ConcatLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.tensorboardlogger method)": [[9, "nerfbaselines.logging.TensorboardLogger.add_hparams", false]], "add_hparams() (nerfbaselines.logging.wandblogger method)": [[9, "nerfbaselines.logging.WandbLogger.add_hparams", false]], "add_image() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_image", false]], "add_image() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_image", false]], "add_image() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_image", false]], "add_image() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_image", false]], "add_plot() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_plot", false]], "add_plot() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_plot", false]], "add_scalar() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_scalar", false]], "add_scalar() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_scalar", false]], "add_scalar() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_scalar", false]], "add_scalar() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_scalar", false]], "add_text() (nerfbaselines.logger method)": [[3, "nerfbaselines.Logger.add_text", false]], "add_text() (nerfbaselines.loggerevent method)": [[3, "nerfbaselines.LoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.baselogger method)": [[9, "nerfbaselines.logging.BaseLogger.add_text", false]], "add_text() (nerfbaselines.logging.baseloggerevent method)": [[9, "nerfbaselines.logging.BaseLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.tensorboardloggerevent method)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent.add_text", false]], "add_text() (nerfbaselines.logging.wandbloggerevent method)": [[9, "nerfbaselines.logging.WandbLoggerEvent.add_text", false]], "appearance_weights (nerfbaselines.trajectoryframe attribute)": [[3, "nerfbaselines.TrajectoryFrame.appearance_weights", false]], "appearances (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.appearances", false]], "apply() (nerfbaselines.genericcameras method)": [[3, "nerfbaselines.GenericCameras.apply", false]], "apply_colormap() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.apply_colormap", false]], "apply_transform() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.apply_transform", false]], "apptainer (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.apptainer", false]], "apptainerbackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.ApptainerBackend", false]], "apptainerbackendspec (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.ApptainerBackendSpec", false]], "ascending (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.ascending", false]], "backend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.Backend", false]], "backend_allocate() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.backend_allocate", false]], "backend_allocate_ndarray() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.backend_allocate_ndarray", false]], "backends_order (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.backends_order", false]], "baselogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.BaseLogger", false]], "baseloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.BaseLoggerEvent", false]], "batch_size (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.batch_size", false]], "build() (in module nerfbaselines.web)": [[15, "nerfbaselines.web.build", false]], "build_evaluation_protocol() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.build_evaluation_protocol", false]], "build_logger() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.build_logger", false]], "build_method_class() (in module nerfbaselines)": [[3, "nerfbaselines.build_method_class", false]], "build_script (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.build_script", false]], "build_static_viewer() (in module nerfbaselines.viewer)": [[14, "nerfbaselines.viewer.build_static_viewer", false]], "camera_model (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.camera_model", false]], "camera_model_from_int() (in module nerfbaselines)": [[3, "nerfbaselines.camera_model_from_int", false]], "camera_model_to_int() (in module nerfbaselines)": [[3, "nerfbaselines.camera_model_to_int", false]], "camera_models (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.camera_models", false]], "cameras (class in nerfbaselines)": [[3, "nerfbaselines.Cameras", false]], "cameras (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.cameras", false]], "cameras (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.cameras", false]], "can_resume_training (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.can_resume_training", false]], "can_resume_training (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.can_resume_training", false]], "cancel() (nerfbaselines.utils.cancellationtoken method)": [[13, "nerfbaselines.utils.CancellationToken.cancel", false]], "cancel_if_requested() (nerfbaselines.utils.cancellationtoken method)": [[13, "nerfbaselines.utils.CancellationToken.cancel_if_requested", false]], "cancellationtoken (class in nerfbaselines.utils)": [[13, "nerfbaselines.utils.CancellationToken", false]], "cancelledexception": [[13, "nerfbaselines.utils.CancelledException", false]], "cat() (nerfbaselines.genericcameras class method)": [[3, "nerfbaselines.GenericCameras.cat", false]], "clear_cache() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.clear_cache", false]], "close() (nerfbaselines.viewer.viewer method)": [[14, "nerfbaselines.viewer.Viewer.close", false]], "command": [[17, "cmdoption-nerfbaselines-shell-arg-COMMAND", false]], "compile_dataset_results() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.compile_dataset_results", false]], "compute_metrics() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.compute_metrics", false]], "concatlogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.ConcatLogger", false]], "concatloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.ConcatLoggerEvent", false]], "conda (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.conda", false]], "conda_spec (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.conda_spec", false]], "conda_spec (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.conda_spec", false]], "condabackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.CondaBackend", false]], "condabackendspec (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.CondaBackendSpec", false]], "convert_image_dtype() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.convert_image_dtype", false]], "dataset": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false]], "dataset (class in nerfbaselines)": [[3, "nerfbaselines.Dataset", false]], "dataset_index_select() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.dataset_index_select", false]], "dataset_load_features() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.dataset_load_features", false]], "datasetinfo (class in nerfbaselines.results)": [[11, "nerfbaselines.results.DatasetInfo", false]], "datasetloaderspec (class in nerfbaselines)": [[3, "nerfbaselines.DatasetLoaderSpec", false]], "datasetnotfounderror": [[3, "nerfbaselines.DatasetNotFoundError", false]], "datasetspec (class in nerfbaselines)": [[3, "nerfbaselines.DatasetSpec", false]], "datasetspecmetadata (class in nerfbaselines)": [[3, "nerfbaselines.DatasetSpecMetadata", false]], "default_metric (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.default_metric", false]], "default_metric (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.default_metric", false]], "defaultevaluationprotocol (class in nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol", false]], "description (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.description", false]], "description (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.description", false]], "description (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.description", false]], "deserialize_nb_info() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.deserialize_nb_info", false]], "distortion_parameters (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.distortion_parameters", false]], "dmpix_ssim() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.dmpix_ssim", false]], "docker (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.docker", false]], "dockerbackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.DockerBackend", false]], "dockerbackendspec (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.DockerBackendSpec", false]], "download_blender_dataset() (in module nerfbaselines.datasets.blender)": [[6, "nerfbaselines.datasets.blender.download_blender_dataset", false]], "download_dataset() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.download_dataset", false]], "download_dataset_function (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.download_dataset_function", false]], "download_hierarchical_3dgs_dataset() (in module nerfbaselines.datasets.hierarchical_3dgs)": [[6, "nerfbaselines.datasets.hierarchical_3dgs.download_hierarchical_3dgs_dataset", false]], "download_llff_dataset() (in module nerfbaselines.datasets.llff)": [[6, "nerfbaselines.datasets.llff.download_llff_dataset", false]], "download_mipnerf360_dataset() (in module nerfbaselines.datasets.mipnerf360)": [[6, "nerfbaselines.datasets.mipnerf360.download_mipnerf360_dataset", false]], "download_mipnerf360_sparse_dataset() (in module nerfbaselines.datasets.mipnerf360_sparse)": [[6, "nerfbaselines.datasets.mipnerf360_sparse.download_mipnerf360_sparse_dataset", false]], "download_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[6, "nerfbaselines.datasets.nerfstudio.download_nerfstudio_dataset", false]], "download_phototourism_dataset() (in module nerfbaselines.datasets.phototourism)": [[6, "nerfbaselines.datasets.phototourism.download_phototourism_dataset", false]], "download_seathru_nerf_dataset() (in module nerfbaselines.datasets.seathru_nerf)": [[6, "nerfbaselines.datasets.seathru_nerf.download_seathru_nerf_dataset", false]], "download_tanksandtemples_dataset() (in module nerfbaselines.datasets.tanksandtemples)": [[6, "nerfbaselines.datasets.tanksandtemples.download_tanksandtemples_dataset", false]], "download_zipnerf_dataset() (in module nerfbaselines.datasets.zipnerf)": [[6, "nerfbaselines.datasets.zipnerf.download_zipnerf_dataset", false]], "downloaddatasetfunction (class in nerfbaselines)": [[3, "nerfbaselines.DownloadDatasetFunction", false]], "embedding (nerfbaselines.optimizeembeddingoutput attribute)": [[3, "nerfbaselines.OptimizeEmbeddingOutput.embedding", false]], "embedding (nerfbaselines.renderoptions attribute)": [[3, "nerfbaselines.RenderOptions.embedding", false]], "embedding (nerfbaselines.trajectoryframeappearance attribute)": [[3, "nerfbaselines.TrajectoryFrameAppearance.embedding", false]], "embedding_train_index (nerfbaselines.trajectoryframeappearance attribute)": [[3, "nerfbaselines.TrajectoryFrameAppearance.embedding_train_index", false]], "environment_name (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.condabackendspec attribute)": [[4, "nerfbaselines.backends.CondaBackendSpec.environment_name", false]], "environment_name (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.environment_name", false]], "eval_all() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.eval_all", false]], "eval_all() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.eval_all", false]], "eval_batch_size (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.eval_batch_size", false]], "eval_few() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.eval_few", false]], "eval_few() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.eval_few", false]], "evaluate() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.evaluate", false]], "evaluate() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.evaluate", false]], "evaluate() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.evaluate", false]], "evaluation_protocol (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.evaluation_protocol", false]], "evaluation_protocol_class (nerfbaselines.evaluationprotocolspec attribute)": [[3, "nerfbaselines.EvaluationProtocolSpec.evaluation_protocol_class", false]], "evaluationprotocol (class in nerfbaselines)": [[3, "nerfbaselines.EvaluationProtocol", false]], "evaluationprotocolspec (class in nerfbaselines)": [[3, "nerfbaselines.EvaluationProtocolSpec", false]], "every_iters() (nerfbaselines.utils.indices class method)": [[13, "nerfbaselines.utils.Indices.every_iters", false]], "export_viewer_dataset() (in module nerfbaselines.viewer)": [[14, "nerfbaselines.viewer.export_viewer_dataset", false]], "format_duration() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.format_duration", false]], "format_memory() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.format_memory", false]], "fps (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.fps", false]], "frames (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.frames", false]], "genericcameras (class in nerfbaselines)": [[3, "nerfbaselines.GenericCameras", false]], "get_backend() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_backend", false]], "get_checkpoint_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_checkpoint_sha", false]], "get_dataset_info() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.get_dataset_info", false]], "get_dataset_loader_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_dataset_loader_spec", false]], "get_dataset_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_dataset_spec", false]], "get_evaluation_protocol_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_evaluation_protocol_spec", false]], "get_image_pixels() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.get_image_pixels", false]], "get_implemented_backends() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_implemented_backends", false]], "get_info() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.get_info", false]], "get_logger() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.get_logger", false]], "get_logger_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_logger_spec", false]], "get_method_info() (nerfbaselines.method class method)": [[3, "nerfbaselines.Method.get_method_info", false]], "get_method_info_from_spec() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.get_method_info_from_spec", false]], "get_method_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_method_sha", false]], "get_method_spec() (in module nerfbaselines)": [[3, "nerfbaselines.get_method_spec", false]], "get_metrics_hash() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_metrics_hash", false]], "get_mounts() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.get_mounts", false]], "get_name() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.get_name", false]], "get_name() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.get_name", false]], "get_palette() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.get_palette", false]], "get_predictions_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_predictions_sha", false]], "get_presets_and_config_overrides() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.get_presets_and_config_overrides", false]], "get_rays() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.get_rays", false]], "get_resources_utilization_info() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.get_resources_utilization_info", false]], "get_supported_dataset_loaders() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_dataset_loaders", false]], "get_supported_datasets() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_datasets", false]], "get_supported_evaluation_protocols() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_evaluation_protocols", false]], "get_supported_loggers() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_loggers", false]], "get_supported_methods() (in module nerfbaselines)": [[3, "nerfbaselines.get_supported_methods", false]], "get_supported_palette_names() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.get_supported_palette_names", false]], "get_torch_checkpoint_sha() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.get_torch_checkpoint_sha", false]], "get_train_embedding() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.get_train_embedding", false]], "get_transform_and_scale() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.get_transform_and_scale", false]], "get_viewer_params_from_dataset_metadata() (in module nerfbaselines.viewer)": [[14, "nerfbaselines.viewer.get_viewer_params_from_dataset_metadata", false]], "get_viewer_params_from_nb_info() (in module nerfbaselines.viewer)": [[14, "nerfbaselines.viewer.get_viewer_params_from_nb_info", false]], "gpu_memory (nerfbaselines.training.resourcesutilizationinfo attribute)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo.gpu_memory", false]], "gpu_name (nerfbaselines.training.resourcesutilizationinfo attribute)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo.gpu_name", false]], "home_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.home_path", false]], "home_path (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.home_path", false]], "hparams (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.hparams", false]], "id (nerfbaselines.datasetloaderspec attribute)": [[3, "nerfbaselines.DatasetLoaderSpec.id", false]], "id (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.id", false]], "id (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.id", false]], "id (nerfbaselines.evaluationprotocolspec attribute)": [[3, "nerfbaselines.EvaluationProtocolSpec.id", false]], "id (nerfbaselines.loggerspec attribute)": [[3, "nerfbaselines.LoggerSpec.id", false]], "id (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.id", false]], "id (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.id", false]], "id (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.id", false]], "id (nerfbaselines.results.sceneinfo attribute)": [[11, "nerfbaselines.results.SceneInfo.id", false]], "image (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.image", false]], "image (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.image", false]], "image_paths (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.image_paths", false]], "image_paths (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.image_paths", false]], "image_paths_root (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.image_paths_root", false]], "image_paths_root (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.image_paths_root", false]], "image_size (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.image_size", false]], "image_sizes (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.image_sizes", false]], "image_to_srgb() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.image_to_srgb", false]], "images (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.images", false]], "images (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.images", false]], "images_points2d_xy (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.images_points2D_xy", false]], "images_points2d_xy (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.images_points2D_xy", false]], "images_points3d_indices (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.images_points3D_indices", false]], "images_points3d_indices (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.images_points3D_indices", false]], "implementation_status (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.implementation_status", false]], "indices (class in nerfbaselines.utils)": [[13, "nerfbaselines.utils.Indices", false]], "install() (nerfbaselines.backends.apptainerbackend method)": [[4, "nerfbaselines.backends.ApptainerBackend.install", false]], "install() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.install", false]], "install() (nerfbaselines.backends.condabackend method)": [[4, "nerfbaselines.backends.CondaBackend.install", false]], "install() (nerfbaselines.backends.dockerbackend method)": [[4, "nerfbaselines.backends.DockerBackend.install", false]], "install_script (nerfbaselines.backends.condabackendspec attribute)": [[4, "nerfbaselines.backends.CondaBackendSpec.install_script", false]], "instance_call() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.instance_call", false]], "instance_call() (nerfbaselines.backends.simplebackend method)": [[4, "nerfbaselines.backends.SimpleBackend.instance_call", false]], "instance_del() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.instance_del", false]], "instance_del() (nerfbaselines.backends.simplebackend method)": [[4, "nerfbaselines.backends.SimpleBackend.instance_del", false]], "interpolate_bilinear() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.interpolate_bilinear", false]], "intrinsics (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.intrinsics", false]], "intrinsics (nerfbaselines.trajectoryframe attribute)": [[3, "nerfbaselines.TrajectoryFrame.intrinsics", false]], "invert_transform() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.invert_transform", false]], "item() (nerfbaselines.genericcameras method)": [[3, "nerfbaselines.GenericCameras.item", false]], "licenses (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.licenses", false]], "licenses (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.licenses", false]], "licensespec (class in nerfbaselines)": [[3, "nerfbaselines.LicenseSpec", false]], "link (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.link", false]], "link (nerfbaselines.outputartifact attribute)": [[3, "nerfbaselines.OutputArtifact.link", false]], "link (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.link", false]], "link (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.link", false]], "load_blender_dataset() (in module nerfbaselines.datasets.blender)": [[6, "nerfbaselines.datasets.blender.load_blender_dataset", false]], "load_bundler_dataset() (in module nerfbaselines.datasets.bundler)": [[6, "nerfbaselines.datasets.bundler.load_bundler_dataset", false]], "load_checkpoint() (in module nerfbaselines)": [[3, "nerfbaselines.load_checkpoint", false]], "load_colmap_dataset() (in module nerfbaselines.datasets.colmap)": [[6, "nerfbaselines.datasets.colmap.load_colmap_dataset", false]], "load_dataset() (in module nerfbaselines.datasets)": [[6, "nerfbaselines.datasets.load_dataset", false]], "load_dataset_function (nerfbaselines.datasetloaderspec attribute)": [[3, "nerfbaselines.DatasetLoaderSpec.load_dataset_function", false]], "load_llff_dataset() (in module nerfbaselines.datasets.llff)": [[6, "nerfbaselines.datasets.llff.load_llff_dataset", false]], "load_metrics_from_results() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.load_metrics_from_results", false]], "load_nerfonthego_dataset() (in module nerfbaselines.datasets.nerfonthego)": [[6, "nerfbaselines.datasets.nerfonthego.load_nerfonthego_dataset", false]], "load_nerfstudio_dataset() (in module nerfbaselines.datasets.nerfstudio)": [[6, "nerfbaselines.datasets.nerfstudio.load_nerfstudio_dataset", false]], "load_seathru_nerf_dataset() (in module nerfbaselines.datasets.seathru_nerf)": [[6, "nerfbaselines.datasets.seathru_nerf.load_seathru_nerf_dataset", false]], "load_trajectory() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.load_trajectory", false]], "loaddatasetfunction (class in nerfbaselines)": [[3, "nerfbaselines.LoadDatasetFunction", false]], "loaded_checkpoint (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.loaded_checkpoint", false]], "loaded_step (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.loaded_step", false]], "log_metrics() (in module nerfbaselines.logging)": [[9, "nerfbaselines.logging.log_metrics", false]], "logger (class in nerfbaselines)": [[3, "nerfbaselines.Logger", false]], "logger_class (nerfbaselines.loggerspec attribute)": [[3, "nerfbaselines.LoggerSpec.logger_class", false]], "loggerevent (class in nerfbaselines)": [[3, "nerfbaselines.LoggerEvent", false]], "loggerspec (class in nerfbaselines)": [[3, "nerfbaselines.LoggerSpec", false]], "lpips() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.lpips", false]], "lpips_alex() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.lpips_alex", false]], "lpips_vgg() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.lpips_vgg", false]], "mae() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.mae", false]], "make_image_grid() (in module nerfbaselines.training)": [[12, "nerfbaselines.training.make_image_grid", false]], "mask_paths (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.mask_paths", false]], "mask_paths (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.mask_paths", false]], "mask_paths_root (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.mask_paths_root", false]], "mask_paths_root (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.mask_paths_root", false]], "masks (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.masks", false]], "masks (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.masks", false]], "memory (nerfbaselines.training.resourcesutilizationinfo attribute)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo.memory", false]], "merge_viewer_params() (in module nerfbaselines.viewer)": [[14, "nerfbaselines.viewer.merge_viewer_params", false]], "metadata (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.metadata", false]], "metadata (nerfbaselines.datasetspec attribute)": [[3, "nerfbaselines.DatasetSpec.metadata", false]], "metadata (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.metadata", false]], "metadata (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.metadata", false]], "metadata (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.metadata", false]], "method (class in nerfbaselines)": [[3, "nerfbaselines.Method", false]], "method_class (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.method_class", false]], "method_id (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.method_id", false]], "method_id (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.method_id", false]], "methodinfo (class in nerfbaselines)": [[3, "nerfbaselines.MethodInfo", false]], "methodspec (class in nerfbaselines)": [[3, "nerfbaselines.MethodSpec", false]], "metricinfo (class in nerfbaselines.results)": [[11, "nerfbaselines.results.MetricInfo", false]], "metrics (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.metrics", false]], "metrics (nerfbaselines.optimizeembeddingoutput attribute)": [[3, "nerfbaselines.OptimizeEmbeddingOutput.metrics", false]], "metrics (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.metrics", false]], "metricsaccumulator (class in nerfbaselines.training)": [[12, "nerfbaselines.training.MetricsAccumulator", false]], "modelinfo (class in nerfbaselines)": [[3, "nerfbaselines.ModelInfo", false]], "module": [[3, "module-nerfbaselines", false], [4, "module-nerfbaselines.backends", false], [5, "module-nerfbaselines.cameras", false], [6, "module-nerfbaselines.datasets", false], [6, "module-nerfbaselines.datasets.blender", false], [6, "module-nerfbaselines.datasets.bundler", false], [6, "module-nerfbaselines.datasets.colmap", false], [6, "module-nerfbaselines.datasets.hierarchical_3dgs", false], [6, "module-nerfbaselines.datasets.llff", false], [6, "module-nerfbaselines.datasets.mipnerf360", false], [6, "module-nerfbaselines.datasets.mipnerf360_sparse", false], [6, "module-nerfbaselines.datasets.nerfonthego", false], [6, "module-nerfbaselines.datasets.nerfstudio", false], [6, "module-nerfbaselines.datasets.phototourism", false], [6, "module-nerfbaselines.datasets.seathru_nerf", false], [6, "module-nerfbaselines.datasets.tanksandtemples", false], [6, "module-nerfbaselines.datasets.zipnerf", false], [7, "module-nerfbaselines.evaluation", false], [8, "module-nerfbaselines.io", false], [9, "module-nerfbaselines.logging", false], [10, "module-nerfbaselines.metrics", false], [11, "module-nerfbaselines.results", false], [12, "module-nerfbaselines.training", false], [13, "module-nerfbaselines.utils", false], [14, "module-nerfbaselines.viewer", false], [15, "module-nerfbaselines.web", false]], "mount() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.mount", false]], "mse() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.mse", false]], "name (nerfbaselines.backends.apptainerbackend attribute)": [[4, "nerfbaselines.backends.ApptainerBackend.name", false]], "name (nerfbaselines.backends.backend attribute)": [[4, "nerfbaselines.backends.Backend.name", false]], "name (nerfbaselines.backends.condabackend attribute)": [[4, "nerfbaselines.backends.CondaBackend.name", false]], "name (nerfbaselines.backends.dockerbackend attribute)": [[4, "nerfbaselines.backends.DockerBackend.name", false]], "name (nerfbaselines.backends.simplebackend attribute)": [[4, "nerfbaselines.backends.SimpleBackend.name", false]], "name (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.name", false]], "name (nerfbaselines.licensespec attribute)": [[3, "nerfbaselines.LicenseSpec.name", false]], "name (nerfbaselines.renderoutputtype attribute)": [[3, "nerfbaselines.RenderOutputType.name", false]], "name (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.name", false]], "name (nerfbaselines.results.metricinfo attribute)": [[11, "nerfbaselines.results.MetricInfo.name", false]], "name (nerfbaselines.results.sceneinfo attribute)": [[11, "nerfbaselines.results.SceneInfo.name", false]], "nears_fars (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.nears_fars", false]], "nerfbaselines": [[3, "module-nerfbaselines", false]], "nerfbaselines-download-dataset command line option": [[17, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", false], [17, "cmdoption-nerfbaselines-download-dataset-o", false]], "nerfbaselines-evaluate command line option": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false], [17, "cmdoption-nerfbaselines-evaluate-o", false]], "nerfbaselines-export-demo command line option": [[17, "cmdoption-nerfbaselines-export-demo-backend", false], [17, "cmdoption-nerfbaselines-export-demo-checkpoint", false], [17, "cmdoption-nerfbaselines-export-demo-data", false], [17, "cmdoption-nerfbaselines-export-demo-o", false], [17, "cmdoption-nerfbaselines-export-demo-set", false], [17, "cmdoption-nerfbaselines-export-demo-train-embedding", false]], "nerfbaselines-export-mesh command line option": [[17, "cmdoption-nerfbaselines-export-mesh-backend", false], [17, "cmdoption-nerfbaselines-export-mesh-checkpoint", false], [17, "cmdoption-nerfbaselines-export-mesh-data", false], [17, "cmdoption-nerfbaselines-export-mesh-o", false], [17, "cmdoption-nerfbaselines-export-mesh-set", false], [17, "cmdoption-nerfbaselines-export-mesh-v", false]], "nerfbaselines-fix-checkpoint command line option": [[17, "cmdoption-nerfbaselines-fix-checkpoint-backend", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-data", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-method", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-presets", false], [17, "cmdoption-nerfbaselines-fix-checkpoint-set", false]], "nerfbaselines-fix-output-artifact command line option": [[17, "cmdoption-nerfbaselines-fix-output-artifact-backend", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-data", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-force", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-inplace", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-input", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-method", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-output", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", false], [17, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", false]], "nerfbaselines-generate-dataset-results command line option": [[17, "cmdoption-nerfbaselines-generate-dataset-results-dataset", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-method-links", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-output-type", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-results", false], [17, "cmdoption-nerfbaselines-generate-dataset-results-scenes", false]], "nerfbaselines-install command line option": [[17, "cmdoption-nerfbaselines-install-backend", false], [17, "cmdoption-nerfbaselines-install-force", false], [17, "cmdoption-nerfbaselines-install-method", false], [17, "cmdoption-nerfbaselines-install-spec", false]], "nerfbaselines-measure-fps command line option": [[17, "cmdoption-nerfbaselines-measure-fps-backend", false], [17, "cmdoption-nerfbaselines-measure-fps-checkpoint", false], [17, "cmdoption-nerfbaselines-measure-fps-data", false], [17, "cmdoption-nerfbaselines-measure-fps-data-indices", false], [17, "cmdoption-nerfbaselines-measure-fps-num-repeats", false], [17, "cmdoption-nerfbaselines-measure-fps-num-repeats-median", false], [17, "cmdoption-nerfbaselines-measure-fps-output", false], [17, "cmdoption-nerfbaselines-measure-fps-output-names", false], [17, "cmdoption-nerfbaselines-measure-fps-resolution", false], [17, "cmdoption-nerfbaselines-measure-fps-split", false]], "nerfbaselines-render command line option": [[17, "cmdoption-nerfbaselines-render-backend", false], [17, "cmdoption-nerfbaselines-render-checkpoint", false], [17, "cmdoption-nerfbaselines-render-data", false], [17, "cmdoption-nerfbaselines-render-output", false], [17, "cmdoption-nerfbaselines-render-split", false]], "nerfbaselines-render-trajectory command line option": [[17, "cmdoption-nerfbaselines-render-trajectory-backend", false], [17, "cmdoption-nerfbaselines-render-trajectory-checkpoint", false], [17, "cmdoption-nerfbaselines-render-trajectory-output", false], [17, "cmdoption-nerfbaselines-render-trajectory-output-names", false], [17, "cmdoption-nerfbaselines-render-trajectory-resolution", false], [17, "cmdoption-nerfbaselines-render-trajectory-trajectory", false]], "nerfbaselines-shell command line option": [[17, "cmdoption-nerfbaselines-shell-arg-COMMAND", false], [17, "cmdoption-nerfbaselines-shell-backend", false], [17, "cmdoption-nerfbaselines-shell-method", false]], "nerfbaselines-test-method command line option": [[17, "cmdoption-nerfbaselines-test-method-backend", false], [17, "cmdoption-nerfbaselines-test-method-data", false], [17, "cmdoption-nerfbaselines-test-method-full", false], [17, "cmdoption-nerfbaselines-test-method-method", false], [17, "cmdoption-nerfbaselines-test-method-presets", false], [17, "cmdoption-nerfbaselines-test-method-set", false], [17, "cmdoption-nerfbaselines-test-method-steps", false], [17, "cmdoption-nerfbaselines-test-method-v", false]], "nerfbaselines-train command line option": [[17, "cmdoption-nerfbaselines-train-backend", false], [17, "cmdoption-nerfbaselines-train-checkpoint", false], [17, "cmdoption-nerfbaselines-train-data", false], [17, "cmdoption-nerfbaselines-train-disable-output-artifact", false], [17, "cmdoption-nerfbaselines-train-eval-all-iters", false], [17, "cmdoption-nerfbaselines-train-eval-few-iters", false], [17, "cmdoption-nerfbaselines-train-force-output-artifact", false], [17, "cmdoption-nerfbaselines-train-logger", false], [17, "cmdoption-nerfbaselines-train-method", false], [17, "cmdoption-nerfbaselines-train-output", false], [17, "cmdoption-nerfbaselines-train-presets", false], [17, "cmdoption-nerfbaselines-train-save-iters", false], [17, "cmdoption-nerfbaselines-train-set", false]], "nerfbaselines-viewer command line option": [[17, "cmdoption-nerfbaselines-viewer-backend", false], [17, "cmdoption-nerfbaselines-viewer-checkpoint", false], [17, "cmdoption-nerfbaselines-viewer-data", false], [17, "cmdoption-nerfbaselines-viewer-host", false], [17, "cmdoption-nerfbaselines-viewer-port", false]], "nerfbaselines-web-build command line option": [[17, "cmdoption-nerfbaselines-web-build-base-path", false], [17, "cmdoption-nerfbaselines-web-build-data", false], [17, "cmdoption-nerfbaselines-web-build-datasets", false], [17, "cmdoption-nerfbaselines-web-build-docs", false], [17, "cmdoption-nerfbaselines-web-build-output", false]], "nerfbaselines-web-dev command line option": [[17, "cmdoption-nerfbaselines-web-dev-data", false], [17, "cmdoption-nerfbaselines-web-dev-datasets", false], [17, "cmdoption-nerfbaselines-web-dev-docs", false], [17, "cmdoption-nerfbaselines-web-dev-port", false]], "nerfbaselines.backends": [[4, "module-nerfbaselines.backends", false]], "nerfbaselines.cameras": [[5, "module-nerfbaselines.cameras", false]], "nerfbaselines.datasets": [[6, "module-nerfbaselines.datasets", false]], "nerfbaselines.datasets.blender": [[6, "module-nerfbaselines.datasets.blender", false]], "nerfbaselines.datasets.bundler": [[6, "module-nerfbaselines.datasets.bundler", false]], "nerfbaselines.datasets.colmap": [[6, "module-nerfbaselines.datasets.colmap", false]], "nerfbaselines.datasets.hierarchical_3dgs": [[6, "module-nerfbaselines.datasets.hierarchical_3dgs", false]], "nerfbaselines.datasets.llff": [[6, "module-nerfbaselines.datasets.llff", false]], "nerfbaselines.datasets.mipnerf360": [[6, "module-nerfbaselines.datasets.mipnerf360", false]], "nerfbaselines.datasets.mipnerf360_sparse": [[6, "module-nerfbaselines.datasets.mipnerf360_sparse", false]], "nerfbaselines.datasets.nerfonthego": [[6, "module-nerfbaselines.datasets.nerfonthego", false]], "nerfbaselines.datasets.nerfstudio": [[6, "module-nerfbaselines.datasets.nerfstudio", false]], "nerfbaselines.datasets.phototourism": [[6, "module-nerfbaselines.datasets.phototourism", false]], "nerfbaselines.datasets.seathru_nerf": [[6, "module-nerfbaselines.datasets.seathru_nerf", false]], "nerfbaselines.datasets.tanksandtemples": [[6, "module-nerfbaselines.datasets.tanksandtemples", false]], "nerfbaselines.datasets.zipnerf": [[6, "module-nerfbaselines.datasets.zipnerf", false]], "nerfbaselines.evaluation": [[7, "module-nerfbaselines.evaluation", false]], "nerfbaselines.io": [[8, "module-nerfbaselines.io", false]], "nerfbaselines.logging": [[9, "module-nerfbaselines.logging", false]], "nerfbaselines.metrics": [[10, "module-nerfbaselines.metrics", false]], "nerfbaselines.results": [[11, "module-nerfbaselines.results", false]], "nerfbaselines.training": [[12, "module-nerfbaselines.training", false]], "nerfbaselines.utils": [[13, "module-nerfbaselines.utils", false]], "nerfbaselines.viewer": [[14, "module-nerfbaselines.viewer", false]], "nerfbaselines.web": [[15, "module-nerfbaselines.web", false]], "nerfevaluationprotocol (class in nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.NerfEvaluationProtocol", false]], "nerfwevaluationprotocol (class in nerfbaselines.datasets.phototourism)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol", false]], "new_cameras() (in module nerfbaselines)": [[3, "nerfbaselines.new_cameras", false]], "new_dataset() (in module nerfbaselines)": [[3, "nerfbaselines.new_dataset", false]], "new_nb_info() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.new_nb_info", false]], "num_iterations (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.num_iterations", false]], "num_iterations (nerfbaselines.training.trainer property)": [[12, "nerfbaselines.training.Trainer.num_iterations", false]], "numpy_from_base64() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.numpy_from_base64", false]], "numpy_to_base64() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.numpy_to_base64", false]], "open_any() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.open_any", false]], "open_any_directory() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.open_any_directory", false]], "optimize_embedding() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.optimize_embedding", false]], "optimizeembeddingoutput (class in nerfbaselines)": [[3, "nerfbaselines.OptimizeEmbeddingOutput", false]], "output_artifacts (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.output_artifacts", false]], "output_type_dtypes (nerfbaselines.renderoptions attribute)": [[3, "nerfbaselines.RenderOptions.output_type_dtypes", false]], "outputartifact (class in nerfbaselines)": [[3, "nerfbaselines.OutputArtifact", false]], "outputs (nerfbaselines.renderoptions attribute)": [[3, "nerfbaselines.RenderOptions.outputs", false]], "pad_poses() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.pad_poses", false]], "padded_stack() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.padded_stack", false]], "paper_authors (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.paper_authors", false]], "paper_authors (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.paper_authors", false]], "paper_link (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.paper_link", false]], "paper_link (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.paper_link", false]], "paper_title (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.paper_title", false]], "paper_title (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.paper_title", false]], "path_is_video() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.path_is_video", false]], "points3d_error (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.points3D_error", false]], "points3d_error (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.points3D_error", false]], "points3d_rgb (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.points3D_rgb", false]], "points3d_rgb (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.points3D_rgb", false]], "points3d_xyz (nerfbaselines.dataset attribute)": [[3, "nerfbaselines.Dataset.points3D_xyz", false]], "points3d_xyz (nerfbaselines.unloadeddataset attribute)": [[3, "nerfbaselines.UnloadedDataset.points3D_xyz", false]], "pop() (nerfbaselines.training.metricsaccumulator method)": [[12, "nerfbaselines.training.MetricsAccumulator.pop", false]], "port (nerfbaselines.viewer.viewer property)": [[14, "nerfbaselines.viewer.Viewer.port", false]], "pose (nerfbaselines.trajectoryframe attribute)": [[3, "nerfbaselines.TrajectoryFrame.pose", false]], "poses (nerfbaselines.genericcameras property)": [[3, "nerfbaselines.GenericCameras.poses", false]], "predictions": [[17, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", false]], "presets (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.presets", false]], "project() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.project", false]], "psnr() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.psnr", false]], "python_path (nerfbaselines.backends.apptainerbackendspec attribute)": [[4, "nerfbaselines.backends.ApptainerBackendSpec.python_path", false]], "python_path (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.python_path", false]], "python_version (nerfbaselines.backends.condabackendspec attribute)": [[4, "nerfbaselines.backends.CondaBackendSpec.python_version", false]], "quaternion_conjugate() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.quaternion_conjugate", false]], "quaternion_multiply() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.quaternion_multiply", false]], "quaternion_to_rotation_matrix() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.quaternion_to_rotation_matrix", false]], "read_image() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.read_image", false]], "read_mask() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.read_mask", false]], "read_tensorboard_metrics() (in module nerfbaselines.logging)": [[9, "nerfbaselines.logging.read_tensorboard_metrics", false]], "register() (in module nerfbaselines)": [[3, "nerfbaselines.register", false]], "render() (nerfbaselines.datasets.phototourism.nerfwevaluationprotocol method)": [[6, "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol.render", false]], "render() (nerfbaselines.evaluation.defaultevaluationprotocol method)": [[7, "nerfbaselines.evaluation.DefaultEvaluationProtocol.render", false]], "render() (nerfbaselines.evaluationprotocol method)": [[3, "nerfbaselines.EvaluationProtocol.render", false]], "render() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.render", false]], "render_all_images() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.render_all_images", false]], "render_frames() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.render_frames", false]], "render_latex_dataset_results_table() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.render_latex_dataset_results_table", false]], "render_markdown_dataset_results_table() (in module nerfbaselines.results)": [[11, "nerfbaselines.results.render_markdown_dataset_results_table", false]], "render_output (nerfbaselines.optimizeembeddingoutput attribute)": [[3, "nerfbaselines.OptimizeEmbeddingOutput.render_output", false]], "renderoptions (class in nerfbaselines)": [[3, "nerfbaselines.RenderOptions", false]], "renderoutputtype (class in nerfbaselines)": [[3, "nerfbaselines.RenderOutputType", false]], "replace() (nerfbaselines.genericcameras method)": [[3, "nerfbaselines.GenericCameras.replace", false]], "replace_user (nerfbaselines.backends.dockerbackendspec attribute)": [[4, "nerfbaselines.backends.DockerBackendSpec.replace_user", false]], "required_features (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.required_features", false]], "required_features (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.required_features", false]], "required_features (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.required_features", false]], "resourcesutilizationinfo (class in nerfbaselines.training)": [[12, "nerfbaselines.training.ResourcesUtilizationInfo", false]], "rotation_matrix_to_quaternion() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.rotation_matrix_to_quaternion", false]], "run() (nerfbaselines.viewer.viewer method)": [[14, "nerfbaselines.viewer.Viewer.run", false]], "run_inside_eval_container() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.run_inside_eval_container", false]], "run_on_host() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.run_on_host", false]], "save() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.save", false]], "save() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.save", false]], "save_cameras_npz() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_cameras_npz", false]], "save_depth() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_depth", false]], "save_evaluation_results() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_evaluation_results", false]], "save_image() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_image", false]], "save_mask() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_mask", false]], "save_output_artifact() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_output_artifact", false]], "save_predictions() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_predictions", false]], "save_trajectory() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.save_trajectory", false]], "sceneinfo (class in nerfbaselines.results)": [[11, "nerfbaselines.results.SceneInfo", false]], "scenes (nerfbaselines.datasetspecmetadata attribute)": [[3, "nerfbaselines.DatasetSpecMetadata.scenes", false]], "scenes (nerfbaselines.results.datasetinfo attribute)": [[11, "nerfbaselines.results.DatasetInfo.scenes", false]], "serialize_evaluation_results() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.serialize_evaluation_results", false]], "serialize_nb_info() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.serialize_nb_info", false]], "shell() (nerfbaselines.backends.apptainerbackend method)": [[4, "nerfbaselines.backends.ApptainerBackend.shell", false]], "shell() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.shell", false]], "shell() (nerfbaselines.backends.condabackend method)": [[4, "nerfbaselines.backends.CondaBackend.shell", false]], "shell() (nerfbaselines.backends.dockerbackend method)": [[4, "nerfbaselines.backends.DockerBackend.shell", false]], "show_in_notebook() (nerfbaselines.viewer.viewer method)": [[14, "nerfbaselines.viewer.Viewer.show_in_notebook", false]], "simplebackend (class in nerfbaselines.backends)": [[4, "nerfbaselines.backends.SimpleBackend", false]], "source (nerfbaselines.trajectory attribute)": [[3, "nerfbaselines.Trajectory.source", false]], "ssim() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.ssim", false]], "start_dev_server() (in module nerfbaselines.web)": [[15, "nerfbaselines.web.start_dev_server", false]], "static_call() (nerfbaselines.backends.backend method)": [[4, "nerfbaselines.backends.Backend.static_call", false]], "static_call() (nerfbaselines.backends.simplebackend method)": [[4, "nerfbaselines.backends.SimpleBackend.static_call", false]], "subsample_metrics() (in module nerfbaselines.logging)": [[9, "nerfbaselines.logging.subsample_metrics", false]], "supported_camera_models (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.supported_camera_models", false]], "supported_camera_models (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.supported_camera_models", false]], "supported_camera_models (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.supported_camera_models", false]], "supported_outputs (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.supported_outputs", false]], "supported_outputs (nerfbaselines.methodspec attribute)": [[3, "nerfbaselines.MethodSpec.supported_outputs", false]], "supported_outputs (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.supported_outputs", false]], "tensorboardlogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.TensorboardLogger", false]], "tensorboardloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.TensorboardLoggerEvent", false]], "torchmetrics_ssim() (in module nerfbaselines.metrics)": [[10, "nerfbaselines.metrics.torchmetrics_ssim", false]], "train() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.train", false]], "train_iteration() (nerfbaselines.method method)": [[3, "nerfbaselines.Method.train_iteration", false]], "train_iteration() (nerfbaselines.training.trainer method)": [[12, "nerfbaselines.training.Trainer.train_iteration", false]], "trainer (class in nerfbaselines.training)": [[12, "nerfbaselines.training.Trainer", false]], "trajectory (class in nerfbaselines)": [[3, "nerfbaselines.Trajectory", false]], "trajectory_get_cameras() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.trajectory_get_cameras", false]], "trajectory_get_embeddings() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.trajectory_get_embeddings", false]], "trajectoryframe (class in nerfbaselines)": [[3, "nerfbaselines.TrajectoryFrame", false]], "trajectoryframeappearance (class in nerfbaselines)": [[3, "nerfbaselines.TrajectoryFrameAppearance", false]], "type (nerfbaselines.renderoutputtype attribute)": [[3, "nerfbaselines.RenderOutputType.type", false]], "undistort_camera() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.undistort_camera", false]], "unloadeddataset (class in nerfbaselines)": [[3, "nerfbaselines.UnloadedDataset", false]], "unpad_poses() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.unpad_poses", false]], "unproject() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.unproject", false]], "update() (nerfbaselines.training.metricsaccumulator method)": [[12, "nerfbaselines.training.MetricsAccumulator.update", false]], "update() (nerfbaselines.viewer.viewer method)": [[14, "nerfbaselines.viewer.Viewer.update", false]], "url (nerfbaselines.licensespec attribute)": [[3, "nerfbaselines.LicenseSpec.url", false]], "viewer (class in nerfbaselines.viewer)": [[14, "nerfbaselines.viewer.Viewer", false]], "viewer_default_resolution (nerfbaselines.methodinfo attribute)": [[3, "nerfbaselines.MethodInfo.viewer_default_resolution", false]], "viewer_default_resolution (nerfbaselines.modelinfo attribute)": [[3, "nerfbaselines.ModelInfo.viewer_default_resolution", false]], "visualize_depth() (in module nerfbaselines.utils)": [[13, "nerfbaselines.utils.visualize_depth", false]], "wandblogger (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.WandbLogger", false]], "wandbloggerevent (class in nerfbaselines.logging)": [[9, "nerfbaselines.logging.WandbLoggerEvent", false]], "warp_image_between_cameras() (in module nerfbaselines.cameras)": [[5, "nerfbaselines.cameras.warp_image_between_cameras", false]], "wget() (in module nerfbaselines.io)": [[8, "nerfbaselines.io.wget", false]], "with_supported_camera_models() (in module nerfbaselines.evaluation)": [[7, "nerfbaselines.evaluation.with_supported_camera_models", false]], "with_total() (nerfbaselines.utils.indices method)": [[13, "nerfbaselines.utils.Indices.with_total", false]], "write_dataset_pointcloud() (in module nerfbaselines.viewer)": [[14, "nerfbaselines.viewer.write_dataset_pointcloud", false]], "zero_copy() (in module nerfbaselines.backends)": [[4, "nerfbaselines.backends.zero_copy", false]]}, "objects": {"": [[3, 0, 0, "-", "nerfbaselines"]], "nerfbaselines": [[3, 1, 1, "", "Cameras"], [3, 1, 1, "", "Dataset"], [3, 1, 1, "", "DatasetLoaderSpec"], [3, 3, 1, "", "DatasetNotFoundError"], [3, 1, 1, "", "DatasetSpec"], [3, 1, 1, "", "DatasetSpecMetadata"], [3, 1, 1, "", "DownloadDatasetFunction"], [3, 1, 1, "", "EvaluationProtocol"], [3, 1, 1, "", "EvaluationProtocolSpec"], [3, 1, 1, "", "GenericCameras"], [3, 1, 1, "", "LicenseSpec"], [3, 1, 1, "", "LoadDatasetFunction"], [3, 1, 1, "", "Logger"], [3, 1, 1, "", "LoggerEvent"], [3, 1, 1, "", "LoggerSpec"], [3, 1, 1, "", "Method"], [3, 1, 1, "", "MethodInfo"], [3, 1, 1, "", "MethodSpec"], [3, 1, 1, "", "ModelInfo"], [3, 1, 1, "", "OptimizeEmbeddingOutput"], [3, 1, 1, "", "OutputArtifact"], [3, 1, 1, "", "RenderOptions"], [3, 1, 1, "", "RenderOutputType"], [3, 1, 1, "", "Trajectory"], [3, 1, 1, "", "TrajectoryFrame"], [3, 1, 1, "", "TrajectoryFrameAppearance"], [3, 1, 1, "", "UnloadedDataset"], [4, 0, 0, "-", "backends"], [3, 6, 1, "", "build_method_class"], [3, 6, 1, "", "camera_model_from_int"], [3, 6, 1, "", "camera_model_to_int"], [5, 0, 0, "-", "cameras"], [6, 0, 0, "-", "datasets"], [7, 0, 0, "-", "evaluation"], [3, 6, 1, "", "get_dataset_loader_spec"], [3, 6, 1, "", "get_dataset_spec"], [3, 6, 1, "", "get_evaluation_protocol_spec"], [3, 6, 1, "", "get_logger_spec"], [3, 6, 1, "", "get_method_spec"], [3, 6, 1, "", "get_supported_dataset_loaders"], [3, 6, 1, "", "get_supported_datasets"], [3, 6, 1, "", "get_supported_evaluation_protocols"], [3, 6, 1, "", "get_supported_loggers"], [3, 6, 1, "", "get_supported_methods"], [8, 0, 0, "-", "io"], [3, 6, 1, "", "load_checkpoint"], [9, 0, 0, "-", "logging"], [10, 0, 0, "-", "metrics"], [3, 6, 1, "", "new_cameras"], [3, 6, 1, "", "new_dataset"], [3, 6, 1, "", "register"], [11, 0, 0, "-", "results"], [12, 0, 0, "-", "training"], [13, 0, 0, "-", "utils"], [14, 0, 0, "-", "viewer"], [15, 0, 0, "-", "web"]], "nerfbaselines-download-dataset": [[17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-download-dataset-arg-DATASET", "DATASET"]], "nerfbaselines-evaluate": [[17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-evaluate-arg-PREDICTIONS", "PREDICTIONS"]], "nerfbaselines-export-demo": [[17, 7, 1, "cmdoption-nerfbaselines-export-demo-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-train-embedding", "--train-embedding"], [17, 7, 1, "cmdoption-nerfbaselines-export-demo-o", "-o"]], "nerfbaselines-export-mesh": [[17, 7, 1, "cmdoption-nerfbaselines-export-mesh-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-o", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-o", "-o"], [17, 7, 1, "cmdoption-nerfbaselines-export-mesh-v", "-v"]], "nerfbaselines-fix-checkpoint": [[17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-new-checkpoint", "--new-checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-presets", "--presets"], [17, 7, 1, "cmdoption-nerfbaselines-fix-checkpoint-set", "--set"]], "nerfbaselines-fix-output-artifact": [[17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-force", "--force"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-inplace", "--inplace"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-input", "--input"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rebuild-checkpoint", "--rebuild-checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-evaluation", "--rerun-evaluation"], [17, 7, 1, "cmdoption-nerfbaselines-fix-output-artifact-rerun-render", "--rerun-render"]], "nerfbaselines-generate-dataset-results": [[17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-dataset", "--dataset"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-method-links", "--method-links"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-output-type", "--output-type"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-results", "--results"], [17, 7, 1, "cmdoption-nerfbaselines-generate-dataset-results-scenes", "--scenes"]], "nerfbaselines-install": [[17, 7, 1, "cmdoption-nerfbaselines-install-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-install-force", "--force"], [17, 7, 1, "cmdoption-nerfbaselines-install-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-install-spec", "--spec"]], "nerfbaselines-measure-fps": [[17, 7, 1, "cmdoption-nerfbaselines-measure-fps-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-data-indices", "--data-indices"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-num-repeats", "--num-repeats"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-num-repeats-median", "--num-repeats-median"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-output-names", "--output-names"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-resolution", "--resolution"], [17, 7, 1, "cmdoption-nerfbaselines-measure-fps-split", "--split"]], "nerfbaselines-render": [[17, 7, 1, "cmdoption-nerfbaselines-render-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-render-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-render-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-render-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-split", "--split"]], "nerfbaselines-render-trajectory": [[17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-output-names", "--output-names"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-resolution", "--resolution"], [17, 7, 1, "cmdoption-nerfbaselines-render-trajectory-trajectory", "--trajectory"]], "nerfbaselines-shell": [[17, 7, 1, "cmdoption-nerfbaselines-shell-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-shell-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-shell-arg-COMMAND", "COMMAND"]], "nerfbaselines-test-method": [[17, 7, 1, "cmdoption-nerfbaselines-test-method-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-full", "--full"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-presets", "--presets"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-set", "--set"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-steps", "--steps"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-v", "--verbose"], [17, 7, 1, "cmdoption-nerfbaselines-test-method-v", "-v"]], "nerfbaselines-train": [[17, 7, 1, "cmdoption-nerfbaselines-train-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-train-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-train-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-train-disable-output-artifact", "--disable-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-all-iters", "--eval-all-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-eval-few-iters", "--eval-few-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-force-output-artifact", "--force-output-artifact"], [17, 7, 1, "cmdoption-nerfbaselines-train-logger", "--logger"], [17, 7, 1, "cmdoption-nerfbaselines-train-method", "--method"], [17, 7, 1, "cmdoption-nerfbaselines-train-output", "--output"], [17, 7, 1, "cmdoption-nerfbaselines-train-presets", "--presets"], [17, 7, 1, "cmdoption-nerfbaselines-train-save-iters", "--save-iters"], [17, 7, 1, "cmdoption-nerfbaselines-train-set", "--set"]], "nerfbaselines-viewer": [[17, 7, 1, "cmdoption-nerfbaselines-viewer-backend", "--backend"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-checkpoint", "--checkpoint"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-host", "--host"], [17, 7, 1, "cmdoption-nerfbaselines-viewer-port", "--port"]], "nerfbaselines-web-build": [[17, 7, 1, "cmdoption-nerfbaselines-web-build-base-path", "--base-path"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-datasets", "--datasets"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-docs", "--docs"], [17, 7, 1, "cmdoption-nerfbaselines-web-build-output", "--output"]], "nerfbaselines-web-dev": [[17, 7, 1, "cmdoption-nerfbaselines-web-dev-data", "--data"], [17, 7, 1, "cmdoption-nerfbaselines-web-dev-datasets", "--datasets"], [17, 7, 1, "cmdoption-nerfbaselines-web-dev-docs", "--docs"], [17, 7, 1, "cmdoption-nerfbaselines-web-dev-port", "--port"]], "nerfbaselines.Dataset": [[3, 2, 1, "", "cameras"], [3, 2, 1, "", "image_paths"], [3, 2, 1, "", "image_paths_root"], [3, 2, 1, "", "images"], [3, 2, 1, "", "images_points2D_xy"], [3, 2, 1, "", "images_points3D_indices"], [3, 2, 1, "", "mask_paths"], [3, 2, 1, "", "mask_paths_root"], [3, 2, 1, "", "masks"], [3, 2, 1, "", "metadata"], [3, 2, 1, "", "points3D_error"], [3, 2, 1, "", "points3D_rgb"], [3, 2, 1, "", "points3D_xyz"]], "nerfbaselines.DatasetLoaderSpec": [[3, 2, 1, "", "id"], [3, 2, 1, "", "load_dataset_function"]], "nerfbaselines.DatasetSpec": [[3, 2, 1, "", "download_dataset_function"], [3, 2, 1, "", "evaluation_protocol"], [3, 2, 1, "", "id"], [3, 2, 1, "", "metadata"]], "nerfbaselines.DatasetSpecMetadata": [[3, 2, 1, "", "default_metric"], [3, 2, 1, "", "description"], [3, 2, 1, "", "id"], [3, 2, 1, "", "licenses"], [3, 2, 1, "", "link"], [3, 2, 1, "", "metrics"], [3, 2, 1, "", "name"], [3, 2, 1, "", "paper_authors"], [3, 2, 1, "", "paper_link"], [3, 2, 1, "", "paper_title"], [3, 2, 1, "", "scenes"]], "nerfbaselines.EvaluationProtocol": [[3, 4, 1, "", "accumulate_metrics"], [3, 4, 1, "", "evaluate"], [3, 4, 1, "", "get_name"], [3, 4, 1, "", "render"]], "nerfbaselines.EvaluationProtocolSpec": [[3, 2, 1, "", "evaluation_protocol_class"], [3, 2, 1, "", "id"]], "nerfbaselines.GenericCameras": [[3, 4, 1, "", "apply"], [3, 5, 1, "", "camera_models"], [3, 4, 1, "", "cat"], [3, 5, 1, "", "distortion_parameters"], [3, 5, 1, "", "image_sizes"], [3, 5, 1, "", "intrinsics"], [3, 4, 1, "", "item"], [3, 5, 1, "", "metadata"], [3, 5, 1, "", "nears_fars"], [3, 5, 1, "", "poses"], [3, 4, 1, "", "replace"]], "nerfbaselines.LicenseSpec": [[3, 2, 1, "", "name"], [3, 2, 1, "", "url"]], "nerfbaselines.Logger": [[3, 4, 1, "", "add_embedding"], [3, 4, 1, "", "add_event"], [3, 4, 1, "", "add_image"], [3, 4, 1, "", "add_scalar"], [3, 4, 1, "", "add_text"]], "nerfbaselines.LoggerEvent": [[3, 4, 1, "", "add_embedding"], [3, 4, 1, "", "add_histogram"], [3, 4, 1, "", "add_image"], [3, 4, 1, "", "add_plot"], [3, 4, 1, "", "add_scalar"], [3, 4, 1, "", "add_text"]], "nerfbaselines.LoggerSpec": [[3, 2, 1, "", "id"], [3, 2, 1, "", "logger_class"]], "nerfbaselines.Method": [[3, 4, 1, "", "get_info"], [3, 4, 1, "", "get_method_info"], [3, 4, 1, "", "get_train_embedding"], [3, 4, 1, "", "optimize_embedding"], [3, 4, 1, "", "render"], [3, 4, 1, "", "save"], [3, 4, 1, "", "train_iteration"]], "nerfbaselines.MethodInfo": [[3, 2, 1, "", "can_resume_training"], [3, 2, 1, "", "method_id"], [3, 2, 1, "", "required_features"], [3, 2, 1, "", "supported_camera_models"], [3, 2, 1, "", "supported_outputs"], [3, 2, 1, "", "viewer_default_resolution"]], "nerfbaselines.MethodSpec": [[3, 2, 1, "", "apptainer"], [3, 2, 1, "", "backends_order"], [3, 2, 1, "", "conda"], [3, 2, 1, "", "docker"], [3, 2, 1, "", "id"], [3, 2, 1, "", "implementation_status"], [3, 2, 1, "", "metadata"], [3, 2, 1, "", "method_class"], [3, 2, 1, "", "output_artifacts"], [3, 2, 1, "", "presets"], [3, 2, 1, "", "required_features"], [3, 2, 1, "", "supported_camera_models"], [3, 2, 1, "", "supported_outputs"]], "nerfbaselines.ModelInfo": [[3, 2, 1, "", "batch_size"], [3, 2, 1, "", "can_resume_training"], [3, 2, 1, "", "eval_batch_size"], [3, 2, 1, "", "hparams"], [3, 2, 1, "", "loaded_checkpoint"], [3, 2, 1, "", "loaded_step"], [3, 2, 1, "", "method_id"], [3, 2, 1, "", "num_iterations"], [3, 2, 1, "", "required_features"], [3, 2, 1, "", "supported_camera_models"], [3, 2, 1, "", "supported_outputs"], [3, 2, 1, "", "viewer_default_resolution"]], "nerfbaselines.OptimizeEmbeddingOutput": [[3, 2, 1, "", "embedding"], [3, 2, 1, "", "metrics"], [3, 2, 1, "", "render_output"]], "nerfbaselines.OutputArtifact": [[3, 2, 1, "", "link"]], "nerfbaselines.RenderOptions": [[3, 2, 1, "", "embedding"], [3, 2, 1, "", "output_type_dtypes"], [3, 2, 1, "", "outputs"]], "nerfbaselines.RenderOutputType": [[3, 2, 1, "", "name"], [3, 2, 1, "", "type"]], "nerfbaselines.Trajectory": [[3, 2, 1, "", "appearances"], [3, 2, 1, "", "camera_model"], [3, 2, 1, "", "fps"], [3, 2, 1, "", "frames"], [3, 2, 1, "", "image_size"], [3, 2, 1, "", "source"]], "nerfbaselines.TrajectoryFrame": [[3, 2, 1, "", "appearance_weights"], [3, 2, 1, "", "intrinsics"], [3, 2, 1, "", "pose"]], "nerfbaselines.TrajectoryFrameAppearance": [[3, 2, 1, "", "embedding"], [3, 2, 1, "", "embedding_train_index"]], "nerfbaselines.UnloadedDataset": [[3, 2, 1, "", "cameras"], [3, 2, 1, "", "image_paths"], [3, 2, 1, "", "image_paths_root"], [3, 2, 1, "", "images"], [3, 2, 1, "", "images_points2D_xy"], [3, 2, 1, "", "images_points3D_indices"], [3, 2, 1, "", "mask_paths"], [3, 2, 1, "", "mask_paths_root"], [3, 2, 1, "", "masks"], [3, 2, 1, "", "metadata"], [3, 2, 1, "", "points3D_error"], [3, 2, 1, "", "points3D_rgb"], [3, 2, 1, "", "points3D_xyz"]], "nerfbaselines.backends": [[4, 1, 1, "", "ApptainerBackend"], [4, 1, 1, "", "ApptainerBackendSpec"], [4, 1, 1, "", "Backend"], [4, 1, 1, "", "CondaBackend"], [4, 1, 1, "", "CondaBackendSpec"], [4, 1, 1, "", "DockerBackend"], [4, 1, 1, "", "DockerBackendSpec"], [4, 1, 1, "", "SimpleBackend"], [4, 6, 1, "", "backend_allocate"], [4, 6, 1, "", "backend_allocate_ndarray"], [4, 6, 1, "", "get_backend"], [4, 6, 1, "", "get_implemented_backends"], [4, 6, 1, "", "get_mounts"], [4, 6, 1, "", "mount"], [4, 6, 1, "", "run_on_host"], [4, 6, 1, "", "zero_copy"]], "nerfbaselines.backends.ApptainerBackend": [[4, 4, 1, "", "install"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"]], "nerfbaselines.backends.ApptainerBackendSpec": [[4, 2, 1, "", "conda_spec"], [4, 2, 1, "", "environment_name"], [4, 2, 1, "", "home_path"], [4, 2, 1, "", "image"], [4, 2, 1, "", "python_path"]], "nerfbaselines.backends.Backend": [[4, 4, 1, "", "install"], [4, 4, 1, "", "instance_call"], [4, 4, 1, "", "instance_del"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"], [4, 4, 1, "", "static_call"]], "nerfbaselines.backends.CondaBackend": [[4, 4, 1, "", "install"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"]], "nerfbaselines.backends.CondaBackendSpec": [[4, 2, 1, "", "environment_name"], [4, 2, 1, "", "install_script"], [4, 2, 1, "", "python_version"]], "nerfbaselines.backends.DockerBackend": [[4, 4, 1, "", "install"], [4, 2, 1, "", "name"], [4, 4, 1, "", "shell"]], "nerfbaselines.backends.DockerBackendSpec": [[4, 2, 1, "", "build_script"], [4, 2, 1, "", "conda_spec"], [4, 2, 1, "", "environment_name"], [4, 2, 1, "", "home_path"], [4, 2, 1, "", "image"], [4, 2, 1, "", "python_path"], [4, 2, 1, "", "replace_user"]], "nerfbaselines.backends.SimpleBackend": [[4, 4, 1, "", "instance_call"], [4, 4, 1, "", "instance_del"], [4, 2, 1, "", "name"], [4, 4, 1, "", "static_call"]], "nerfbaselines.cameras": [[5, 6, 1, "", "get_image_pixels"], [5, 6, 1, "", "get_rays"], [5, 6, 1, "", "interpolate_bilinear"], [5, 6, 1, "", "project"], [5, 6, 1, "", "undistort_camera"], [5, 6, 1, "", "unproject"], [5, 6, 1, "", "warp_image_between_cameras"]], "nerfbaselines.datasets": [[6, 0, 0, "-", "blender"], [6, 0, 0, "-", "bundler"], [6, 0, 0, "-", "colmap"], [6, 6, 1, "", "dataset_index_select"], [6, 6, 1, "", "dataset_load_features"], [6, 6, 1, "", "download_dataset"], [6, 0, 0, "-", "hierarchical_3dgs"], [6, 0, 0, "-", "llff"], [6, 6, 1, "", "load_dataset"], [6, 0, 0, "-", "mipnerf360"], [6, 0, 0, "-", "mipnerf360_sparse"], [6, 0, 0, "-", "nerfonthego"], [6, 0, 0, "-", "nerfstudio"], [6, 0, 0, "-", "phototourism"], [6, 0, 0, "-", "seathru_nerf"], [6, 0, 0, "-", "tanksandtemples"], [6, 0, 0, "-", "zipnerf"]], "nerfbaselines.datasets.blender": [[6, 6, 1, "", "download_blender_dataset"], [6, 6, 1, "", "load_blender_dataset"]], "nerfbaselines.datasets.bundler": [[6, 6, 1, "", "load_bundler_dataset"]], "nerfbaselines.datasets.colmap": [[6, 6, 1, "", "load_colmap_dataset"]], "nerfbaselines.datasets.hierarchical_3dgs": [[6, 6, 1, "", "download_hierarchical_3dgs_dataset"]], "nerfbaselines.datasets.llff": [[6, 6, 1, "", "download_llff_dataset"], [6, 6, 1, "", "load_llff_dataset"]], "nerfbaselines.datasets.mipnerf360": [[6, 6, 1, "", "download_mipnerf360_dataset"]], "nerfbaselines.datasets.mipnerf360_sparse": [[6, 6, 1, "", "download_mipnerf360_sparse_dataset"]], "nerfbaselines.datasets.nerfonthego": [[6, 6, 1, "", "load_nerfonthego_dataset"]], "nerfbaselines.datasets.nerfstudio": [[6, 6, 1, "", "download_nerfstudio_dataset"], [6, 6, 1, "", "load_nerfstudio_dataset"]], "nerfbaselines.datasets.phototourism": [[6, 1, 1, "", "NerfWEvaluationProtocol"], [6, 6, 1, "", "download_phototourism_dataset"]], "nerfbaselines.datasets.phototourism.NerfWEvaluationProtocol": [[6, 4, 1, "", "accumulate_metrics"], [6, 4, 1, "", "evaluate"], [6, 4, 1, "", "get_name"], [6, 4, 1, "", "render"]], "nerfbaselines.datasets.seathru_nerf": [[6, 6, 1, "", "download_seathru_nerf_dataset"], [6, 6, 1, "", "load_seathru_nerf_dataset"]], "nerfbaselines.datasets.tanksandtemples": [[6, 6, 1, "", "download_tanksandtemples_dataset"]], "nerfbaselines.datasets.zipnerf": [[6, 6, 1, "", "download_zipnerf_dataset"]], "nerfbaselines.evaluation": [[7, 1, 1, "", "DefaultEvaluationProtocol"], [7, 1, 1, "", "NerfEvaluationProtocol"], [7, 6, 1, "", "build_evaluation_protocol"], [7, 6, 1, "", "compute_metrics"], [7, 6, 1, "", "evaluate"], [7, 6, 1, "", "path_is_video"], [7, 6, 1, "", "render_all_images"], [7, 6, 1, "", "render_frames"], [7, 6, 1, "", "run_inside_eval_container"], [7, 6, 1, "", "trajectory_get_cameras"], [7, 6, 1, "", "trajectory_get_embeddings"], [7, 6, 1, "", "with_supported_camera_models"]], "nerfbaselines.evaluation.DefaultEvaluationProtocol": [[7, 4, 1, "", "accumulate_metrics"], [7, 4, 1, "", "evaluate"], [7, 4, 1, "", "get_name"], [7, 4, 1, "", "render"]], "nerfbaselines.io": [[8, 6, 1, "", "deserialize_nb_info"], [8, 6, 1, "", "get_checkpoint_sha"], [8, 6, 1, "", "get_method_sha"], [8, 6, 1, "", "get_metrics_hash"], [8, 6, 1, "", "get_predictions_sha"], [8, 6, 1, "", "get_torch_checkpoint_sha"], [8, 6, 1, "", "load_trajectory"], [8, 6, 1, "", "new_nb_info"], [8, 6, 1, "", "numpy_from_base64"], [8, 6, 1, "", "numpy_to_base64"], [8, 6, 1, "", "open_any"], [8, 6, 1, "", "open_any_directory"], [8, 6, 1, "", "read_image"], [8, 6, 1, "", "read_mask"], [8, 6, 1, "", "save_cameras_npz"], [8, 6, 1, "", "save_depth"], [8, 6, 1, "", "save_evaluation_results"], [8, 6, 1, "", "save_image"], [8, 6, 1, "", "save_mask"], [8, 6, 1, "", "save_output_artifact"], [8, 6, 1, "", "save_predictions"], [8, 6, 1, "", "save_trajectory"], [8, 6, 1, "", "serialize_evaluation_results"], [8, 6, 1, "", "serialize_nb_info"], [8, 6, 1, "", "wget"]], "nerfbaselines.logging": [[9, 1, 1, "", "BaseLogger"], [9, 1, 1, "", "BaseLoggerEvent"], [9, 1, 1, "", "ConcatLogger"], [9, 1, 1, "", "ConcatLoggerEvent"], [9, 1, 1, "", "TensorboardLogger"], [9, 1, 1, "", "TensorboardLoggerEvent"], [9, 1, 1, "", "WandbLogger"], [9, 1, 1, "", "WandbLoggerEvent"], [9, 6, 1, "", "log_metrics"], [9, 6, 1, "", "read_tensorboard_metrics"], [9, 6, 1, "", "subsample_metrics"]], "nerfbaselines.logging.BaseLogger": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.logging.BaseLoggerEvent": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_plot"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.logging.ConcatLogger": [[9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLogger": [[9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.TensorboardLoggerEvent": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_histogram"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.logging.WandbLogger": [[9, 4, 1, "", "add_event"], [9, 4, 1, "", "add_hparams"]], "nerfbaselines.logging.WandbLoggerEvent": [[9, 4, 1, "", "add_embedding"], [9, 4, 1, "", "add_histogram"], [9, 4, 1, "", "add_image"], [9, 4, 1, "", "add_plot"], [9, 4, 1, "", "add_scalar"], [9, 4, 1, "", "add_text"]], "nerfbaselines.metrics": [[10, 6, 1, "", "clear_cache"], [10, 6, 1, "", "dmpix_ssim"], [10, 6, 1, "", "lpips"], [10, 6, 1, "", "lpips_alex"], [10, 6, 1, "", "lpips_vgg"], [10, 6, 1, "", "mae"], [10, 6, 1, "", "mse"], [10, 6, 1, "", "psnr"], [10, 6, 1, "", "ssim"], [10, 6, 1, "", "torchmetrics_ssim"]], "nerfbaselines.results": [[11, 1, 1, "", "DatasetInfo"], [11, 1, 1, "", "MetricInfo"], [11, 1, 1, "", "SceneInfo"], [11, 6, 1, "", "compile_dataset_results"], [11, 6, 1, "", "format_duration"], [11, 6, 1, "", "format_memory"], [11, 6, 1, "", "get_dataset_info"], [11, 6, 1, "", "get_method_info_from_spec"], [11, 6, 1, "", "load_metrics_from_results"], [11, 6, 1, "", "render_latex_dataset_results_table"], [11, 6, 1, "", "render_markdown_dataset_results_table"]], "nerfbaselines.results.DatasetInfo": [[11, 2, 1, "", "default_metric"], [11, 2, 1, "", "description"], [11, 2, 1, "", "id"], [11, 2, 1, "", "licenses"], [11, 2, 1, "", "link"], [11, 2, 1, "", "metrics"], [11, 2, 1, "", "name"], [11, 2, 1, "", "paper_authors"], [11, 2, 1, "", "paper_link"], [11, 2, 1, "", "paper_title"], [11, 2, 1, "", "scenes"]], "nerfbaselines.results.MetricInfo": [[11, 2, 1, "", "ascending"], [11, 2, 1, "", "description"], [11, 2, 1, "", "id"], [11, 2, 1, "", "link"], [11, 2, 1, "", "name"]], "nerfbaselines.results.SceneInfo": [[11, 2, 1, "", "id"], [11, 2, 1, "", "name"]], "nerfbaselines.training": [[12, 1, 1, "", "MetricsAccumulator"], [12, 1, 1, "", "ResourcesUtilizationInfo"], [12, 1, 1, "", "Trainer"], [12, 6, 1, "", "build_logger"], [12, 6, 1, "", "eval_all"], [12, 6, 1, "", "eval_few"], [12, 6, 1, "", "get_presets_and_config_overrides"], [12, 6, 1, "", "get_resources_utilization_info"], [12, 6, 1, "", "make_image_grid"]], "nerfbaselines.training.MetricsAccumulator": [[12, 4, 1, "", "pop"], [12, 4, 1, "", "update"]], "nerfbaselines.training.ResourcesUtilizationInfo": [[12, 2, 1, "", "gpu_memory"], [12, 2, 1, "", "gpu_name"], [12, 2, 1, "", "memory"]], "nerfbaselines.training.Trainer": [[12, 4, 1, "", "eval_all"], [12, 4, 1, "", "eval_few"], [12, 4, 1, "", "get_logger"], [12, 5, 1, "", "num_iterations"], [12, 4, 1, "", "save"], [12, 4, 1, "", "train"], [12, 4, 1, "", "train_iteration"]], "nerfbaselines.utils": [[13, 1, 1, "", "CancellationToken"], [13, 3, 1, "", "CancelledException"], [13, 1, 1, "", "Indices"], [13, 6, 1, "", "apply_colormap"], [13, 6, 1, "", "apply_transform"], [13, 6, 1, "", "convert_image_dtype"], [13, 6, 1, "", "get_palette"], [13, 6, 1, "", "get_supported_palette_names"], [13, 6, 1, "", "get_transform_and_scale"], [13, 6, 1, "", "image_to_srgb"], [13, 6, 1, "", "invert_transform"], [13, 6, 1, "", "pad_poses"], [13, 6, 1, "", "padded_stack"], [13, 6, 1, "", "quaternion_conjugate"], [13, 6, 1, "", "quaternion_multiply"], [13, 6, 1, "", "quaternion_to_rotation_matrix"], [13, 6, 1, "", "rotation_matrix_to_quaternion"], [13, 6, 1, "", "unpad_poses"], [13, 6, 1, "", "visualize_depth"]], "nerfbaselines.utils.CancellationToken": [[13, 4, 1, "", "cancel"], [13, 4, 1, "", "cancel_if_requested"]], "nerfbaselines.utils.Indices": [[13, 4, 1, "", "every_iters"], [13, 4, 1, "", "with_total"]], "nerfbaselines.viewer": [[14, 1, 1, "", "Viewer"], [14, 6, 1, "", "build_static_viewer"], [14, 6, 1, "", "export_viewer_dataset"], [14, 6, 1, "", "get_viewer_params_from_dataset_metadata"], [14, 6, 1, "", "get_viewer_params_from_nb_info"], [14, 6, 1, "", "merge_viewer_params"], [14, 6, 1, "", "write_dataset_pointcloud"]], "nerfbaselines.viewer.Viewer": [[14, 4, 1, "", "close"], [14, 5, 1, "", "port"], [14, 4, 1, "", "run"], [14, 4, 1, "", "show_in_notebook"], [14, 4, 1, "", "update"]], "nerfbaselines.web": [[15, 6, 1, "", "build"], [15, 6, 1, "", "start_dev_server"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:method", "5": "py:property", "6": "py:function", "7": "std:cmdoption"}, "terms": {"": [0, 1, 10, 12, 13, 17, 18, 23, 25, 27, 28, 29, 30], "0": [0, 1, 5, 10, 13, 16, 17, 18, 20, 23, 24, 26, 27, 29, 30], "00": 27, "00016": 27, "0002": 27, "001": 27, "00109": 26, "00206": 26, "0025": 27, "0031308": 13, "005": 27, "006926": 27, "007215": 27, "00889": 20, "01": [10, 27], "019655": 27, "02": 27, "024916": 27, "026": 27, "03": 10, "04": 25, "04264": [20, 26], "044": 23, "05": 27, "051249": 27, "055": 13, "055669": 27, "056562": 27, "06": 27, "06706": [20, 26], "06765": 26, "06it": 27, "071186": 27, "075102": 27, "07973x": 24, "08": 27, "084124": 27, "08447": 26, "08934": [20, 26], "09": 27, "095": 24, "09517": 26, "09987": 26, "0m": 27, "1": [0, 1, 10, 12, 13, 16, 17, 18, 19, 23, 26, 27, 29, 30], "10": [13, 18, 20, 21, 23], "100": [1, 9, 14, 26, 27], "1000": 20, "10000": 12, "10148": 26, "10241": 26, "102799": 27, "10772": 26, "1085": 13, "10902": 26, "10_000": 27, "10k": 27, "11": [1, 10, 23, 27], "1140": 20, "12": [13, 20, 23, 26, 27], "12077": [0, 20, 26], "12345": 16, "12em": 24, "13": [10, 23, 24, 27], "1300000": 26, "1392": 20, "13m": 23, "14": 27, "144017": 27, "14m": 23, "15": 27, "15000": 27, "15704": 26, "16": 23, "161": 23, "16493": 26, "169": 27, "17": 1, "173": 23, "17888": 26, "17898": 26, "179": 27, "18": 27, "181": 23, "187": 23, "18715": 26, "189": 23, "19": [23, 27], "1905": 20, "192": 23, "1920": 12, "1920x1080": 17, "194": 27, "19m": 23, "19tv6kdvgcmg3cgz1bniunbbmd": 6, "1e": 1, "1em": 24, "1h": 23, "2": [1, 3, 5, 12, 13, 16, 18, 19, 20, 23, 26, 27], "20": [21, 23, 30], "200": [23, 26], "2000": [12, 17, 20], "2003": [20, 26], "2004": 10, "2023": 6, "2024": [24, 27], "21": 23, "210": 27, "210046": 27, "2111": [0, 20, 26], "216097": 27, "218": 23, "22": [25, 27], "2203": 26, "221673": 27, "223": 23, "227448": 27, "22t20": 27, "23": [13, 23, 24, 30], "2301": 26, "2302": [20, 26], "2304": [20, 26], "2308": 26, "2311": 26, "2312": 26, "233335": 27, "234": 23, "236": 27, "237": 23, "238": 23, "239": 23, "23m": 23, "24": 20, "2403": 26, "2404": 26, "2405": 26, "2407": 26, "2409": 26, "24m": 23, "25": [23, 27], "2503": 26, "2514": 13, "252": 23, "256": [13, 23], "257": 23, "258": 23, "25m": 23, "26": 23, "262": 23, "26it": 27, "27": 23, "272": 23, "275": 27, "27it": 27, "27m": 23, "28": [23, 27], "281": 23, "286": 27, "29": 23, "297": 23, "299345": 27, "29m": 23, "2_000": 27, "2d": [17, 22, 23], "2dg": 26, "2f": 27, "2h": 23, "2k": 27, "2t": 24, "3": [1, 5, 13, 16, 18, 23, 26, 27], "30": 23, "3000": 27, "30000": [21, 22, 27, 28], "30h": 23, "30it": 27, "30m": 23, "31": [23, 27], "311843": 27, "312": 27, "316162": 27, "31m": 23, "320": 23, "324": 27, "329421": 27, "32it": 27, "33": [23, 27], "3324": 27, "34": 23, "343": 23, "35m": 23, "36": 23, "360": [0, 23, 28], "36minfo": 27, "37": 23, "3774": 27, "38": 23, "388": 23, "39": 23, "398": 23, "3d": [5, 18, 20, 23, 26, 28], "3d_gaussian_splatting_low": 26, "3dg": [17, 21, 23, 24], "3m": 23, "3x3": 13, "3x4": [13, 18, 27], "4": [6, 10, 13, 18, 23, 26, 27], "40000": 26, "40gb": 27, "40m": 23, "412": 23, "41m": 23, "420": 27, "421": 23, "43": 27, "4304": 27, "434": 23, "445": 23, "45": 23, "463": 27, "464": 23, "4654": 13, "481": 27, "492": 23, "4mib": 27, "4x4": 13, "5": [5, 10, 16, 20, 23, 27], "500": 27, "507": 23, "508": 23, "51": [27, 30], "52m": 23, "53": 27, "532": 23, "54": [23, 27], "541": 23, "54275": 27, "55": 23, "5500": [15, 19], "553": 23, "56": 27, "571": 23, "5846": 27, "59": 27, "590": 23, "5e5": 26, "5h": 23, "6": [13, 20, 23, 26, 27], "600": [10, 14], "6006": [17, 30], "612": 10, "63": 30, "648": 27, "670": 23, "681": 23, "684": 23, "6e": 27, "6m": 23, "7": 23, "7000": 26, "714": 23, "718": 23, "72m": 16, "72mb": 16, "73": 27, "731": 23, "743": 23, "769": 23, "772": 23, "792": 23, "793": 20, "796": 23, "798": 23, "7km": 20, "8": [16, 20, 23, 24, 27], "8000": 21, "808": 23, "813": 23, "814": 23, "815": 23, "826": 23, "829": 23, "83263": 27, "85g": 27, "86it": 27, "877": 23, "87it": 27, "887": 23, "9": 23, "90254": 24, "903": 23, "904": 23, "905": 23, "907": 23, "912": 23, "91it": 27, "92": 13, "921037": 27, "936": 27, "94": 27, "941": 27, "948501": 27, "95": 27, "958": 27, "961329": 27, "972198": 27, "981": 27, "994": 23, "A": [0, 3, 4, 5, 7, 10, 11, 12, 13, 16, 17, 18, 20, 24, 26, 27, 30], "And": 17, "But": [24, 30, 31], "By": [13, 16, 17, 18, 26, 28, 30], "For": [0, 1, 5, 13, 16, 21, 22, 24, 25, 26, 28, 30], "If": [0, 1, 4, 6, 7, 10, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 31], "In": [0, 1, 13, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "It": [3, 10, 12, 13, 16, 17, 20, 26, 28, 30], "Near": 3, "No": 13, "On": 25, "One": 10, "Or": [0, 29], "The": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "Then": 0, "There": [1, 16, 18, 27, 29, 30, 31], "These": 29, "To": [1, 16, 19, 20, 21, 22, 25, 27, 28, 30], "_": [6, 27], "__enter__": 27, "__init__": 1, "_common": 27, "_incompletedataset": 3, "_load_camera": 18, "_loaded_step": 1, "_state": 1, "_type": 12, "a100": 27, "abhik": [20, 26], "abhishek": [20, 26], "abl": [0, 29, 30, 31], "about": [0, 16, 18, 22, 30], "abov": 30, "absolut": [10, 17, 18], "abstract": 3, "acceler": 26, "accept": [1, 27, 30], "access": [13, 16, 19, 25, 30], "accumul": [17, 26, 27], "accumulate_metr": [3, 6, 7], "accur": 26, "acf027e845ff29e9db9558bd0a1166c87d5a77ca07ddb46f609c68661cb228cc": 27, "achiev": [16, 26, 30], "achuta": 26, "acquir": 20, "across": [30, 31], "activ": 30, "actual": [13, 30, 31], "ad": [17, 18, 23, 24, 26, 29, 30], "adam": 1, "adapt": 26, "add": [0, 1, 9, 23, 25, 26, 29, 30], "add_embed": [3, 9], "add_ev": [3, 9], "add_histogram": [3, 9], "add_hparam": 9, "add_imag": [3, 9], "add_plot": [3, 9], "add_scalar": [3, 9], "add_text": [3, 9], "addapt": 26, "addit": [16, 19, 25, 27], "additin": 20, "address": 26, "adjust": [20, 30], "adopt": 26, "advanc": 20, "affect": 29, "affin": 26, "after": [10, 12, 13, 16, 19, 26, 27, 28, 29, 30, 31], "ag": 25, "against": 17, "agenc": 24, "ahuja": [20, 26], "aim": 24, "akkaynak": [20, 26], "alameda": 20, "alex": 26, "alexand": [20, 26], "alexandr": [20, 26], "algorithm": 13, "alia": 26, "alias": [0, 20, 26], "align": 28, "all": [1, 3, 4, 5, 7, 12, 15, 16, 17, 18, 19, 23, 24, 25, 27, 28, 30], "alloc": [4, 16], "allow": [1, 13, 19, 21, 22, 23, 25, 26, 27, 28, 30], "allow_alpha": 13, "almost": 13, "along": [26, 30], "alpha": [13, 30], "alreadi": [0, 13, 16, 27, 28, 29, 30, 31], "also": [0, 1, 3, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31], "alt": 30, "altern": 1, "alwai": 29, "amit": [20, 26], "an": [0, 1, 3, 5, 13, 16, 17, 18, 20, 23, 25, 26, 27, 30, 31], "anchor": 26, "andrea": [20, 26], "angjoo": [20, 26], "ani": [0, 1, 3, 9, 10, 11, 12, 13, 17, 23, 25, 26, 30], "anisotrop": 10, "anoth": [13, 16, 17, 29], "anpei": 26, "anti": [0, 20, 26], "anyth": [0, 16, 26], "anywher": 30, "apach": [20, 26], "apart": 27, "apchenstu": 26, "apex": 30, "api": [24, 27], "app": 20, "appear": [0, 3, 13, 17, 20, 21, 26, 28, 30], "appearance_weight": 3, "append": 18, "apper": 27, "appli": [3, 12, 13, 17, 26, 27], "applic": 22, "applied_preset": [8, 12, 27], "apply_colormap": 13, "apply_transform": 13, "approach": 26, "appropri": 30, "approxim": 26, "apptain": [3, 4, 16, 17, 26], "apptainerbackend": 4, "apptainerbackendspec": 4, "apt": 25, "ar": [0, 1, 3, 5, 6, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31], "arang": 18, "archiv": [17, 28], "area": 30, "arg": [3, 4, 9, 14, 17], "argument": [0, 1, 12, 17, 18, 19, 21, 22, 23, 25, 27, 28, 29, 30], "arno": 20, "around": [0, 20, 30], "arrai": [5, 8, 13, 16, 18, 27], "arrow": 30, "articl": 24, "artifact": [8, 19, 26], "arxiv": [0, 20, 24, 26], "ascend": 11, "aselin": 24, "aspect": [1, 17, 30], "assert": [0, 1], "assess": 10, "asset": 26, "assign": 17, "assum": [0, 13, 16, 18, 21, 22, 23, 27, 28, 29, 30], "attempt": 16, "attribut": [6, 26], "augment": 26, "austin": [20, 26], "author": [0, 1, 17, 20, 24, 26], "auto": [12, 16, 17], "automat": [3, 12, 17, 18, 24, 26, 27, 28, 29, 30, 31], "avail": [0, 1, 7, 14, 16, 20, 24, 25, 26, 30], "averag": [10, 12, 17, 23], "avoid": [25, 30], "axes_label": [3, 9], "b": [5, 10, 24], "back": [26, 30], "backend": [1, 2, 3, 17, 24, 25, 26, 27, 28, 30, 31], "backend_alloc": 4, "backend_allocate_ndarrai": [4, 16], "backend_nam": [3, 7, 17], "backends_ord": 3, "background": [12, 13, 20, 26, 28, 30, 31], "background_color": 13, "backward": [1, 30], "bake": 26, "bandwidth": 10, "bao": 26, "bar": [7, 13, 30], "barron": [0, 20, 26], "bartel": 30, "base": [1, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 24, 26, 28, 30], "base_path": [15, 17], "baselogg": 9, "baseloggerev": 9, "bash": 25, "bash_profil": 25, "bashrc": 25, "batch": 5, "batch_siz": 3, "becaus": 25, "becom": 30, "been": 13, "befor": [16, 17, 27, 28, 30], "beforehand": 29, "begin": 23, "being": 25, "believ": 18, "below": 13, "ben": [0, 20, 26], "benchmark": [0, 8, 17, 20, 24, 26], "benjamin": 26, "berlin": 20, "bernhard": [20, 26], "best": [16, 30], "better": [10, 26, 28], "between": [10, 16, 20, 24, 27, 29, 30], "bia": 30, "bias": [17, 28], "bicycl": [0, 20, 21, 22, 27], "big": 24, "bigciti": 20, "bilinear": 5, "bin": [0, 25, 29], "binari": 16, "binbin": 26, "bind": [1, 26], "bit": [13, 30], "bitrat": 30, "black": [13, 20], "blend": 13, "blender": [1, 26, 28, 30, 31], "block": [4, 14], "bmild": 20, "bo": 26, "bonsai": 23, "bookkeep": 29, "bool": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "both": [16, 17, 20, 30], "bottom": [13, 24], "bovik": 10, "box": 30, "boyang": 26, "bp": 30, "bppf": 30, "brandenburg": 20, "brent": [20, 26], "broadcast": 5, "browser": [17, 19, 21, 28, 30], "brualla": 26, "bsd": 26, "buffer": [16, 27], "bug": 26, "build": [3, 9, 12, 14, 15, 16, 18, 27], "build_evaluation_protocol": 7, "build_logg": [12, 27], "build_method_class": [3, 27], "build_script": 4, "build_static_view": 14, "built": [16, 19, 25], "bundl": 20, "bundler_fil": 6, "burnin_iter": 26, "button": [30, 31], "byte": [8, 16], "c": [1, 5, 10, 16, 20, 29], "c_burnin": 26, "caas": 23, "cach": [10, 17, 30, 31], "call": [0, 1, 4, 12, 14, 16, 17, 18, 27, 30, 31], "callabl": [3, 10, 12], "camera": [0, 1, 2, 3, 6, 7, 8, 17, 18, 20, 26, 27], "camera_model": [3, 6, 18, 27], "camera_model_from_int": 3, "camera_model_to_int": [3, 18, 27], "cameras1": 5, "cameras2": 5, "camp": 17, "campu": 20, "can": [0, 1, 3, 6, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "can_resume_train": 3, "cancel": 13, "cancel_if_request": 13, "cancellationtoken": 13, "cancelledexcept": 13, "cap_max": 26, "capabl": 1, "captur": [6, 20, 26], "care": [16, 27], "carlo": 26, "carrasco": 26, "case": [0, 1, 10, 13, 16, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31], "casual": 26, "cat": 3, "caus": [10, 16], "cayon": 20, "cc": 20, "cell": [27, 30, 31], "cellcolor": 23, "center": [5, 26, 30], "center_i": 18, "center_x": 18, "centric": [0, 18, 20, 26, 27, 29], "certainli": 13, "chain": 26, "chair": 6, "chang": [3, 17, 23, 26, 30], "channel": [13, 27], "chari": 26, "charset": 24, "che": 26, "check": [13, 24, 25, 30], "checkpoint": [1, 3, 19, 21, 22, 24, 27, 28, 30, 31], "checkpoint_data": 8, "checkpoint_path": 27, "checkpoint_sha256": 27, "chen": 26, "choos": [16, 28, 30], "chosen": 16, "christoph": 26, "chume": 26, "chunk": [20, 26], "circl": 30, "circular": 30, "cite": 24, "citi": [23, 26], "ckpt": 1, "ckpt_meta": 1, "cl": 1, "class": [1, 3, 4, 6, 7, 9, 11, 12, 13, 14, 30, 31], "classmethod": [1, 3, 13], "clear": 10, "clear_cach": 10, "cli": [24, 25, 27, 29], "click": 30, "clickabl": 30, "client": 30, "clipboard": 30, "clone": 26, "close": [14, 27, 30], "closest": 13, "cloud": [26, 28, 30], "cloudflar": 30, "cluster": 30, "co": [27, 30, 31], "code": [0, 1, 16, 17, 20, 27], "codec": 30, "coeur": 20, "colab": [23, 27, 31], "collaps": 26, "collect": [0, 20, 26], "colmap": [0, 17, 18, 20, 22, 23, 29], "colmap_path": 6, "color": [1, 3, 6, 7, 9, 10, 13, 17, 26, 27, 30], "color_backscatt": 26, "color_clean": 26, "color_spac": [13, 27], "colormap": 13, "colorspac": 10, "column": 13, "com": [0, 6, 20, 25, 26], "combin": 26, "comma": [17, 21, 23], "command": [0, 1, 17, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30], "commit": 9, "common": 18, "commonli": 27, "commun": [18, 27, 30], "compact": 26, "compar": [10, 24, 26], "comparison": 1, "compil": 11, "compile_dataset_result": 11, "complic": 1, "compon": [13, 26], "compress": 28, "comput": [1, 7, 10, 12, 20, 23, 30], "compute_cov3d_python": 27, "compute_metr": 7, "concatlogg": 9, "concatloggerev": 9, "concept": 16, "conda": [1, 3, 4, 16, 17, 26, 27, 29, 30, 31], "conda_spec": 4, "condabackend": 4, "condabackendspec": 4, "condacolab": [30, 31], "condit": [20, 26, 30], "config": [12, 27], "config_overrid": [1, 3, 8, 12, 17, 27], "configur": [25, 30], "confirm": 19, "conflict": 25, "conjug": 13, "connect": [16, 27, 28], "consid": [13, 18], "consist": [19, 20, 24, 26, 29], "consol": [17, 23], "constant": 30, "construct": [18, 28], "contain": [0, 1, 7, 11, 16, 17, 18, 20, 25, 28, 29, 30, 31], "content": [0, 1, 18, 20, 26, 29], "context": [3, 4, 13, 16, 27, 30, 31], "contextlib": [27, 30, 31], "contextmanag": [3, 8, 9], "continu": [14, 30], "contribut": [18, 26], "control": 23, "conveni": 30, "convent": [13, 18], "converg": [13, 26], "convers": 13, "convert": [13, 18, 27], "convert_image_dtyp": [1, 13], "convert_shs_python": 27, "convolut": 10, "coordin": [5, 18], "coordinate_system": 6, "copi": [1, 4, 30], "copy_": [1, 16], "corner": 24, "correct": [17, 18, 29], "correctli": [1, 5], "correspond": [13, 26, 28, 30], "could": [16, 23, 29, 30], "count": 26, "cover": 1, "cpu": 1, "creat": [13, 17, 19, 24, 27, 28, 29, 31], "crf": 30, "css": 30, "csv": 18, "ctk": 25, "cu118": 1, "cubic": 30, "cuda": [16, 25, 26], "cuda_tensor": 16, "curl": 25, "current": [3, 4, 13, 16, 17, 21, 22, 24, 25, 26, 28, 30], "curv": 30, "custom": [0, 16, 17, 20, 24, 26, 27, 30], "cvpr2023": [20, 26], "cvpr2025": 26, "cx": [3, 6, 26, 27], "cy": [3, 6, 26, 27], "cz": 24, "czech": 24, "d": [25, 26, 30], "d20240917": 27, "dahua": 26, "dai": [20, 26], "dampen": 10, "dan": [20, 26], "daniel": 26, "danpeng": 26, "data": [0, 1, 3, 4, 6, 8, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 30], "data_indic": 17, "data_path": 17, "data_rang": 10, "databas": 29, "database_path": 29, "dataset": [1, 2, 3, 7, 8, 11, 12, 15, 19, 21, 22, 23, 24, 26, 27, 28, 31], "dataset_index_select": [6, 18], "dataset_load_featur": 6, "dataset_metadata": [12, 14, 27], "datasetinfo": 11, "datasetloaderspec": 3, "datasetnotfounderror": 3, "datasetspec": 3, "datasetspecmetadata": 3, "datetim": 27, "david": [20, 26], "db": 29, "dcvl": 26, "de": 26, "dearmor": 25, "deb": 25, "deborah": [20, 26], "debug": [17, 27], "decid": [27, 29], "declar": 1, "decompos": 13, "decomposit": 26, "decreas": 26, "def": [0, 1, 18], "default": [0, 1, 3, 10, 13, 16, 17, 18, 20, 21, 25, 26, 28, 29, 30], "default_metr": [0, 3, 11], "defaultevaluationprotocol": 7, "defin": [10, 17, 23], "degre": 26, "del": 16, "delaunai": 26, "delet": 30, "demo": [22, 24, 26], "demonstr": [1, 27], "demuc": 26, "dens": 26, "densif": 26, "densification_interv": 27, "densify_from_it": 27, "densify_grad_threshold": 27, "densify_until_it": 27, "depend": [1, 11, 16, 19, 20, 25, 29], "depth": [3, 13, 17, 26, 27, 30], "depth_mean": 26, "depth_mod": 26, "derya": [20, 26], "desc": 8, "describ": [1, 25], "descript": [0, 3, 7, 8, 9, 11], "deserialize_nb_info": 8, "design": 26, "detach": 1, "detail": [24, 26], "detect": [0, 18, 28, 29], "determin": [1, 10], "determinist": 26, "dev6": 27, "develop": [1, 17, 19, 20, 26], "deviat": 10, "dialog": 30, "dict": [0, 1, 3, 6, 7, 8, 9, 11, 12, 14], "dictionari": [3, 6, 7, 11, 16, 18, 27], "differ": [1, 13, 16, 17, 20, 22, 24, 26, 27, 28, 30, 31], "differenct": 28, "difficult": [24, 30], "difficulti": 24, "dim": 10, "dimens": [13, 17], "dimension": 26, "direct": [5, 26, 30], "directli": [0, 6, 16, 17, 29, 30], "directori": [0, 1, 3, 6, 7, 8, 12, 17, 18, 19, 21, 22, 23, 27, 28, 29, 30], "dirnam": 0, "disabl": [4, 16, 17], "disagn": 26, "discard": 16, "discov": 1, "discover": 1, "disk": [16, 26], "displai": [27, 30], "display_nam": [3, 9], "distanc": [26, 30], "distort": [3, 18, 26], "distortion_map": 26, "distortion_paramet": [3, 18], "distractor": 26, "distribut": [25, 26], "dm_pix": 10, "dmpix_ssim": 10, "do": [0, 1, 13, 17, 18, 19, 26, 29, 30, 31], "doc": [15, 17, 19, 23, 26], "docker": [3, 4, 16, 17, 26, 27, 28], "dockerbackend": 4, "dockerbackendspec": 4, "dockerfil": 16, "document": [17, 18, 19, 22, 29, 30], "doe": [0, 10, 13, 16, 25, 26, 29], "doesn": 21, "doi": 13, "don": [1, 23], "done": [0, 16, 24, 27, 30], "dongbin": 26, "dor": [0, 20, 26], "down": 30, "download": [1, 6, 16, 20, 24, 25, 27, 28, 30], "download_blender_dataset": 6, "download_dataset": [0, 6], "download_dataset_funct": [0, 3], "download_hierarchical_3dgs_dataset": 6, "download_llff_dataset": 6, "download_mipnerf360_dataset": 6, "download_mipnerf360_sparse_dataset": 6, "download_my_dataset": 0, "download_nerfstudio_dataset": 6, "download_phototourism_dataset": 6, "download_seathru_nerf_dataset": 6, "download_tanksandtemples_dataset": 6, "download_zipnerf_dataset": 6, "downloaddatasetfunct": 3, "downsampl": 20, "downscal": [27, 29], "downscale_factor": [6, 27, 29], "downscale_loaded_factor": 29, "dpt": 26, "drag": 30, "drettaki": [20, 26], "drive": [0, 6], "drive_link": 6, "driver": 25, "dropdown": 30, "dropgaussian": 17, "dropgaussian_releas": 26, "drum": 6, "dtu": 26, "dtype": [1, 4, 13, 16, 18, 27], "dtype_nam": 16, "dump": 1, "duplic": 30, "dur": 26, "durat": 30, "dure": 26, "dx": 13, "dynam": 26, "e": [0, 1, 10, 16, 17, 18, 19, 24, 27, 28, 29, 30], "each": [0, 10, 13, 16, 17, 18, 19, 20, 25, 26, 27, 29, 30], "easi": [1, 23, 24, 25], "easier": 1, "easiest": [1, 16], "easili": [1, 21, 24], "eastbeanzhang": 26, "edit": 30, "editor": 30, "edu": 20, "educ": 24, "effici": 26, "eigenvalu": 13, "either": [1, 6, 16, 17, 20, 23, 26, 27, 30], "element": [13, 26], "elev": [0, 20], "els": [0, 1, 4, 13, 18], "embed": [3, 7, 9, 17, 20, 26, 27, 28], "embedding_train_index": 3, "emphasi": 30, "empti": 16, "enabl": [1, 4, 16, 17, 23, 25, 26, 28, 30], "encapsul": 16, "encod": [26, 30], "end": [16, 23, 26, 27, 28], "endpoint": 18, "enliang": 26, "ensur": [7, 18, 29, 30], "enter": [30, 31], "enter_context": [27, 30, 31], "environ": [0, 1, 16, 17, 20, 25, 29], "environment_nam": [1, 4], "equival": 13, "erf": 24, "error": [3, 10, 13], "especi": 26, "establish": [16, 30], "estim": [10, 17, 20], "etc": [1, 18, 25, 28, 29, 30], "ethan": [20, 26], "eval": [1, 17, 27], "eval_al": 12, "eval_all_it": [12, 17, 27], "eval_batch_s": 3, "eval_few": 12, "eval_few_it": [12, 17, 27], "evalu": [0, 1, 2, 3, 6, 11, 13, 20, 24, 26, 27, 28], "evaluation_protocol": [0, 3, 7, 8, 12, 27], "evaluation_protocol_class": 3, "evaluationprotocol": [3, 6, 7, 12], "evaluationprotocolspec": 3, "evan": 26, "even": 17, "event": [8, 9], "everi": [13, 27], "every_it": [13, 27], "everyth": 28, "everywher": 4, "evonn": [20, 26], "exactli": 10, "exampl": [0, 1, 13, 16, 18, 21, 23, 27, 28, 29, 30, 31], "except": [3, 13], "exhaustive_match": 29, "exist": [0, 1, 17, 24, 29, 30, 31], "exist_ok": [0, 1], "exit": [23, 27], "exitstack": [27, 30, 31], "expand": 1, "expect": [16, 19], "expected_scal": 13, "expected_scene_scal": 27, "experi": [17, 28], "explicit": [18, 26, 29], "explicitli": 18, "exploit": 26, "explor": 20, "exponenti": 30, "export": [0, 1, 19, 24, 25], "export_viewer_dataset": 14, "exposur": [20, 26], "express": 13, "expro": 24, "extend": [26, 27, 28], "extens": [24, 26, 28], "extern": [0, 1, 17, 21, 22, 27, 28, 30, 31], "extra": 7, "extract": [0, 19, 26, 27, 28], "extractal": 0, "extrem": 16, "f": [0, 1, 6, 18, 27], "face": [20, 26, 29], "factor": [26, 29, 30], "fail": 16, "fallback": 16, "fals": [4, 7, 10, 13, 15, 18, 27, 30, 31], "famou": 20, "far": [3, 18], "fast": [1, 26, 30], "faster": [16, 26, 27, 30], "fastest": 16, "featur": [1, 6, 16, 17, 26, 27, 30, 31], "feature_extractor": 29, "feature_lr": 27, "feixiang": 26, "fernando": 26, "few": [1, 17, 26, 27], "ficu": 6, "fidel": 26, "field": [0, 11, 17, 18, 19, 20, 22, 23, 29], "file": [0, 3, 7, 8, 11, 14, 17, 18, 19, 22, 23, 27, 28, 29, 30], "filenam": 30, "filter": [3, 10], "filter_fn": 10, "final": [0, 1, 12, 16, 17, 26, 27, 30, 31], "find": 22, "finest": 26, "finger": 30, "finish": [27, 28], "first": [0, 1, 10, 16, 18, 23, 25, 27, 30, 31], "fishey": 20, "fit": [18, 30], "five": [0, 20], "fix": [0, 20, 26, 30], "flatten": 5, "float": [1, 3, 6, 7, 9, 10, 11, 12, 13, 18, 26], "float32": [1, 10, 18, 27], "float64": 10, "floater": 26, "flower": 23, "fly": 26, "fn": 3, "focal": 18, "focal_i": 18, "focal_x": 18, "folder": [6, 23, 28], "follog": 16, "follow": [0, 1, 13, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "foot": 20, "footprint": 26, "forc": 17, "forg": [25, 29], "form": [17, 18, 20], "format": [0, 5, 6, 16, 17, 22, 23, 28, 29, 30], "format_dur": 11, "format_memori": 11, "formul": 26, "formula": 13, "formycat": 26, "forward": [20, 26, 29, 30], "found": [1, 25, 30], "foundat": 24, "fountain": 20, "four": [0, 20], "fov": 30, "fp": [3, 7, 26, 30], "fr": [20, 23, 26], "frahm": 26, "frame": [0, 3, 7, 20, 28, 30], "framework": [1, 20, 24, 26], "francisco": 26, "frederik": 26, "free": [17, 26], "fridovich": 26, "from": [0, 1, 3, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31], "from_numpi": [1, 16], "fromarrai": 27, "frozenset": [1, 3, 6, 12, 27], "frustum": [26, 28, 30], "fssl": 25, "full": [0, 1, 17, 24, 28, 30], "full_opencv": [3, 6, 26], "fulli": 16, "function": [1, 3, 4, 5, 10, 12, 13, 14, 16, 27, 30, 31], "fundament": 26, "fungraph": [20, 23, 26], "further": 28, "furthermor": [17, 19, 23], "fuse": 17, "futur": 26, "fx": [3, 27], "fy": [3, 27], "g": [0, 1, 16, 17, 18, 19, 23, 25, 27, 28, 29, 30], "gao": 26, "garden": [0, 23, 27, 28], "gate": 20, "gaussian": [10, 17, 19, 20, 21, 22, 23, 27, 28], "gaussian_kernel": 10, "gaussians_low": [20, 26], "ga\u010dr": 24, "gb": 23, "geacf155": 27, "geiger": 26, "gener": [3, 11, 16, 18, 19, 26, 30], "generate_output_artifact": [12, 27], "genericcamera": [3, 5], "geometr": 26, "geometri": 26, "georg": [20, 26], "georgio": [20, 26], "gestur": 30, "get": [0, 3, 5, 11, 13, 25, 27, 28], "get_backend": 4, "get_checkpoint_sha": 8, "get_dataset_info": 11, "get_dataset_loader_spec": 3, "get_dataset_spec": 3, "get_evaluation_protocol_spec": 3, "get_image_pixel": 5, "get_implemented_backend": 4, "get_info": [1, 3, 17, 27], "get_ipython": [30, 31], "get_logg": 12, "get_logger_spec": 3, "get_method_info": [1, 3, 27], "get_method_info_from_spec": 11, "get_method_sha": 8, "get_method_spec": [3, 27], "get_metrics_hash": 8, "get_mount": 4, "get_nam": [3, 6, 7], "get_palett": 13, "get_predictions_sha": 8, "get_presets_and_config_overrid": [12, 27], "get_rai": 5, "get_resources_utilization_info": 12, "get_supported_dataset": 3, "get_supported_dataset_load": 3, "get_supported_evaluation_protocol": 3, "get_supported_logg": 3, "get_supported_method": 3, "get_supported_palette_nam": 13, "get_torch_checkpoint_sha": 8, "get_train_embed": 3, "get_transform_and_scal": 13, "get_viewer_params_from_dataset_metadata": 14, "get_viewer_params_from_nb_info": 14, "giacomo": 26, "git": 25, "github": [19, 20, 23, 24, 25, 26, 27], "githubusercont": 25, "give": [25, 27, 30], "given": [3, 12, 13, 14], "go": 30, "goel": 26, "good": [25, 26], "googl": [0, 6, 31], "googleapi": 20, "gopal": 26, "gopro": 20, "gpg": 25, "gpgkei": 25, "gpl": 26, "gpu": [23, 30], "gpu_memori": [12, 27], "gpu_nam": [12, 27], "grant": 24, "graphic": 26, "graviti": 28, "grayscal": 10, "great": [24, 29], "grid": [20, 26], "ground": [10, 17, 20], "ground_truth_sha": 8, "group": 25, "grow": 26, "gsplat": [17, 23, 30, 31], "gt": 7, "guid": [0, 1, 18, 19, 27, 28, 29], "guidanc": 13, "gun": 26, "guofeng": 26, "gz": [17, 28], "h": [1, 5, 10, 18, 20, 27], "h3dg": 20, "ha": [5, 13, 16, 25, 26, 30, 31], "hai": 26, "handl": [4, 26, 30, 31], "hao": 26, "haolin": 26, "haomin": 26, "haoqian": 26, "happen": 13, "has_scal": 13, "hash": [8, 26, 27], "have": [0, 1, 10, 11, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "haven": [23, 25, 28], "he": 26, "hedman": [0, 20, 26], "height": [14, 18, 24, 30], "helmet": 20, "help": [1, 23, 28, 29], "helper": 18, "henzler": 26, "here": [0, 1, 25, 28, 29], "hermit": 30, "hero6": 20, "heurist": 26, "hierarch": [17, 26], "high": [26, 27], "higher": 10, "highest": [16, 26], "hint": 27, "histogram": 9, "hline": 23, "home": [17, 25], "home_path": 4, "homogen": 13, "hossam": 26, "host": [0, 14, 16, 17, 19, 30], "hotdog": 6, "hou": 26, "how": [0, 1, 16, 21, 22, 23, 27, 28, 29, 30], "howev": [1, 4, 16, 18, 21, 22, 23, 26, 27, 29, 30, 31], "hparam": [1, 3, 9, 27], "hparam_plugin_metr": 9, "hpc": [16, 25], "html": [17, 21, 30], "http": [0, 1, 6, 13, 17, 19, 20, 21, 23, 25, 26, 27, 30, 31], "hu": 26, "huang": 26, "huge": 26, "huggingfac": [27, 30, 31], "hujun": 26, "human": 0, "humansensinglab": 26, "hyperparamet": 1, "hyunwoo": 26, "i": [0, 1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31], "icon": 30, "id": [0, 1, 3, 4, 7, 11, 17, 18, 20, 24, 26, 27, 29], "identifi": [0, 9], "ieee": 10, "ifram": [30, 31], "ignor": [10, 27, 30], "imag": [0, 1, 3, 4, 5, 7, 9, 10, 12, 13, 16, 17, 18, 20, 21, 24, 26, 29, 31], "image_nam": 18, "image_path": [3, 18, 29], "image_paths_root": [3, 18], "image_s": [1, 3, 5, 18, 27], "image_to_srgb": 13, "images_path": 6, "images_points2d_xi": [3, 6, 26], "images_points3d_indic": [3, 6, 26], "img": 24, "implement": [0, 1, 10, 11, 16, 17, 18, 20, 24, 25, 26, 28, 29, 31], "implementation_statu": 3, "import": [0, 1, 4, 11, 16, 18, 27, 30, 31], "improv": [17, 26], "includ": [13, 17, 20, 22, 23, 30], "include_demo": 15, "include_doc": [15, 17], "include_registry_data": 14, "increas": 24, "index": [1, 3, 10, 17], "indic": [6, 12, 13, 17, 18, 21, 27], "individu": [10, 28], "indoor": [0, 20], "industri": 20, "infer": 1, "info": [0, 1, 3, 7, 8, 11, 17, 18, 20, 23, 26, 27, 29], "inform": [0, 1, 18, 22, 27, 28, 29, 30], "infra": 24, "ingp": 26, "initi": [1, 3, 12, 17, 26, 30, 31], "initial_color": 1, "initialis": 27, "inplac": 17, "input": [5, 10, 13, 17, 19, 22, 26, 28, 30], "inria": [20, 23, 26], "insid": [3, 4, 16, 17, 25, 30, 31], "inspect": [28, 30], "inspir": 26, "instal": [1, 4, 16, 19, 24, 28, 29, 30, 31], "install_script": [1, 4], "instanc": [3, 4, 19], "instance_cal": 4, "instance_del": 4, "instant": [17, 23], "instead": [16, 23, 24, 26, 28, 30], "instruct": [1, 4, 25, 29], "int": [1, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15], "int32": [18, 27], "integ": 18, "integr": [1, 26, 30], "intend": 30, "interact": [17, 21, 25, 27, 28], "interest": 6, "interfac": [1, 16, 24, 27, 30], "intermedi": [17, 20], "intern": 16, "interpl": 30, "interpol": [5, 30], "interpolate_bilinear": 5, "intrins": [3, 18, 20, 26, 27, 30], "introduc": [0, 26], "invalid": [0, 16], "invert": 13, "invert_transform": 13, "involv": 17, "io": [2, 19, 20, 23, 25, 26, 27], "iqjrbg": 6, "isack": 26, "isol": [24, 25], "issu": 1, "item": [1, 3], "iter": [1, 3, 6, 7, 8, 13, 17, 26, 27], "its": [1, 19, 22, 30], "itself": [13, 30, 31], "itzhack": 13, "j": [13, 30], "jaesik": 20, "jake": [20, 26], "jan": 26, "jeffrei": 26, "jialin": 26, "jianbo": 26, "jiang": 26, "jiangbei": 26, "jingyi": 26, "jkulhanek": 26, "johann": 26, "join": [0, 1, 18], "jona": [24, 26, 27], "jonathan": [0, 20, 26], "jonbarron": [0, 20, 23, 26], "journal": 24, "jpg": [0, 18, 29], "json": [0, 1, 7, 11, 17, 18, 19, 23, 27, 28, 29, 30], "julia": 26, "jupyt": 31, "just": [1, 13], "justin": [20, 26], "k": [16, 18], "k1": [10, 18], "k2": [10, 18], "k3": 18, "k4": 18, "k5": 18, "k6": 18, "kadambi": 26, "kalantari": 20, "kamyar": [20, 26], "kanazawa": [20, 26], "kar": [20, 26], "keep": [30, 31], "kei": [17, 30], "keil": 26, "keller": 26, "kerbl": [20, 26], "kernel": 10, "kernel_s": 10, "kerr": [20, 26], "kerui": 26, "keunhong": 26, "keyboard": 30, "keyfram": 30, "keyr": 25, "keyword": 18, "khademi": 20, "kheradmand": 26, "kim": 26, "knapitsch": 20, "know": 29, "kochanek": 30, "koltun": 20, "kopana": [20, 26], "korman": [20, 26], "kplane": [17, 26], "kristoffersen": [20, 26], "kulhanek": [24, 26], "kulhanek2024nerfbaselin": 24, "kwang": 26, "kwarg": [3, 4, 6, 9, 18], "l": [25, 30], "la": 26, "lab": 20, "label": [3, 9], "lambda_dssim": 27, "landmark": 20, "lanvin": [20, 26], "larg": [4, 20, 26], "larger": [26, 29], "laser": 20, "last": [12, 13, 30], "later": [28, 30], "latest": [17, 19, 25], "latex": [11, 17], "latter": 16, "launch": 30, "lazi": 12, "lead": 26, "learn": 10, "least": [10, 18, 26], "left": [13, 20, 24, 30], "lego": [1, 6, 30, 31], "leimk\u00fchler": 26, "len": [1, 18, 20], "less": 20, "let": [0, 1, 18, 26, 28, 29], "level": [16, 24, 25, 26, 27], "levi": [20, 26], "levy_seathru": [20, 26], "li": [20, 26], "libnvidia": 25, "librari": 26, "licens": [3, 11, 20, 26], "licensespec": [3, 11], "lifetim": 16, "light": [20, 26], "lightweight": 30, "lihan": 26, "like": [18, 19, 23, 24], "limin": 26, "limit": 26, "lin": 26, "linalgerror": 13, "linbo": 26, "line": [25, 26, 29], "linear": [13, 30], "link": [0, 1, 3, 11, 17, 23], "linspac": 18, "linux": 25, "list": [0, 1, 3, 6, 7, 9, 11, 12, 13, 17, 18, 21, 23, 24, 25, 26, 27, 28, 30], "liter": [3, 4, 6, 7, 8, 11, 12, 15], "liu": 26, "llff": 26, "load": [1, 3, 6, 11, 17, 18, 27, 29, 31], "load_blender_dataset": 6, "load_bundler_dataset": 6, "load_checkpoint": [3, 27, 30, 31], "load_colmap_dataset": 6, "load_dataset": [6, 27, 30, 31], "load_dataset_funct": [3, 18], "load_featur": [6, 27, 30, 31], "load_llff_dataset": 6, "load_metrics_from_result": 11, "load_my_dataset": 18, "load_nerfonthego_dataset": 6, "load_nerfstudio_dataset": 6, "load_seathru_nerf_dataset": 6, "load_state_dict": 1, "load_trajectori": 8, "loaddatasetfunct": 3, "loaded_checkpoint": [1, 3, 27], "loaded_step": [1, 3, 27], "loader": [0, 3, 24, 29], "local": [3, 13, 17, 21, 25, 26, 27, 30], "localhost": [14, 16, 17, 19, 21, 30], "locat": [0, 30], "lock": 30, "lod": 26, "log": [2, 16, 17, 19, 23, 27, 28], "log_metr": 9, "logdir": 9, "logger": [3, 9, 12, 17, 27, 28], "logger_class": 3, "loggerev": [3, 9], "loggerspec": 3, "london": 20, "long": [13, 20, 30, 31], "longer": 30, "look": [19, 23, 30], "loop": [14, 27, 30, 31], "loss": 1, "low": [16, 26], "lower": 10, "lpip": [7, 10, 23], "lpips_alex": 10, "lpips_vgg": [0, 10], "lr": 1, "lrrrrr": 23, "lu": 26, "lutz": 26, "m": [16, 18, 20, 21, 25], "machin": 30, "maco": 25, "made": 16, "mae": 10, "magnitud": 10, "mai": [0, 13, 16, 22, 29], "main": [1, 13, 16, 23, 25, 26, 27, 30, 31], "make": [0, 1, 13, 26, 27, 30, 31], "make_image_grid": 12, "makedir": [0, 1], "mallick": 26, "manag": [3, 4, 13, 16, 27, 30, 31], "mani": [1, 18], "manual": [16, 19, 30], "map": [5, 10, 17, 18, 26], "mapper": [20, 29], "marc": 26, "markdown": [11, 17], "markov": 26, "marku": 26, "martin": 26, "mask": [3, 7, 18, 26], "mask_path": [3, 18], "mask_paths_root": [3, 18], "masks_path": 6, "match": [1, 10, 17, 26], "materi": 6, "matia": 26, "matplotlib": 13, "matric": [3, 13, 18], "matrix": [13, 18, 27], "matthew": [20, 26], "matthewtancik": [20, 26], "max": [10, 30], "max_val": 10, "max_width": 12, "maximum": [10, 13], "mb": 23, "mcallist": [20, 26], "mcmc": [17, 23], "mean": [10, 16, 26], "meanti": 26, "measur": 10, "media": [20, 26], "median": 17, "mem": 23, "memori": [4, 11, 12, 16, 26, 27], "memoryview": 4, "merg": [1, 12, 26], "merge_viewer_param": 14, "mesh": [21, 24, 26], "messag": [16, 23, 30], "metadata": [1, 3, 11, 12, 17, 18, 27, 29], "method": [3, 4, 6, 7, 8, 11, 12, 13, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31], "method_cl": 27, "method_class": [1, 3], "method_id": [1, 3, 27], "method_info": 27, "method_link": [11, 17], "method_nam": [17, 27], "method_spec": [4, 12, 27], "methodinfo": [3, 11], "methodspec": [3, 4, 11, 12], "metric": [0, 2, 3, 6, 7, 8, 9, 11, 12, 20, 24, 26, 27, 28], "metricinfo": 11, "metrics_list": 8, "metrics_path": 8, "metricsaccumul": 12, "meuleman": [20, 26], "mic": 6, "michael": [20, 26], "might": 29, "mildenhal": [0, 20, 26], "min": [10, 26], "minghan": 26, "miniforg": 25, "miniforge3": 25, "minim": [24, 27], "ministri": 24, "mip": [0, 17, 23, 28], "mipnerf": 26, "mipnerf360": [0, 17, 20, 21, 22, 23, 26, 27, 28], "mirror": 20, "mit": 26, "mixtur": 26, "mkdir": 29, "mlp": 26, "mobil": 20, "mode": [4, 8, 30], "model": [0, 1, 3, 8, 10, 14, 17, 20, 21, 22, 23, 26, 27, 30, 31], "model_info": 27, "model_path": 8, "modelinfo": [1, 3], "modif": 26, "modifi": [20, 26], "modul": [13, 30], "modular": [20, 26], "monodular": 26, "mont": 26, "moo": 26, "more": [1, 13, 14, 18, 22, 26, 30], "most": [16, 17, 24], "motion": 30, "motiv": 30, "mount": [3, 4, 20, 27], "mous": 30, "move": [0, 16, 30], "movement": 30, "mp4": [17, 28, 30], "mse": 10, "mse_loss": 1, "much": [1, 29], "mueller2022inst": 26, "mulin": 26, "multi": 26, "multipl": [1, 17, 21, 22, 23, 26, 27, 30, 31], "multipli": 13, "multiresolut": 26, "must": [1, 10, 17, 30], "muttukuru": 26, "mv": 26, "my": [0, 1, 18, 29], "my_dataload": 18, "my_dataloader_spec": 18, "my_dataset": 0, "my_dataset_spec": 0, "my_method": 1, "my_method_spec": 1, "my_scen": 0, "mymethod": 1, "m\u00fcller": 26, "n": [0, 3, 5, 13, 18, 20, 24], "naama": [20, 26], "name": [0, 3, 4, 6, 11, 13, 16, 17, 18], "nan": 26, "navig": [21, 25, 30], "nb": [0, 3, 17, 18, 27, 29], "nb_info": [7, 8, 12, 14, 30, 31], "nb_version": 27, "nbsp": 24, "ncol": 12, "ndarrai": [3, 5, 6, 7, 8, 9, 10, 12, 13, 16], "ndc": 20, "ndim": 13, "near_far": 13, "nearest": [13, 17], "nears_far": [3, 18], "necessari": [1, 16, 27, 29], "need": [0, 1, 3, 18, 19, 23, 25, 27, 28, 29, 30, 31], "neg": 17, "nerf": [0, 8, 17, 23, 24, 27, 28], "nerf360": 26, "nerf_neural_radiance_fields_in_scattering_media_cvpr_2023_pap": [20, 26], "nerfacto": [17, 26], "nerfbaselin": [0, 2, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "nerfbaselines_backend": [17, 25], "nerfbaselines_protocol": 16, "nerfbaselines_regist": [0, 1], "nerfbaselines_shm_s": 16, "nerfbaselines_tcp_hostnam": 16, "nerfbaselines_tcp_port": 16, "nerfevaluationprotocol": 7, "nerfonthego": [17, 26], "nerfstudio": [23, 24, 28], "nerfw": [17, 20, 26], "nerfwevaluationprotocol": 6, "neural": [0, 20, 26], "new": [16, 17, 24, 26, 29, 30, 31], "new_artifact": 17, "new_camera": [3, 18, 27], "new_checkpoint": 17, "new_dataset": [3, 18], "new_nb_info": 8, "newcommand": 23, "next": [1, 4, 25, 28, 29, 30], "ng": [20, 26], "ngp": [17, 23], "ni": 26, "nima": 20, "niujinshuchong": [23, 26], "nn": 1, "no_grad": 1, "noah": 20, "nois": [10, 26], "non": 13, "none": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 23, 27, 30, 31], "nor": 0, "normal": [17, 26, 27, 30], "note": [10, 13, 16, 17, 26, 27, 29, 30, 31], "notebook": 31, "notic": [29, 30], "notif": 30, "notifi": 0, "notrequir": [3, 11], "novel": [24, 26], "now": [0, 1, 13, 16, 18, 19, 21, 24, 25, 29], "np": [16, 18, 27], "np_arrai": 16, "nsvf": 26, "nu_degre": 26, "num": 17, "num_bin": [3, 9], "num_iter": [1, 3, 12, 27], "num_param": 3, "num_pixel": 5, "num_repeat": 17, "num_repeats_median": 17, "num_sampl": 9, "number": [1, 13, 17, 27, 30], "numer": [10, 13], "numpi": [1, 13, 16, 18, 27], "numpy_from_base64": 8, "numpy_to_base64": 8, "nv": 20, "nvidia": 27, "nvlab": [23, 26], "nx3x3": 13, "nyc": 20, "o": [0, 1, 17, 18, 25], "object": [0, 1, 4, 9, 12, 13, 14, 17, 18, 20, 26, 27, 29], "obtain": [6, 11, 12, 17, 20, 21, 22, 23, 26, 27, 30], "occlus": 20, "octre": 17, "off": 26, "offer": 25, "offici": [1, 23, 24, 26, 27, 28, 29, 30, 31], "offset": 5, "often": 25, "ohk3": 24, "old": 16, "older": 17, "omit": 0, "onc": 1, "one": [0, 3, 16, 17, 29], "onli": [0, 1, 3, 4, 10, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31], "onlin": [0, 24], "opac": [17, 19, 22, 23], "opacity_lr": 27, "opacity_reset_interv": 27, "open": [0, 1, 3, 17, 18, 19, 21, 23, 26, 27, 30, 31], "open_ani": 8, "open_any_directori": 8, "openaccess": [20, 26], "opencv": [1, 3, 6, 18, 26], "opencv_fishey": [3, 6, 26], "opengl": 6, "oper": [13, 25], "oppos": 1, "opt": 16, "optim": [1, 3, 17, 20, 26, 27], "optim_st": 1, "optimize_embed": 3, "optimizeembeddingoutput": 3, "option": [0, 1, 3, 4, 6, 7, 12, 16, 17, 18, 19, 23, 26, 27, 28, 30], "option1": 30, "option2": 30, "orang": 23, "orbit": [0, 20, 30], "orchestr": 16, "order": [0, 1, 16, 18, 19, 25, 26, 29, 30, 31], "org": [0, 1, 13, 20, 26], "organ": 24, "orient": [26, 30], "origin": [1, 5, 17, 22, 23, 26, 29], "orthogon": 13, "ortiz": 20, "other": [0, 1, 17, 18, 21, 25, 26, 29, 30], "otherwis": [3, 4, 10, 16, 26, 29], "otto": 26, "our": [1, 19, 21, 22, 23, 26, 28], "out": [6, 24, 30], "outdoor": [0, 20], "output": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 26, 27, 28, 30], "output_artifact": 3, "output_dir": 0, "output_nam": [7, 17], "output_path": [8, 27, 29], "output_queu": 30, "output_typ": 17, "output_type_dtyp": [3, 27], "output_zip": 0, "outputartifact": 3, "outsid": 20, "over": [23, 30], "overcom": 26, "overhead": 30, "overlap": 29, "overrid": [1, 12, 16, 17, 27], "overridden": 17, "overriden": 30, "overwrit": 17, "overwritten": [4, 16], "own": [0, 16, 18, 19, 23, 27, 28], "p": [0, 4, 10, 13, 20, 23, 26], "p1": 18, "p2": 18, "packag": [16, 25, 28], "pad": [12, 13, 30], "pad_pos": 13, "padded_stack": 13, "page": [17, 19, 24, 25, 28], "pair": 10, "palett": 13, "pallet": 13, "pan": [26, 30], "panel": 30, "paper": [0, 1, 6, 11, 13, 17, 20, 23, 24, 26], "paper_author": [0, 3, 11], "paper_link": [0, 3, 11], "paper_lit": 26, "paper_titl": [0, 3, 11], "paradigm": 26, "param": [1, 10, 14], "paramet": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 26, 27, 29, 30], "parametr": 20, "parent": 19, "park": [20, 26], "park_dropgaussian_structural_regularization_for_spars": 26, "pass": [1, 3, 13, 26], "patch": 10, "path": [0, 1, 3, 4, 6, 7, 8, 9, 11, 14, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30], "path_is_video": 7, "pbar": 27, "pchip": 30, "pd": 4, "pdf": [0, 20, 26], "peak": 10, "pearl": [20, 26], "peihao": 26, "peleg": [20, 26], "peng": 26, "per": [10, 20, 26, 30], "percent_dens": 27, "perceptu": 10, "perform": [1, 10, 14, 16, 20, 26, 28], "period": [17, 30], "perman": 1, "perpendicular": 30, "persist": 27, "person": 30, "perspect": 18, "peter": [0, 20, 26], "pf": 23, "pgsr": 17, "philipp": 26, "phone": 20, "photo": [17, 28], "photo_tour": 20, "phototour": 20, "pick": 26, "pickl": 16, "pickle5": [16, 27], "pid": 12, "piecewis": 30, "pil": 27, "pinhol": [1, 3, 5, 6, 26, 27], "pip": [1, 19, 25, 30, 31], "pipe": 16, "pipelin": 26, "pixel": [5, 10, 30], "pixelwis": 26, "place": [16, 17, 18, 20, 23, 29, 30], "placehold": 17, "plai": 30, "plan": 26, "planar": 26, "plane": [3, 18, 30], "playback": 30, "pleas": [0, 24, 25, 28, 29, 30, 31], "ply": [17, 18, 22], "png": 30, "point": [5, 16, 18, 22, 23, 26, 27, 28, 29, 30], "points3d": [0, 18, 29], "points3d_error": [3, 6, 26], "points3d_indic": 18, "points3d_rgb": [3, 6, 14, 18, 26], "points3d_xyz": [1, 3, 6, 14, 18, 26, 27], "poisson": 26, "pollefei": 26, "polycam": 20, "polynomi": 30, "pop": [12, 30], "port": [14, 15, 16, 17, 21, 30], "pose": [3, 5, 13, 18, 20, 26, 27, 28, 30], "posit": [24, 30], "position_lr_delay_mult": 27, "position_lr_fin": 27, "position_lr_init": 27, "position_lr_max_step": 27, "possibl": [0, 1, 10, 30], "power": 30, "pp": 10, "pprint": 27, "practic": 27, "pradyumna": 26, "pragu": 24, "pratul": [0, 20, 26], "pre": [16, 17, 26], "precis": 10, "precondit": 26, "pred": [1, 7, 10], "predefin": 1, "predict": [1, 3, 6, 7, 8, 10, 17, 19, 26, 27, 28], "predictions_path": 8, "predictions_sha": 8, "predictor": 26, "prefix": [9, 18], "prepar": [8, 27, 30, 31], "presenc": 0, "present": [17, 19, 25, 30], "preserv": 17, "preset": [1, 3, 12, 17, 26, 27], "press": 30, "pretti": 13, "preview": 30, "previou": [27, 28], "primarili": 26, "primit": 26, "print": [23, 27, 28], "prior": [26, 29], "prioriti": 3, "privileg": 25, "problem": 26, "proceed": 30, "process": [10, 12, 14, 16, 18, 19, 20, 25, 26, 27, 28, 30, 31], "produc": [10, 13, 17], "programmat": 27, "progress": [7, 17, 30], "project": [5, 19, 24, 27], "properli": 21, "properti": [3, 12, 14, 30], "protocol": [3, 7, 16, 17, 20, 24, 27], "provid": [1, 3, 12, 16, 17, 20, 21, 23, 24, 26, 27, 30], "providecommand": 23, "proxi": 30, "prune": 26, "psnr": [0, 10, 23, 26, 27], "pt": 23, "pth": 1, "public": [0, 1, 20, 24, 30], "publicli": 30, "publish": 29, "pull": [1, 16, 18], "pure": 13, "purpos": [1, 26], "put": 30, "pwd": [0, 1], "py": [0, 1, 18, 23, 27], "pyramid": 30, "python": [0, 1, 3, 4, 16, 17, 18, 21, 24, 26], "python_path": 4, "python_vers": [1, 4], "pytorch": [1, 7], "q": [13, 30, 31], "q1": 13, "q2": 13, "qian": 20, "qin": 26, "qualiti": [10, 26, 30], "quaternion": 13, "quaternion_conjug": 13, "quaternion_multipli": 13, "quaternion_to_rotation_matrix": 13, "queue": [14, 30], "quickli": 26, "quickstart": 24, "quit": 13, "r": [0, 1, 3, 8, 10, 13, 18], "radianc": [0, 20, 26], "radiu": [0, 20], "rahul": 26, "rai": [5, 26], "rais": [3, 13], "raise_for_statu": 0, "ramamoorthi": [20, 26], "ran": [29, 30], "rand_idx": 1, "randint": 1, "random": [1, 16, 17], "random_background": 27, "rang": [10, 13, 27, 30], "rank": 26, "rare": 27, "raster": 26, "rate": 30, "ratio": [10, 17, 30], "ravi": [20, 26], "raw": 25, "raymarch": 5, "reach": [26, 30], "read": [17, 18], "read_imag": 8, "read_mask": 8, "read_tensorboard_metr": 9, "readabl": 0, "reader": 18, "readi": [16, 29], "real": [20, 26, 27], "realcran": 26, "realist": 20, "rebain": 26, "rebuild": 17, "receiv": 16, "recht": 26, "reciev": 16, "recommend": [1, 16, 17, 20, 21, 25, 26, 29, 30, 31], "reconstruct": [20, 22, 26], "red": 23, "redefin": 23, "reduc": [7, 10, 29], "refer": [26, 28], "refin": 26, "region": 26, "regist": [3, 17, 27], "registri": [1, 16, 17], "regular": 26, "reimpl": [17, 26], "reimplement": 24, "reinterpret": 26, "rel": [13, 24, 29, 30], "releas": [16, 19, 20, 24, 25, 29], "reli": [16, 25], "reload": 17, "remot": [3, 17], "remoteprocessrpcbackend": 4, "remov": [13, 26], "ren": [20, 26], "render": [1, 3, 6, 7, 14, 16, 20, 21, 23, 24, 26, 31], "render_all_imag": 7, "render_dataset_metadata": 27, "render_datetim": 27, "render_fram": 7, "render_latex_dataset_results_t": 11, "render_markdown_dataset_results_t": 11, "render_output": 3, "render_vers": 27, "renderopt": 3, "renderoutputtyp": 3, "reorder": 30, "repeat": 17, "replac": [3, 17], "replace_us": 4, "repo": [20, 23, 26, 27], "report": [1, 26], "repositori": [1, 11, 17, 30, 31], "repres": [13, 20, 26, 27, 30], "represent": [20, 26], "reproduc": [1, 3, 24], "republ": 24, "request": [0, 1, 4, 18, 30, 31], "request_queu": 30, "requir": [0, 1, 3, 4, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "required_featur": [1, 3, 27], "rerun": 17, "resav": 1, "rescal": 28, "research": [24, 26], "reshap": 18, "resiz": 29, "resolut": [17, 20, 27, 29, 30], "resolv": [27, 30, 31], "resourc": 26, "resources_util": 27, "resources_utilization_info": 8, "resourcesutilizationinfo": 12, "respect": 26, "respons": 0, "rest": 16, "restart": 25, "restor": 1, "result": [1, 2, 4, 7, 13, 16, 19, 24, 26, 27, 29, 30], "result2": 16, "results_path": 11, "resum": 17, "return": [1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 18], "reus": [4, 10, 16], "rgb": [18, 26, 27], "ricardo": 26, "richard": 20, "ride": 20, "right": [20, 30], "rishi": 26, "rmtree": 0, "robust": [13, 26], "rodrigo": 20, "root": [0, 29], "rosenbaum": [20, 26], "rot": 13, "rotat": [13, 30], "rotation_lr": 27, "rotation_matrix_to_quaternion": 13, "round": 17, "row": [13, 18], "ruilong": [20, 26], "run": [0, 1, 13, 14, 16, 17, 21, 22, 24, 26, 27, 28, 29, 30, 31], "run_inside_eval_contain": 7, "run_lpips_vgg": 7, "run_on_host": 4, "runner": 17, "runtim": 25, "rwn17": 26, "ryu": 26, "sacr": 20, "safe": 16, "safer": 29, "sairisheek": 26, "salahi": [20, 26], "sam": [20, 23, 26], "same": [1, 16, 18, 19, 23, 24, 25, 29, 30], "sampl": [1, 26], "sampling_masks_path": 6, "sara": 26, "sarafridov": 26, "saswat": 26, "satisfi": [1, 30], "sattler": [24, 26], "save": [1, 3, 12, 16, 17, 27, 28, 30, 31], "save_cameras_npz": 8, "save_depth": 8, "save_evaluation_result": 8, "save_imag": 8, "save_it": [12, 17, 27], "save_mask": 8, "save_output_artifact": 8, "save_predict": 8, "save_trajectori": 8, "scaffold": [17, 23], "scalar": 13, "scale": [13, 20], "scale_coord": 27, "scaling_lr": 27, "scanner": 20, "scarc": 26, "scatter": [20, 26], "scene": [0, 3, 6, 11, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30], "sceneinfo": 11, "schi": 26, "schoenberger2016mv": 26, "sch\u0151nberger": 26, "scienc": 24, "scoop": 17, "scratch": 27, "script": [19, 28], "sea": [20, 26], "seamless": 26, "seathru": 17, "second": [10, 11, 23, 30], "section": [24, 27, 28, 30], "sed": 25, "see": [0, 1, 13, 16, 17, 18, 23, 24, 25, 28, 30, 31], "seen": 28, "segment": 30, "seiskari": 26, "seitz": 20, "select": [3, 17, 26, 30], "selector": 24, "self": [1, 3], "semi": 20, "send": [16, 30], "sensibl": 26, "sensit": 30, "sent": 16, "separ": [16, 17, 21, 23, 26, 30, 31], "separatedli": 26, "sequenc": [3, 4, 9, 10, 13, 20, 30], "serial": 16, "serialize_evaluation_result": 8, "serialize_nb_info": 8, "serv": 30, "server": [0, 17, 21, 30], "set": [0, 3, 7, 10, 12, 13, 16, 17, 19, 20, 25, 26, 28, 29, 30], "set_postfix": 27, "setdiff1d": 18, "setup": [16, 21, 24, 30], "sever": [23, 24, 26], "sgs24": 24, "sh": [19, 25], "sh_degre": 27, "shakiba": 26, "shallow": 26, "shangjin": 26, "shape": [4, 5, 13, 16, 18], "share": [4, 16, 21, 25], "sharma": 26, "sharp": 30, "sheikh": 10, "shell": 4, "shenghua": 26, "shift": 30, "ship": 6, "shm": [16, 27], "shooter": 30, "short": 0, "shorter": 30, "should": [0, 1, 10, 11, 12, 14, 16, 17, 18, 19, 27, 28, 29], "show": [0, 1, 21, 22, 23, 27, 28, 29], "show_in_notebook": [14, 30, 31], "show_progress": 6, "shown": [27, 30], "shutil": 0, "side": [4, 20], "siggraph": 6, "sigma": 10, "sign": 25, "signal": 10, "similar": [1, 5, 10, 19, 25], "simon": [20, 26], "simoncelli": 10, "simpl": [1, 26, 30], "simplebackend": 4, "simpler": 13, "simpli": [1, 21, 29], "simplifi": [18, 27], "simultan": 30, "sinc": 29, "singl": [1, 3, 14, 17, 20, 26, 27, 28, 30], "singular": 16, "size": [3, 4, 10, 13, 16, 18, 21, 27, 29, 30], "skip": [1, 28, 29, 30, 31], "slice": [6, 13], "slider": 30, "slow": 25, "slower": [13, 16, 26], "slowest": 26, "small": [10, 20], "smallciti": 20, "smaller": [21, 26, 29], "smooth": 30, "snave": 20, "snippet": 27, "so": [0, 1, 16, 19, 24, 30, 31], "socket": 16, "solut": 13, "some": [0, 13, 16, 17, 21, 22, 25, 27, 28, 30], "someth": [13, 23], "sometim": 16, "somewher": 23, "songyou": 26, "sort": [0, 3], "sourc": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 25, 26], "space": [10, 13, 20, 26], "spars": [0, 26, 29], "sparseg": 17, "spawn": [30, 31], "spec": [0, 3, 4, 11, 12, 17, 18], "special": [12, 17, 21], "specif": [0, 3, 16, 17, 22, 26, 27, 28], "specifi": [0, 1, 13, 17, 18, 19, 21, 22, 23, 27, 28, 29, 30], "speed": [4, 26, 27, 30, 31], "sphere": 20, "spiral": 26, "splat": [17, 21, 22, 23, 27, 28], "splate": 26, "spline": 30, "split": [6, 12, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31], "sport": 24, "squar": 10, "src": 24, "srgb": [13, 27], "srinivasan": [0, 20, 26], "ssh": 30, "ssim": [0, 10, 23], "stabl": 25, "stack": [13, 18, 27, 30, 31], "standalon": 21, "standard": [10, 28], "start": [1, 3, 14, 16, 17, 19, 21, 25, 27, 28], "start_dev_serv": 15, "stat": 1, "state_dict": 1, "static": [13, 17, 19, 26, 30], "static_cal": 4, "statu": 30, "steinberg": 26, "step": [1, 3, 9, 12, 13, 14, 17, 26, 27, 29], "stereo": 26, "steven": 20, "still": [17, 26, 30], "stop": [13, 30, 31], "storag": 20, "store": [17, 19, 21, 22], "str": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 30, 31], "strategi": 26, "string": [16, 30], "strong": [23, 26], "strongli": [1, 25], "structur": [0, 10, 18, 19, 23, 26], "student": 17, "studio": [20, 23, 26], "style": [24, 30], "su": 26, "subdirectori": [9, 19], "subhajyoti": 26, "subsample_metr": 9, "subsequ": [4, 16], "subset": [6, 13, 20], "successfulli": 1, "sudo": 25, "suffici": 16, "sum": 12, "summari": 9, "sun": 26, "super": [1, 23, 26], "suppli": 17, "support": [1, 3, 13, 16, 17, 21, 24, 25, 26, 27, 28, 29], "supported_camera_model": [1, 3, 6, 7, 27], "supported_output": [1, 3, 17, 27], "surfac": 26, "surfsplat": [23, 26], "svg": 24, "switch": 24, "sxm4": 27, "synthesi": [20, 24, 26], "synthet": 20, "system": [16, 18, 25, 29], "systemctl": 25, "szeliski": 20, "t": [0, 1, 3, 20, 21, 23, 25, 26, 28], "t2": 20, "tab": [30, 31], "tabl": [11, 24], "tabular": 23, "tag": [3, 9], "tagliasacchi": 26, "tailor": 26, "take": [0, 12, 16, 18, 19, 20, 22, 23, 27, 30, 31], "taken": 17, "tali": [20, 26], "tame": 17, "tancik": [20, 26], "tank": 28, "tanksandtempl": 20, "tao": 26, "tar": [17, 28], "target": [10, 30], "task": 14, "tau": 26, "tcp": 16, "tdataset": 6, "technic": 24, "techniqu": 26, "tee": 25, "tempfil": 0, "templ": 28, "temporari": [0, 27], "temporarili": 0, "temporarydirectori": 0, "tension": 30, "tensor": [1, 5, 8, 10, 13, 16, 26], "tensorboard": [8, 9, 17, 19, 27, 28], "tensorboard_path": 8, "tensorboardlogg": 9, "tensorboardloggerev": 9, "tensorf": 17, "tensori": 26, "term": [13, 30], "termin": 28, "terranc": [20, 26], "test": [0, 6, 18, 20, 26, 27, 28, 29, 30, 31], "test_dataset": [12, 14, 27, 30, 31], "test_indic": [6, 18], "test_list": 29, "tester": 26, "tetra": 17, "tetrahedr": 26, "tetrahedra": 26, "text": [3, 9, 23], "textbf": 23, "tf": 10, "th": [0, 20, 21], "than": 13, "thank": 24, "thecvf": [20, 26], "thei": [16, 20, 24, 25, 30, 31], "them": [13, 16, 19, 23, 24, 26, 30, 31], "therefor": [0, 1, 24, 29, 30], "thi": [0, 1, 3, 4, 5, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "third": 23, "thoma": 26, "though": 13, "thread": [4, 13], "three": [1, 16, 20], "through": [18, 19, 24, 27], "throughout": 13, "thru": [20, 26], "tight": 30, "time": [16, 17, 20, 23, 26, 30, 31], "titl": [0, 3, 9, 24], "tmp": [0, 27], "tmpc47_m09g": 27, "token": [13, 21], "tool": 25, "toolkit": 25, "top": 24, "torch": [1, 16], "torchmetr": 10, "torchmetrics_ssim": 10, "torchvis": 1, "torr": 26, "torsten": [24, 26], "total": [13, 27, 30], "total_train_tim": [8, 27], "touch": 30, "tourism": [17, 28], "tourist": 20, "toward": [23, 26], "tqdm": 27, "train": [0, 1, 2, 3, 6, 13, 14, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31], "train_dataset": [1, 3, 12, 14, 27, 30, 31], "train_dataset_metadata": 8, "train_embed": 17, "train_iter": [1, 3, 12, 27], "train_list": 29, "trainer": [3, 12], "trajectori": [0, 3, 7, 8, 16, 20], "trajectory_get_camera": 7, "trajectory_get_embed": 7, "trajectoryfram": 3, "trajectoryframeappear": 3, "transact": 10, "transfer": [4, 16], "transform": [10, 13, 27], "transient": 26, "transit": 30, "translat": 30, "transmit": 27, "treat": 30, "tree": 26, "treibitz": [20, 26], "trevi": 20, "tri": [1, 16], "true": [0, 1, 4, 6, 7, 8, 10, 14, 27], "truth": [10, 17, 20], "try": [16, 18, 23, 28], "tseng": 26, "ttensor": [3, 5, 13], "ttensor_co": 3, "tune": 26, "tunnel": 30, "tupl": [3, 4, 5, 6, 7, 10, 12, 13, 15, 27], "turkulainen": 26, "turn": 26, "tutori": [0, 1, 19, 21, 22, 23, 24, 29, 30, 31], "two": [1, 13, 16, 20, 30], "txt": 29, "type": [3, 4, 11, 12, 13, 14, 16, 17, 18, 23, 27, 29, 30], "typeddict": [3, 4, 11, 12], "ubc": [23, 26], "ubuntu": 25, "uint8": [13, 18, 27], "unam": 25, "unbound": [0, 20, 26], "uncertainti": 26, "unconstrain": 26, "under": [18, 20, 26], "underlin": 23, "understand": 20, "underwat": [20, 26], "undistort": [5, 20], "undistort_camera": 5, "unifi": [16, 24], "uniform": 10, "uniqu": 0, "unit": [13, 16], "univers": 24, "unix": 16, "unknown": [4, 18, 26], "unless": 17, "unlik": 21, "unload": 6, "unloadeddataset": [3, 6, 18], "unnorm": 26, "unoffici": 26, "unpad_pos": 13, "unprivileg": 25, "unproject": 5, "unseen": 26, "unstructur": 26, "unsupport": 27, "unsur": 16, "until": [14, 30], "up": [19, 23, 27, 30, 31], "upadhyai": 26, "updat": [1, 12, 13, 14, 17, 25, 26, 27, 30], "upload": [0, 8, 17, 28], "upon": 30, "url": [0, 1, 3, 8, 19, 27, 28, 30], "us": [0, 1, 4, 5, 6, 7, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31], "usag": 23, "user": [0, 1, 12, 14, 16, 25, 29, 30], "usermod": 25, "userwarn": 27, "usp": 6, "usr": 25, "usual": [13, 17, 20, 27], "utf": 24, "util": [1, 2, 3, 12, 27], "v": [13, 17, 23], "v2": 26, "valid": [4, 8, 12], "valu": [3, 9, 10, 16, 17, 18, 26, 30], "value1": 30, "value2": 30, "vari": [20, 25], "variabl": [0, 1, 13, 16, 17, 25], "variat": 20, "variou": [1, 18, 20, 25, 29], "vector": [13, 30], "veloc": 30, "venv": 25, "verbin": [0, 20, 26], "verbos": [17, 23], "veri": [20, 26], "verif": 1, "verifi": 1, "version": [13, 16, 17, 19, 24], "vgg": 23, "via": 17, "vicent": 26, "vicki": 26, "video": [17, 20, 26, 28], "videoencod": 30, "view": [0, 4, 17, 20, 21, 24, 26, 28], "view_gaussian_splatting_cvpr_2025_pap": 26, "viewer": [2, 16, 21, 24, 31], "viewer_default_resolut": 3, "viewer_initial_pos": 27, "viewer_transform": 27, "viewpoint": [26, 27], "viridi": 13, "virtual": 25, "visibl": [10, 30, 31], "vision": [23, 26], "visit": [6, 24], "visual": [27, 28, 30, 31], "visualize_depth": 13, "vladlen": 20, "vol": [10, 13], "w": [0, 1, 5, 8, 10, 18, 20, 27, 30], "wa": [0, 4, 10, 17, 20, 24, 26, 30], "wai": [1, 23, 24, 26], "wait": [30, 31], "walk": 18, "walkthrough": 28, "wandb": [17, 28], "wandblogg": 9, "wandbloggerev": 9, "wang": [10, 20, 26], "want": [0, 18, 19, 23, 25, 28, 29, 30, 31], "warburg": 26, "warn": [16, 27], "warp": 5, "warp_image_between_camera": 5, "washington": 20, "wb": 0, "we": [0, 1, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "wear": 20, "web": [2, 20, 22, 24, 26, 28, 30], "weber": [20, 26], "webm": 30, "webpag": [0, 23, 30], "websit": [11, 17, 21, 23, 24, 25, 28], "websocket": 30, "weicai": 26, "weight": [17, 28, 30], "weijian": 26, "wein": 26, "weird": 13, "weitao": 26, "weiwei": 26, "well": [0, 1, 26], "were": [0, 12, 20, 29], "wget": 8, "wheel": 30, "when": [0, 4, 10, 12, 13, 14, 16, 17, 26, 28, 29, 30, 31], "where": [0, 7, 13, 16, 17, 19, 20, 21, 22, 26, 29, 30], "whether": [13, 17], "which": [0, 1, 3, 12, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "while": [1, 17, 20, 26, 29], "white": 20, "white_background": 27, "whl": 1, "whole": 0, "wide": 26, "width": [14, 18, 30], "widthxheight": 17, "wild": [17, 20, 26], "wimmer": [20, 26], "window": [10, 25, 30], "with_supported_camera_model": 7, "with_tot": 13, "within": [14, 16, 26, 27], "without": [1, 11, 16, 18, 26, 30, 31], "wonjun": 26, "work": [1, 3, 19, 24, 28], "worker": [4, 27], "world": [3, 5, 18, 26, 27], "worst": 30, "would": [13, 18, 24, 29], "wrap": 24, "write": [0, 14, 17, 27], "write_dataset_pointcloud": 14, "written": 7, "wsl2": 25, "www": [20, 26], "x": [5, 30], "xiangli": 26, "xie": 26, "xiong": 26, "xml": 24, "xu": 26, "xy": 5, "xyz": 5, "y": [5, 25], "yang": 26, "ye": 26, "year": [20, 24], "yellow": 23, "yet": [23, 25, 26, 30, 31], "yi": [20, 26], "yield": [1, 3], "yifan": 26, "you": [0, 1, 6, 13, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "your": [0, 1, 16, 18, 19, 21, 23, 24, 25, 27, 28, 29], "youth": 24, "yu": 26, "yuanbo": 26, "yue": 26, "z": [10, 30], "zehao": 26, "zero": [4, 13, 18, 27], "zero_copi": [4, 16], "zero_grad": 1, "zexiang": 26, "zhai": 26, "zhang": 26, "zhangkai": 26, "zheng": 26, "zhou": 20, "zhu": 26, "zhuoyang": 26, "zihan": 26, "zip": [0, 3, 17, 19, 23, 27, 28, 30, 31], "zip_ref": 0, "zipfil": 0, "zipnerf": [17, 20, 23, 26], "zju3dv": 26, "zoom": 30, "zshrc": 25, "\u00b9": 13, "\u211b": 13}, "titles": ["Adding new datasets", "Adding new methods", "API Reference", "nerfbaselines", "nerfbaselines.backends", "nerfbaselines.cameras", "nerfbaselines.datasets", "nerfbaselines.evaluation", "nerfbaselines.io", "nerfbaselines.logging", "nerfbaselines.metrics", "nerfbaselines.results", "nerfbaselines.training", "nerfbaselines.utils", "nerfbaselines.viewer", "nerfbaselines.web", "Isolated backends", "nerfbaselines", "Custom dataset loader", "Custom web benchmark", "Datasets", "Creating web demos", "Exporting meshes", "Exporting results tables", "NerfBaselines documentation", "Installation", "Methods", "Python tutorial", "Quickstart", "Using custom data", "Viewer", "&lt;no title&gt;"], "titleterms": {"2d": 26, "360": [20, 26], "3dg": [20, 26], "On": 26, "acknowledg": 24, "ad": [0, 1], "advanc": 24, "api": 2, "apper": 21, "appli": 21, "apptain": 25, "artifact": 17, "avoid": 16, "backend": [4, 16], "benchmark": [19, 28], "blender": [6, 20], "build": [17, 19], "bundler": 6, "caller": 16, "camera": [5, 28, 29, 30], "camp": 26, "checkpoint": 17, "citat": 24, "class": 27, "colab": 30, "colmap": [6, 26], "commun": 16, "conda": 25, "connect": 30, "content": 24, "control": 30, "copi": 16, "creat": [0, 1, 18, 21, 30], "custom": [18, 19, 29], "data": [19, 29], "dataset": [0, 6, 17, 18, 20, 29, 30], "demo": [17, 21], "detail": 30, "dev": [17, 19], "docker": 25, "document": 24, "download": [0, 17], "dropgaussian": 26, "embed": 21, "evalu": [7, 17], "export": [17, 21, 22, 23, 30], "featur": 24, "field": 26, "file": 1, "fix": 17, "fp": 17, "function": [0, 18], "g": 26, "gaussian": 26, "gener": [17, 23], "get": 30, "go": 26, "googl": 30, "gpu": 25, "gsplat": 26, "h3dg": 26, "hierarch": 20, "hierarchical_3dg": 6, "imag": [27, 28, 30], "implement": 30, "individu": 30, "instal": [17, 25], "instanc": 18, "instant": 26, "introduct": [1, 16, 29], "io": 8, "isol": 16, "jupyt": 30, "k": 26, "latex": 23, "launch": 28, "llff": [6, 20], "load": 30, "loader": 18, "local": 19, "log": 9, "main": 24, "markdown": 23, "mcmc": 26, "measur": 17, "mesh": [17, 22], "metadata": 0, "method": [1, 17, 26, 27], "metric": 10, "mip": [20, 26], "mipnerf360": 6, "mipnerf360_spars": 6, "model": 28, "modul": 1, "nerf": [20, 26], "nerfbaselin": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 24], "nerfonthego": 6, "nerfstudio": [6, 20, 26], "new": [0, 1, 18], "ngp": 26, "notebook": 30, "nvidia": 25, "obtain": 29, "octre": 26, "opac": 26, "output": 17, "pgsr": 26, "photo": 20, "phototour": 6, "plane": 26, "pose": 29, "pre": 25, "prepar": 19, "prerequisit": 19, "public": 28, "publish": 0, "python": 27, "quickstart": 28, "refer": [2, 24], "regist": [0, 1, 18], "reimplement": 26, "releas": 1, "remot": 30, "render": [17, 27, 28, 30], "requisit": 25, "result": [11, 17, 23, 28], "run": 19, "scaffold": 26, "scoop": 26, "seathru": [20, 26], "seathru_nerf": 6, "server": 19, "shell": 17, "site": 16, "spars": 20, "sparseg": 26, "spec": 1, "splat": 26, "start": 30, "student": 26, "tabl": 23, "tame": 26, "tank": 20, "tanksandtempl": 6, "templ": 20, "tensorf": 26, "test": [1, 17], "tetra": 26, "tourism": 20, "train": [12, 17, 27, 28], "trainer": 27, "trajectori": [17, 28, 30], "tutori": 27, "us": [27, 29, 30], "util": 13, "video": 30, "view": 30, "viewer": [14, 17, 28, 30], "w": 26, "web": [15, 17, 19, 21], "wildgaussian": 26, "worker": 16, "write": 18, "zero": 16, "zip": [20, 26], "zipnerf": 6}})
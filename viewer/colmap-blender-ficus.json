{
  "state": {
    "render_resolution": 512,
    "prerender_enabled": false,
    "method_info": {
      "method_id": "colmap",
      "hparams": {
        "mesher": "poisson",
        "PatchMatchStereo.geom_consistency": "true",
        "background_color": [
          1.0,
          1.0,
          1.0
        ],
        "PoissonMeshing.trim": 5
      },
      "supported_camera_models": [
        "full_opencv",
        "opencv",
        "opencv_fisheye",
        "pinhole"
      ],
      "supported_outputs": [
        "color",
        "depth"
      ],
      "name": "COLMAP",
      "description": "COLMAP Multi-View Stereo (MVS) is a general-purpose, end-to-end image-based 3D reconstruction pipeline.\nIt uses the point cloud if available, otherwise it runs a sparse reconstruction to obtained.\nThe reconstruction consists of a stereo matching step, followed by a multi-view stereo step to obtain a dense point cloud.\nFinally, either Delaunay or Poisson meshing is used to obtain a mesh from the point cloud.\n",
      "paper_title": "Pixelwise View Selection for Unstructured Multi-View Stereo",
      "paper_authors": [
        "Johannes Lutz Sch\u0151nberger",
        "Enliang Zheng",
        "Marc Pollefeys",
        "Jan-Michael Frahm"
      ],
      "paper_link": "https://demuc.de/papers/schoenberger2016mvs.pdf",
      "link": "https://colmap.github.io/",
      "licenses": [
        {
          "name": "BSD",
          "url": "https://colmap.github.io/license.html"
        }
      ],
      "nb_version": "1.0.3.dev2+g00cf083.d20240819",
      "num_iterations": 1,
      "total_train_time": 2362.73091,
      "resources_utilization": {
        "memory": 672,
        "gpu_name": "",
        "gpu_memory": 0
      },
      "datetime": "2024-09-02T06:42:17",
      "config_overrides": {
        "background_color": [
          1.0,
          1.0,
          1.0
        ],
        "PoissonMeshing.trim": 5
      },
      "applied_presets": [
        "blender"
      ],
      "evaluation_protocol": "nerf",
      "checkpoint_sha256": "77a6e53bf5375768f41d140da181d11b540e058c10c8a42b8c7d9e870cc0dd1b"
    },
    "dataset_info": {
      "color_space": "srgb",
      "expected_scene_scale": 4,
      "background_color": [
        255,
        255,
        255
      ],
      "id": "blender",
      "scene": "ficus",
      "evaluation_protocol": "nerf",
      "type": "object-centric",
      "name": "Blender",
      "description": "Blender (nerf-synthetic) is a synthetic dataset used to benchmark NeRF methods. It consists of 8 scenes of an object placed on a white background. Cameras are placed on a semi-sphere around the object. Scenes are licensed under various CC licenses.",
      "paper_title": "NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis",
      "paper_authors": [
        "Ben Mildenhall",
        "Pratul P. Srinivasan",
        "Matthew Tancik",
        "Jonathan T. Barron",
        "Ravi Ramamoorthi",
        "Ren Ng"
      ],
      "paper_link": "https://arxiv.org/pdf/2003.08934.pdf",
      "link": "https://www.matthewtancik.com/nerf",
      "metrics": [
        {
          "id": "psnr",
          "name": "PSNR",
          "description": "Peak Signal to Noise Ratio. The higher the better.",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio"
        },
        {
          "id": "ssim",
          "name": "SSIM",
          "description": "Structural Similarity Index. The higher the better. The implementation matches JAX's SSIM and torchmetrics's SSIM (with default parameters).",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Structural_similarity"
        },
        {
          "id": "lpips_vgg",
          "name": "LPIPS (VGG)",
          "description": "Learned Perceptual Image Patch Similarity. The lower the better. The implementation uses VGG backbone and matches lpips pip package with checkpoint version 0.1",
          "ascending": false,
          "link": "https://richzhang.github.io/PerceptualSimilarity/"
        }
      ],
      "default_metric": "psnr",
      "scenes": [
        {
          "id": "lego",
          "name": "lego"
        },
        {
          "id": "drums",
          "name": "drums"
        },
        {
          "id": "ficus",
          "name": "ficus"
        },
        {
          "id": "hotdog",
          "name": "hotdog"
        },
        {
          "id": "materials",
          "name": "materials"
        },
        {
          "id": "mic",
          "name": "mic"
        },
        {
          "id": "ship",
          "name": "ship"
        },
        {
          "id": "chair",
          "name": "chair"
        }
      ]
    }
  },
  "method_id": "colmap",
  "renderer": {
    "mesh_url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-supplementary/resolve/main/colmap/blender/ficus_demo/mesh.ply",
    "type": "mesh",
    "background_color": [
      1.0,
      1.0,
      1.0
    ],
    "scene_url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-supplementary/resolve/main/colmap/blender/ficus_demo/params.json"
  },
  "dataset": {
    "url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-data/resolve/main/blender/ficus-nbv.json"
  },
  "viewer_transform": [
    0.10570634467365882,
    0.21157950192291167,
    0.033191969261253916,
    -1.3488937293526515e-09,
    -0.214074316524209,
    0.10329371209991774,
    0.02332433029228749,
    2.5759038201067508e-09,
    0.006307443923222551,
    -0.040074272765980606,
    0.23536290667265533,
    -6.339104519081928e-10
  ],
  "viewer_initial_pose": [
    -0.3157464490915144,
    0.02108678764338834,
    -0.9486093557923968,
    0.9132911086410405,
    0.9475582346921654,
    -0.045016054138008195,
    -0.3163972274024418,
    0.304617252684424,
    -0.04937445608272167,
    -0.998763675468622,
    -0.0057673079804210735,
    0.005552581358987063
  ]
}
{
  "state": {
    "dataset_info": {
      "color_space": "srgb",
      "expected_scene_scale": 4,
      "background_color": [
        255,
        255,
        255
      ],
      "id": "blender",
      "scene": "chair",
      "evaluation_protocol": "nerf",
      "type": "object-centric",
      "name": "Blender",
      "description": "Blender (nerf-synthetic) is a synthetic dataset used to benchmark NeRF methods. It consists of 8 scenes of an object placed on a white background. Cameras are placed on a semi-sphere around the object. Scenes are licensed under various CC licenses.",
      "paper_title": "NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis",
      "paper_authors": [
        "Ben Mildenhall",
        "Pratul P. Srinivasan",
        "Matthew Tancik",
        "Jonathan T. Barron",
        "Ravi Ramamoorthi",
        "Ren Ng"
      ],
      "paper_link": "https://arxiv.org/pdf/2003.08934.pdf",
      "link": "https://www.matthewtancik.com/nerf",
      "metrics": [
        {
          "id": "psnr",
          "name": "PSNR",
          "description": "Peak Signal to Noise Ratio. The higher the better.",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio"
        },
        {
          "id": "ssim",
          "name": "SSIM",
          "description": "Structural Similarity Index. The higher the better. The implementation matches JAX's SSIM and torchmetrics's SSIM (with default parameters).",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Structural_similarity"
        },
        {
          "id": "lpips_vgg",
          "name": "LPIPS (VGG)",
          "description": "Learned Perceptual Image Patch Similarity. The lower the better. The implementation uses VGG backbone and matches lpips pip package with checkpoint version 0.1",
          "ascending": false,
          "link": "https://richzhang.github.io/PerceptualSimilarity/"
        }
      ],
      "default_metric": "psnr",
      "scenes": [
        {
          "id": "lego",
          "name": "lego"
        },
        {
          "id": "drums",
          "name": "drums"
        },
        {
          "id": "ficus",
          "name": "ficus"
        },
        {
          "id": "hotdog",
          "name": "hotdog"
        },
        {
          "id": "materials",
          "name": "materials"
        },
        {
          "id": "mic",
          "name": "mic"
        },
        {
          "id": "ship",
          "name": "ship"
        },
        {
          "id": "chair",
          "name": "chair"
        }
      ],
      "depth_range": [
        2,
        6
      ]
    },
    "render_resolution": 768,
    "prerender_enabled": false,
    "method_info": {
      "method_id": "scaffold-gs",
      "hparams": {
        "sh_degree": 3,
        "feat_dim": 32,
        "n_offsets": 10,
        "voxel_size": 0.001,
        "update_depth": 3,
        "update_init_factor": 4,
        "update_hierachy_factor": 4,
        "use_feat_bank": false,
        "white_background": true,
        "lod": 0,
        "appearance_dim": 0,
        "lowpoly": false,
        "ds": 1,
        "ratio": 1,
        "undistorted": false,
        "add_opacity_dist": false,
        "add_cov_dist": false,
        "add_color_dist": false,
        "scale_coords": null,
        "iterations": 30000,
        "position_lr_init": 0.0,
        "position_lr_final": 0.0,
        "position_lr_delay_mult": 0.01,
        "position_lr_max_steps": 30000,
        "offset_lr_init": 0.01,
        "offset_lr_final": 0.0001,
        "offset_lr_delay_mult": 0.01,
        "offset_lr_max_steps": 30000,
        "feature_lr": 0.0075,
        "opacity_lr": 0.02,
        "scaling_lr": 0.007,
        "rotation_lr": 0.002,
        "mlp_opacity_lr_init": 0.002,
        "mlp_opacity_lr_final": 2e-05,
        "mlp_opacity_lr_delay_mult": 0.01,
        "mlp_opacity_lr_max_steps": 30000,
        "mlp_cov_lr_init": 0.004,
        "mlp_cov_lr_final": 0.004,
        "mlp_cov_lr_delay_mult": 0.01,
        "mlp_cov_lr_max_steps": 30000,
        "mlp_color_lr_init": 0.008,
        "mlp_color_lr_final": 5e-05,
        "mlp_color_lr_delay_mult": 0.01,
        "mlp_color_lr_max_steps": 30000,
        "mlp_featurebank_lr_init": 0.01,
        "mlp_featurebank_lr_final": 1e-05,
        "mlp_featurebank_lr_delay_mult": 0.01,
        "mlp_featurebank_lr_max_steps": 30000,
        "appearance_lr_init": 0.05,
        "appearance_lr_final": 0.0005,
        "appearance_lr_delay_mult": 0.01,
        "appearance_lr_max_steps": 30000,
        "percent_dense": 0.01,
        "lambda_dssim": 0.2,
        "start_stat": 500,
        "update_from": 1500,
        "update_interval": 100,
        "update_until": 15000,
        "min_opacity": 0.005,
        "success_threshold": 0.8,
        "densify_grad_threshold": 0.0002,
        "test_optim_lr": 0.1,
        "test_optim_steps": 128,
        "convert_SHs_python": false,
        "compute_cov3D_python": false,
        "debug": false
      },
      "supported_camera_models": [
        "pinhole"
      ],
      "supported_outputs": [
        "color"
      ],
      "name": "Scaffold-GS",
      "description": "Scaffold-GS uses anchor points to distribute local 3D Gaussians, and predicts their attributes on-the-fly based on viewing direction and distance within the view frustum. In NerfBaselines, we fixed bug with cx,cy, added appearance embedding optimization, and added support for masks. Note, that we also implement a demo for the method, but it does not evaluate the MLP and the Gaussians are \"baked\" for specific viewing direction and appearance embedding (if enabled).",
      "paper_title": "Scaffold-GS: Structured 3D Gaussians for View-Adaptive Rendering",
      "paper_authors": [
        "Tao Lu",
        "Mulin Yu",
        "Linning Xu",
        "Yuanbo Xiangli",
        "Limin Wang",
        "Dahua LinBo Dai"
      ],
      "paper_link": "https://arxiv.org/pdf/2312.00109.pdf",
      "link": "https://city-super.github.io/scaffold-gs/",
      "licenses": [
        {
          "name": "custom, research only",
          "url": "https://raw.githubusercontent.com/city-super/Scaffold-GS/main/LICENSE.md"
        }
      ],
      "nb_version": "1.1.1.dev6+g5df36ec.d20240910",
      "num_iterations": 30000,
      "total_train_time": 397.98324,
      "resources_utilization": {
        "memory": 3463,
        "gpu_name": "NVIDIA A100-SXM4-40GB",
        "gpu_memory": 3800
      },
      "datetime": "2024-09-12T18:29:38",
      "config_overrides": {
        "white_background": true,
        "voxel_size": 0.001,
        "update_init_factor": 4,
        "appearance_dim": 0,
        "ratio": 1
      },
      "applied_presets": [
        "blender"
      ],
      "dataset_metadata": {
        "color_space": "srgb",
        "expected_scene_scale": 4,
        "background_color": [
          255,
          255,
          255
        ],
        "id": "blender",
        "scene": "chair",
        "evaluation_protocol": "nerf",
        "type": "object-centric",
        "viewer_transform": [
          [
            0.067291,
            0.228436,
            -0.0098,
            -0.0
          ],
          [
            -0.2282,
            0.066459,
            -0.017758,
            0.0
          ],
          [
            -0.014287,
            0.014397,
            0.237478,
            0.0
          ]
        ],
        "viewer_initial_pose": [
          [
            -0.625298,
            0.592226,
            -0.508203,
            0.488276
          ],
          [
            0.779709,
            0.50124,
            -0.37525,
            0.360536
          ],
          [
            0.032499,
            -0.630894,
            -0.775188,
            0.744793
          ]
        ]
      },
      "evaluation_protocol": "nerf",
      "checkpoint_sha256": "78765fbf9f41b5611902b13acfa96df55517a05a86ba868f479444ce5cd5fd0a"
    },
    "outputs_configuration": {
      "color": {},
      "depth": {
        "range_min": 2,
        "range_max": 6
      }
    }
  },
  "viewer_transform": [
    0.06729051266205702,
    0.2284362799775618,
    -0.009800228352113157,
    -1.284128359202441e-11,
    -0.22819961680025289,
    0.0664589667055764,
    -0.017757670755195517,
    6.212944828748457e-10,
    -0.0142869269120751,
    0.014396633485331047,
    0.23747802372969848,
    1.9625454594773828e-09
  ],
  "viewer_initial_pose": [
    -0.6252981757556277,
    0.5922260394735976,
    -0.5082032232719366,
    0.4882764207821837,
    0.7797090515527263,
    0.5012397521293721,
    -0.37525007060729365,
    0.3605364177688986,
    0.03249880275628688,
    -0.6308937398326305,
    -0.7751882305044718,
    0.7447928868878542
  ],
  "method_id": "scaffold-gs",
  "renderer": {
    "background_color": [
      1.0,
      1.0,
      1.0
    ],
    "scene_url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-supplementary/resolve/main/scaffold-gs/blender/chair_demo/scene.ksplat",
    "type": "3dgs"
  },
  "dataset": {
    "url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-data/resolve/main/blender/chair-nbv.json"
  }
}
{
  "state": {
    "dataset_info": {
      "id": "mipnerf360",
      "color_space": "srgb",
      "evaluation_protocol": "nerf",
      "scene": "flowers",
      "downscale_factor": 4,
      "type": "object-centric",
      "expected_scene_scale": 4.112393856048584,
      "name": "Mip-NeRF 360",
      "description": "Mip-NeRF 360 is a collection of four indoor and five outdoor object-centric scenes. The camera trajectory is an orbit around the object with fixed elevation and radius. The test set takes each n-th frame of the trajectory as test views.",
      "paper_title": "Mip-NeRF 360: Unbounded Anti-Aliased Neural Radiance Fields",
      "paper_authors": [
        "Jonathan T. Barron",
        "Ben Mildenhall",
        "Dor Verbin",
        "Pratul P. Srinivasan",
        "Peter Hedman"
      ],
      "paper_link": "https://arxiv.org/pdf/2111.12077.pdf",
      "link": "https://jonbarron.info/mipnerf360/",
      "metrics": [
        {
          "id": "psnr",
          "name": "PSNR",
          "description": "Peak Signal to Noise Ratio. The higher the better.",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio"
        },
        {
          "id": "ssim",
          "name": "SSIM",
          "description": "Structural Similarity Index. The higher the better. The implementation matches JAX's SSIM and torchmetrics's SSIM (with default parameters).",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Structural_similarity"
        },
        {
          "id": "lpips_vgg",
          "name": "LPIPS (VGG)",
          "description": "Learned Perceptual Image Patch Similarity. The lower the better. The implementation uses VGG backbone and matches lpips pip package with checkpoint version 0.1",
          "ascending": false,
          "link": "https://richzhang.github.io/PerceptualSimilarity/"
        }
      ],
      "default_metric": "psnr",
      "scenes": [
        {
          "id": "garden",
          "name": "garden"
        },
        {
          "id": "bicycle",
          "name": "bicycle"
        },
        {
          "id": "flowers",
          "name": "flowers"
        },
        {
          "id": "treehill",
          "name": "treehill"
        },
        {
          "id": "stump",
          "name": "stump"
        },
        {
          "id": "kitchen",
          "name": "kitchen"
        },
        {
          "id": "bonsai",
          "name": "bonsai"
        },
        {
          "id": "counter",
          "name": "counter"
        },
        {
          "id": "room",
          "name": "room"
        }
      ]
    },
    "render_resolution": 768,
    "prerender_enabled": false,
    "method_info": {
      "method_id": "2d-gaussian-splatting",
      "hparams": {
        "sh_degree": 3,
        "white_background": false,
        "render_items": [
          "RGB",
          "Alpha",
          "Normal",
          "Depth",
          "Edge",
          "Curvature"
        ],
        "scale_coords": null,
        "iterations": 30000,
        "position_lr_init": 0.00016,
        "position_lr_final": 1.6e-06,
        "position_lr_delay_mult": 0.01,
        "position_lr_max_steps": 30000,
        "feature_lr": 0.0025,
        "opacity_lr": 0.05,
        "scaling_lr": 0.005,
        "rotation_lr": 0.001,
        "percent_dense": 0.01,
        "lambda_dssim": 0.2,
        "lambda_dist": 0.0,
        "lambda_normal": 0.05,
        "opacity_cull": 0.05,
        "densification_interval": 100,
        "opacity_reset_interval": 3000,
        "densify_from_iter": 500,
        "densify_until_iter": 15000,
        "densify_grad_threshold": 0.0002,
        "convert_SHs_python": false,
        "compute_cov3D_python": false,
        "depth_ratio": 0.0,
        "debug": false
      },
      "supported_camera_models": [
        "pinhole"
      ],
      "supported_outputs": [
        "accumulation",
        "color",
        "depth",
        "normal"
      ],
      "name": "2D Gaussian Splatting",
      "description": "2DGS adopts 2D oriented disks as surface elements and allows high-quality rendering with Gaussian Splatting. In NerfBaselines, we fixed bug with cx,cy, added appearance embedding optimization, and added support for sampling masks.",
      "paper_title": "2D Gaussian Splatting for Geometrically Accurate Radiance Fields",
      "paper_authors": [
        "Binbin Huang",
        "Zehao Yu",
        "Anpei Chen",
        "Andreas Geiger",
        "Shenghua Gao"
      ],
      "paper_link": "https://arxiv.org/pdf/2403.17888.pdf",
      "link": "https://surfsplatting.github.io/",
      "licenses": [
        {
          "name": "custom, research only",
          "url": "https://raw.githubusercontent.com/hbb1/2d-gaussian-splatting/main/LICENSE.md"
        }
      ],
      "num_iterations": 30000,
      "total_train_time": 1590.09379,
      "resources_utilization": {
        "memory": 4431,
        "gpu_name": "NVIDIA A100-SXM4-40GB",
        "gpu_memory": 7820
      },
      "datetime": "2024-09-13T17:13:58",
      "config_overrides": {},
      "applied_presets": [],
      "dataset_metadata": {
        "id": "mipnerf360",
        "color_space": "srgb",
        "evaluation_protocol": "nerf",
        "scene": "flowers",
        "downscale_factor": 4,
        "type": "object-centric",
        "viewer_transform": [
          [
            -0.093897,
            0.066577,
            0.209186,
            0.022352
          ],
          [
            -0.219501,
            -0.025113,
            -0.090534,
            0.004029
          ],
          [
            -0.003243,
            -0.227914,
            0.071081,
            0.00472
          ]
        ],
        "viewer_initial_pose": [
          [
            0.346118,
            -0.184127,
            -0.919946,
            0.735026
          ],
          [
            0.937835,
            0.094923,
            0.33385,
            -0.28628
          ],
          [
            0.025854,
            -0.978308,
            0.205535,
            -0.144455
          ]
        ],
        "expected_scene_scale": 4.112394
      },
      "evaluation_protocol": "nerf",
      "nb_version": "1.1.1.dev6+g5df36ec.d20240910",
      "checkpoint_sha256": "2f259f46577614e7719f7695990cb4e7912d209d59b7d3cb3b75f5937906036d"
    }
  },
  "viewer_transform": [
    -0.09389687364627504,
    0.06657654123187247,
    0.20918600719498764,
    0.022352027848739707,
    -0.21950103467375323,
    -0.02511277296765441,
    -0.0905344508910723,
    0.004028591199384042,
    -0.003242667806980907,
    -0.22791392263038762,
    0.07108144598364233,
    0.004720325289608271
  ],
  "viewer_initial_pose": [
    0.34611777151538925,
    -0.18412683017217948,
    -0.9199455288220475,
    0.7350255409643957,
    0.93783477132463,
    0.09492329998307389,
    0.3338495012633905,
    -0.2862798183218377,
    0.02585361022823343,
    -0.9783081726111476,
    0.20553522180105369,
    -0.1444547963806818
  ],
  "method_id": "2d-gaussian-splatting",
  "renderer": {
    "type": "mesh",
    "mesh_url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-supplementary/resolve/main/2d-gaussian-splatting/mipnerf360/flowers_mesh/mesh.ply"
  },
  "dataset": {
    "url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-data/resolve/main/mipnerf360/flowers-nbv.json"
  }
}
{
  "state": {
    "dataset_info": {
      "name": "Mip-NeRF 360",
      "color_space": "srgb",
      "evaluation_protocol": "nerf",
      "scene": "bicycle",
      "downscale_factor": 4,
      "expected_scene_scale": 4.299345111846924,
      "type": "object-centric",
      "id": "mipnerf360",
      "description": "Mip-NeRF 360 is a collection of four indoor and five outdoor object-centric scenes. The camera trajectory is an orbit around the object with fixed elevation and radius. The test set takes each n-th frame of the trajectory as test views.",
      "paper_title": "Mip-NeRF 360: Unbounded Anti-Aliased Neural Radiance Fields",
      "paper_authors": [
        "Jonathan T. Barron",
        "Ben Mildenhall",
        "Dor Verbin",
        "Pratul P. Srinivasan",
        "Peter Hedman"
      ],
      "paper_link": "https://arxiv.org/pdf/2111.12077.pdf",
      "link": "https://jonbarron.info/mipnerf360/",
      "metrics": [
        {
          "id": "psnr",
          "name": "PSNR",
          "description": "Peak Signal to Noise Ratio. The higher the better.",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio"
        },
        {
          "id": "ssim",
          "name": "SSIM",
          "description": "Structural Similarity Index. The higher the better. The implementation matches JAX's SSIM and torchmetrics's SSIM (with default parameters).",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Structural_similarity"
        },
        {
          "id": "lpips_vgg",
          "name": "LPIPS (VGG)",
          "description": "Learned Perceptual Image Patch Similarity. The lower the better. The implementation uses VGG backbone and matches lpips pip package with checkpoint version 0.1",
          "ascending": false,
          "link": "https://richzhang.github.io/PerceptualSimilarity/"
        }
      ],
      "default_metric": "psnr",
      "scenes": [
        {
          "id": "garden",
          "name": "garden"
        },
        {
          "id": "bicycle",
          "name": "bicycle"
        },
        {
          "id": "flowers",
          "name": "flowers"
        },
        {
          "id": "treehill",
          "name": "treehill"
        },
        {
          "id": "stump",
          "name": "stump"
        },
        {
          "id": "kitchen",
          "name": "kitchen"
        },
        {
          "id": "bonsai",
          "name": "bonsai"
        },
        {
          "id": "counter",
          "name": "counter"
        },
        {
          "id": "room",
          "name": "room"
        }
      ]
    },
    "render_resolution": 768,
    "prerender_enabled": false,
    "method_info": {
      "method_id": "gaussian-splatting",
      "hparams": {
        "sh_degree": 3,
        "white_background": false,
        "scale_coords": null,
        "iterations": 30000,
        "position_lr_init": 0.00016,
        "position_lr_final": 1.6e-06,
        "position_lr_delay_mult": 0.01,
        "position_lr_max_steps": 30000,
        "feature_lr": 0.0025,
        "opacity_lr": 0.05,
        "scaling_lr": 0.005,
        "rotation_lr": 0.001,
        "percent_dense": 0.01,
        "lambda_dssim": 0.2,
        "densification_interval": 100,
        "opacity_reset_interval": 3000,
        "densify_from_iter": 500,
        "densify_until_iter": 15000,
        "densify_grad_threshold": 0.0002,
        "random_background": false,
        "convert_SHs_python": false,
        "compute_cov3D_python": false,
        "debug": false
      },
      "supported_camera_models": [
        "pinhole"
      ],
      "supported_outputs": [
        "color"
      ],
      "name": "Gaussian Splatting",
      "description": "Official Gaussian Splatting implementation extended to support distorted camera models. It is fast to train (1 hous) and render (200 FPS).",
      "paper_title": "3D Gaussian Splatting for Real-Time Radiance Field Rendering",
      "paper_authors": [
        "Bernhard Kerbl",
        "Georgios Kopanas",
        "Thomas Leimk\u00fchler",
        "George Drettakis"
      ],
      "paper_link": "https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/3d_gaussian_splatting_low.pdf",
      "link": "https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/",
      "licenses": [
        {
          "name": "custom, research only",
          "url": "https://raw.githubusercontent.com/graphdeco-inria/gaussian-splatting/main/LICENSE.md"
        }
      ],
      "num_iterations": 30000,
      "total_train_time": 1704.37951,
      "resources_utilization": {
        "memory": 6290,
        "gpu_memory": 15254,
        "gpu_name": "NVIDIA A100-SXM4-40GB"
      },
      "datetime": "2024-06-07T12:06:04+0200",
      "config_overrides": {},
      "dataset_metadata": {
        "name": "mipnerf360",
        "color_space": "srgb",
        "evaluation_protocol": "nerf",
        "viewer_transform": [
          [
            -0.06725999712944031,
            -0.05178999900817871,
            0.21119000017642975,
            -0.01078999973833561
          ],
          [
            -0.21735000610351562,
            0.02274000085890293,
            -0.06364999711513519,
            0.10147000104188919
          ],
          [
            -0.0066200001165270805,
            -0.22046999633312225,
            -0.05617000162601471,
            0.10399000346660614
          ],
          [
            0.0,
            0.0,
            0.0,
            1.0
          ]
        ],
        "viewer_initial_pose": [
          [
            -0.9249299764633179,
            -0.05025999993085861,
            0.3768100142478943,
            -0.35196998715400696
          ],
          [
            -0.37988999485969543,
            0.08568999916315079,
            -0.9210500121116638,
            0.9277799725532532
          ],
          [
            0.014000000432133675,
            -0.9950500130653381,
            -0.09835000336170197,
            -0.059790000319480896
          ]
        ],
        "scene": "bicycle",
        "downscale_factor": 4,
        "expected_scene_scale": 4.29347,
        "type": "object-centric"
      },
      "evaluation_protocol": "nerf",
      "nb_version": "0.0.16.dev56+g8ee0779.d20240531",
      "checkpoint_sha256": "4d49d3bf3b01aed03f510c2ec955a50dc0f9c49fa6a923f95766ab4a45852a50"
    },
    "outputs_configuration": {
      "color": {}
    }
  },
  "viewer_transform": [
    -0.07510161181997686,
    -0.05124910113787547,
    0.21004638620875538,
    -0.007214847434749986,
    -0.216097155624051,
    0.024916024172678155,
    -0.07118579899071437,
    0.10279895471525427,
    -0.006926382391793591,
    -0.22167302185575352,
    -0.05656239001470707,
    0.08412395958609628
  ],
  "viewer_initial_pose": [
    -0.948501422273205,
    0.055668771357239605,
    0.3118429211446094,
    -0.32942103343486717,
    -0.3161624846311845,
    -0.22744801849196566,
    -0.921036737442325,
    0.9613294553766494,
    0.019655069285200204,
    -0.9721977247197472,
    0.23333515593568988,
    -0.14401710018793817
  ],
  "method_id": "gaussian-splatting",
  "renderer": {
    "scene_url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-supplementary/resolve/main/gaussian-splatting/mipnerf360/bicycle_demo/scene.ksplat",
    "type": "3dgs"
  },
  "dataset": {
    "url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-data/resolve/main/mipnerf360/bicycle-nbv.json"
  }
}
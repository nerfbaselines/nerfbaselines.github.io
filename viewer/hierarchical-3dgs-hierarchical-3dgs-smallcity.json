{
  "state": {
    "dataset_info": {
      "id": "hierarchical-3dgs",
      "color_space": "srgb",
      "evaluation_protocol": "nerf",
      "scene": "smallcity",
      "expected_scene_scale": 57.171496963500985,
      "name": "Hierarchical 3DGS",
      "description": "Hierarchical 3DGS is a dataset released with H3DGS paper. We implement the two public single-chunks scenes (SmallCity, Campus) used for evaluation. To collect the dataset, authors used a bicycle helmet on which they mounted 6 GoPro HERO6 Black cameras (5 for the Campus scene). They collected SmallCity and BigCity captures on a bicycle, riding at around 6\u20137km/h, while Campus was captured on foot wearing the helmet. Poses were estimated using COLMAP with custom parameters and hierarchical mapper. Additinal per-chunk bundle adjustment was performed. It is recommended to use exposure modeling with this dataset",
      "paper_title": "A Hierarchical 3D Gaussian Representation for Real-Time Rendering of Very Large Datasets",
      "paper_authors": [
        "Bernhard Kerbl",
        "Andreas Meuleman",
        "Georgios Kopanas",
        "Michael Wimmer",
        "Alexandre Lanvin",
        "George Drettakis"
      ],
      "paper_link": "https://repo-sam.inria.fr/fungraph/hierarchical-3d-gaussians/hierarchical-3d-gaussians_low.pdf",
      "link": "https://repo-sam.inria.fr/fungraph/hierarchical-3d-gaussians/",
      "metrics": [
        {
          "id": "psnr",
          "name": "PSNR",
          "description": "Peak Signal to Noise Ratio. The higher the better.",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio"
        },
        {
          "id": "ssim",
          "name": "SSIM",
          "description": "Structural Similarity Index. The higher the better. The implementation matches JAX's SSIM and torchmetrics's SSIM (with default parameters).",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Structural_similarity"
        },
        {
          "id": "lpips_vgg",
          "name": "LPIPS (VGG)",
          "description": "Learned Perceptual Image Patch Similarity. The lower the better. The implementation uses VGG backbone and matches lpips pip package with checkpoint version 0.1",
          "ascending": false,
          "link": "https://richzhang.github.io/PerceptualSimilarity/"
        }
      ],
      "default_metric": "psnr",
      "scenes": [
        {
          "id": "smallcity",
          "name": "Small City"
        }
      ]
    },
    "method_info": {
      "method_id": "hierarchical-3dgs",
      "hparams": {
        "single.sh_degree": 3,
        "single.exp_name": "",
        "single.alpha_masks": "",
        "single.depths": null,
        "single.white_background": false,
        "single.train_test_exp": false,
        "single.skip_scale_big_gauss": true,
        "single.pretrained": "",
        "single.skybox_num": 0,
        "single.scaffold_file": "",
        "single.bounds_file": "",
        "single.skybox_locked": false,
        "single.iterations": 30000,
        "single.position_lr_init": 2e-05,
        "single.position_lr_final": 2e-07,
        "single.position_lr_delay_mult": 0.01,
        "single.position_lr_max_steps": 30000,
        "single.feature_lr": 0.0025,
        "single.opacity_lr": 0.05,
        "single.scaling_lr": 0.005,
        "single.rotation_lr": 0.001,
        "single.exposure_lr_init": 0.0,
        "single.exposure_lr_final": 0.0,
        "single.exposure_lr_delay_steps": 5000,
        "single.exposure_lr_delay_mult": 0.001,
        "single.percent_dense": 0.0001,
        "single.lambda_dssim": 0.2,
        "single.densification_interval": 300,
        "single.opacity_reset_interval": 3000,
        "single.densify_from_iter": 500,
        "single.densify_until_iter": 15000,
        "single.densify_grad_threshold": 0.015,
        "single.depth_l1_weight_init": 1.0,
        "single.depth_l1_weight_final": 0.01,
        "single.compute_cov3D_python": false,
        "single.disable_viewer": false,
        "single.depth_mode": "dpt",
        "post.sh_degree": 3,
        "post.exp_name": "",
        "post.alpha_masks": "",
        "post.depths": "",
        "post.white_background": false,
        "post.train_test_exp": false,
        "post.skip_scale_big_gauss": false,
        "post.pretrained": "",
        "post.skybox_num": 0,
        "post.scaffold_file": "",
        "post.bounds_file": "",
        "post.skybox_locked": false,
        "post.iterations": 15000,
        "post.position_lr_init": 2e-05,
        "post.position_lr_final": 2e-07,
        "post.position_lr_delay_mult": 0.01,
        "post.position_lr_max_steps": 30000,
        "post.feature_lr": 0.0005,
        "post.opacity_lr": 0.01,
        "post.scaling_lr": 0.001,
        "post.rotation_lr": 0.001,
        "post.exposure_lr_init": 0.0,
        "post.exposure_lr_final": 0.0,
        "post.exposure_lr_delay_steps": 5000,
        "post.exposure_lr_delay_mult": 0.001,
        "post.percent_dense": 0.0001,
        "post.lambda_dssim": 0.2,
        "post.densification_interval": 300,
        "post.opacity_reset_interval": 3000,
        "post.densify_from_iter": 500,
        "post.densify_until_iter": 15000,
        "post.densify_grad_threshold": 0.015,
        "post.depth_l1_weight_init": 1.0,
        "post.depth_l1_weight_final": 0.01,
        "post.compute_cov3D_python": false,
        "post.disable_viewer": false,
        "post.tau": 6.0
      },
      "supported_camera_models": [
        "pinhole"
      ],
      "supported_outputs": [
        "color"
      ],
      "name": "H3DGS",
      "description": "H3DGS extends 3DGS with LOD rendering strategy based on hierarchical representation of the scene. For large scenes it splits it into chunks, optimize each separatedly and merge them into single model.",
      "paper_title": "A Hierarchical 3D Gaussian Representation for Real-Time Rendering of Very Large Datasets",
      "paper_authors": [
        "Bernhard Kerbl",
        "Andreas Meuleman",
        "Georgios Kopanas",
        "Michael Wimmer",
        "Alexandre Lanvin",
        "George Drettakis"
      ],
      "paper_link": "https://repo-sam.inria.fr/fungraph/hierarchical-3d-gaussians/hierarchical-3d-gaussians_low.pdf",
      "link": "https://repo-sam.inria.fr/fungraph/hierarchical-3d-gaussians/",
      "licenses": [
        {
          "name": "custom, research only",
          "url": "https://raw.githubusercontent.com/graphdeco-inria/hierarchical-3d-gaussians/refs/heads/main/LICENSE.md"
        },
        {
          "name": "custom, research only",
          "url": "https://raw.githubusercontent.com/graphdeco-inria/gaussian-splatting/refs/heads/main/LICENSE.md"
        }
      ],
      "long_description": "\nThe Hierarchical 3DGS implementation performs splitting the scene into regions, each\nof which is optimized separately. This set is then merged into a single model. This\nis only applied for larger scenes. In NerfBaselines integration, by default we do\nnot use the splitting - this matches the original implementation when applied to smaller scenes.\nThe splitting implementation is not yet available in NerfBaselines, but it is planned for the future.\n\nAlso, we added `depth_mode` option which allows to use different monodular depth predictors. Currently,\nadd `--preset depth-anything` to use Depth Anything V2 depth predictor, or use the default `dpt` model.\n\nIn order to enable appearance optimization, add `--preset exposure` to the command line. This \nwill optimize a affine mapping for each image during the training to map the rendered colors.\nThis option is recommended for the scenes with strong lighting changes when rendering a video,\nbut it can decrease metrics - especially PSNR. By default exposure optimization is turned off.\n\nDurring rendering, you can pass tau (float) in the rendering `options` to set the tau parameter\nused by H3DGS renderer. The default value is 0 which means the finest set of Gaussians will\nbe used - highest quality, but slowest performance.\n",
      "presets": {
        "exposure": {
          "exposure_lr_init": 0.001,
          "exposure_lr_final": 0.0001
        },
        "depth-anything": {
          "single.depth_mode": "depth-anything"
        },
        "tau-0": {
          "post.tau": "0"
        },
        "tau-3": {
          "post.tau": "3"
        },
        "tau-6": {
          "post.tau": "15"
        }
      },
      "nb_version": "1.2.9.dev0+g09eaa2c.d20250222",
      "num_iterations": 45000,
      "total_train_time": 4560.17955,
      "resources_utilization": {
        "memory": 158350,
        "gpu_name": "NVIDIA A100-SXM4-40GB",
        "gpu_memory": 16228
      },
      "datetime": "2025-05-04T06:49:22",
      "config_overrides": {},
      "applied_presets": [],
      "dataset_metadata": {
        "id": "hierarchical-3dgs",
        "color_space": "srgb",
        "evaluation_protocol": "nerf",
        "scene": "smallcity",
        "viewer_transform": [
          0.014517,
          2.4e-05,
          -0.000262,
          -0.368639,
          2.4e-05,
          0.014271,
          0.002671,
          0.367879,
          0.000262,
          -0.002671,
          0.014269,
          -0.027701
        ],
        "viewer_initial_pose": [
          -0.590161,
          0.001724,
          -0.807284,
          -0.361286,
          0.77009,
          0.301246,
          -0.562327,
          -0.349039,
          0.242222,
          -0.953545,
          -0.179112,
          0.006165
        ],
        "expected_scene_scale": 57.171497
      },
      "evaluation_protocol": "nerf",
      "checkpoint_sha256": "9f56926d07f2656c963a8c156e5a3fc71b79a38984bb5ef12c042ecb7ea2dad1"
    },
    "outputs_configuration": {
      "color": {}
    }
  },
  "viewer_transform": [
    0.014516739555677892,
    2.433413239767878e-05,
    -0.00026224072111583524,
    -0.36863890843557434,
    2.433413239767878e-05,
    0.014271246821965525,
    0.002671328100564484,
    0.36787934375931536,
    0.00026224072111583524,
    -0.002671328100564484,
    0.014268858297343702,
    -0.02770137123672652
  ],
  "viewer_initial_pose": [
    -0.59016123915155,
    0.0017244302906136517,
    -0.8072835953218718,
    -0.3612856486940555,
    0.7700898944498754,
    0.3012463799273243,
    -0.5623274517346271,
    -0.34903851811728287,
    0.2422215720093898,
    -0.9535447509589106,
    -0.17911188469564693,
    0.006164597307127886
  ],
  "method_id": "hierarchical-3dgs",
  "renderer": {
    "antialias_2D_kernel_size": 0.3,
    "scene_url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-supplementary/resolve/main/hierarchical-3dgs/hierarchical-3dgs/smallcity_demo/scene.ksplat",
    "type": "3dgs"
  },
  "dataset": {
    "url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-data/resolve/main/hierarchical-3dgs/smallcity-nbv.json"
  }
}
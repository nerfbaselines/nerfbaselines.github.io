{
  "state": {
    "render_resolution": 768,
    "prerender_enabled": false,
    "method_info": {
      "method_id": "2d-gaussian-splatting",
      "hparams": {
        "sh_degree": 3,
        "white_background": false,
        "render_items": [
          "RGB",
          "Alpha",
          "Normal",
          "Depth",
          "Edge",
          "Curvature"
        ],
        "scale_coords": null,
        "iterations": 30000,
        "position_lr_init": 0.00016,
        "position_lr_final": 1.6e-06,
        "position_lr_delay_mult": 0.01,
        "position_lr_max_steps": 30000,
        "feature_lr": 0.0025,
        "opacity_lr": 0.05,
        "scaling_lr": 0.005,
        "rotation_lr": 0.001,
        "percent_dense": 0.01,
        "lambda_dssim": 0.2,
        "lambda_dist": 10.0,
        "lambda_normal": 0.05,
        "opacity_cull": 0.05,
        "densification_interval": 100,
        "opacity_reset_interval": 3000,
        "densify_from_iter": 500,
        "densify_until_iter": 15000,
        "densify_grad_threshold": 0.0002,
        "convert_SHs_python": false,
        "compute_cov3D_python": false,
        "depth_ratio": 1.0,
        "debug": false
      },
      "supported_camera_models": [
        "pinhole"
      ],
      "supported_outputs": [
        "accumulation",
        "color",
        "depth",
        "normal"
      ],
      "name": "2D Gaussian Splatting",
      "description": "2DGS adopts 2D oriented disks as surface elements and allows high-quality rendering with Gaussian Splatting. In NerfBaselines, we fixed bug with cx,cy, added appearance embedding optimization, and added support for sampling masks.",
      "paper_title": "2D Gaussian Splatting for Geometrically Accurate Radiance Fields",
      "paper_authors": [
        "Binbin Huang",
        "Zehao Yu",
        "Anpei Chen",
        "Andreas Geiger",
        "Shenghua Gao"
      ],
      "paper_link": "https://arxiv.org/pdf/2403.17888.pdf",
      "link": "https://surfsplatting.github.io/",
      "licenses": [
        {
          "name": "custom, research only",
          "url": "https://raw.githubusercontent.com/hbb1/2d-gaussian-splatting/main/LICENSE.md"
        }
      ],
      "num_iterations": 30000,
      "total_train_time": 1569.61264,
      "resources_utilization": {
        "memory": 3617,
        "gpu_name": "NVIDIA A100-SXM4-40GB",
        "gpu_memory": 8280
      },
      "datetime": "2024-09-13T17:13:48",
      "config_overrides": {
        "depth_ratio": 1.0,
        "lambda_dist": 10,
        "num_cluster": 1,
        "voxel_size": 0.006,
        "sdf_trunc": 0.024,
        "depth_trunc": 4.5
      },
      "applied_presets": [
        "tanksandtemples",
        "tanksandtemples-large"
      ],
      "evaluation_protocol": "default",
      "nb_version": "1.1.1.dev6+g5df36ec.d20240910",
      "checkpoint_sha256": "5a4353730c99feb80c90b55dfb3ede9b2c572c552329b8c5f4a9bdfe8393ff0b"
    },
    "dataset_info": {
      "id": "tanksandtemples",
      "color_space": "srgb",
      "evaluation_protocol": "default",
      "scene": "museum",
      "type": "object-centric",
      "downscale_factor": 2,
      "expected_scene_scale": 4.39346170425415,
      "name": "Tanks and Temples",
      "description": "Tanks and Temples is a benchmark for image-based 3D reconstruction. The benchmark sequences were acquired outside the lab, in realistic conditions. Ground-truth data was captured using an industrial laser scanner. The benchmark includes both outdoor scenes and indoor environments. The dataset is split into three subsets: training, intermediate, and advanced.",
      "paper_title": "Tanks and Temples: Benchmarking Large-Scale Scene Reconstruction",
      "paper_authors": [
        "Arno Knapitsch",
        "Jaesik Park",
        "Qian-Yi Zhou",
        "Vladlen Koltun"
      ],
      "paper_link": "https://storage.googleapis.com/t2-downloads/paper/tanks-and-temples.pdf",
      "link": "https://www.tanksandtemples.org/",
      "metrics": [
        {
          "id": "psnr",
          "name": "PSNR",
          "description": "Peak Signal to Noise Ratio. The higher the better.",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio"
        },
        {
          "id": "ssim",
          "name": "SSIM",
          "description": "Structural Similarity Index. The higher the better. The implementation matches JAX's SSIM and torchmetrics's SSIM (with default parameters).",
          "ascending": true,
          "link": "https://en.wikipedia.org/wiki/Structural_similarity"
        },
        {
          "id": "lpips",
          "name": "LPIPS",
          "description": "Learned Perceptual Image Patch Similarity. The lower the better. The implementation uses AlexNet backbone and matches lpips pip package with checkpoint version 0.1",
          "ascending": false,
          "link": "https://richzhang.github.io/PerceptualSimilarity/"
        }
      ],
      "default_metric": "psnr",
      "scenes": [
        {
          "id": "auditorium",
          "name": "auditorium"
        },
        {
          "id": "ballroom",
          "name": "ballroom"
        },
        {
          "id": "courtroom",
          "name": "courtroom"
        },
        {
          "id": "museum",
          "name": "museum"
        },
        {
          "id": "palace",
          "name": "palace"
        },
        {
          "id": "temple",
          "name": "temple"
        },
        {
          "id": "family",
          "name": "family"
        },
        {
          "id": "francis",
          "name": "francis"
        },
        {
          "id": "horse",
          "name": "horse"
        },
        {
          "id": "lighthouse",
          "name": "lighthouse"
        },
        {
          "id": "m60",
          "name": "m60"
        },
        {
          "id": "panther",
          "name": "panther"
        },
        {
          "id": "playground",
          "name": "playground"
        },
        {
          "id": "train",
          "name": "train"
        },
        {
          "id": "barn",
          "name": "barn"
        },
        {
          "id": "caterpillar",
          "name": "caterpillar"
        },
        {
          "id": "church",
          "name": "church"
        },
        {
          "id": "courthouse",
          "name": "courthouse"
        },
        {
          "id": "ignatius",
          "name": "ignatius"
        },
        {
          "id": "meetingroom",
          "name": "meetingroom"
        },
        {
          "id": "truck",
          "name": "truck"
        }
      ]
    }
  },
  "method_id": "2d-gaussian-splatting",
  "renderer": {
    "is_2DGS": true,
    "scene_url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-supplementary/resolve/main/2d-gaussian-splatting/tanksandtemples/museum_demo/scene.ksplat",
    "type": "3dgs"
  },
  "dataset": {
    "url": "https://huggingface.co/datasets/nerfbaselines/nerfbaselines-data/resolve/main/tanksandtemples/museum-nbv.json"
  },
  "viewer_transform": [
    0.022525901715368026,
    0.05939941603566571,
    0.16972038047897897,
    -0.01156742546912003,
    -0.17920380296962665,
    0.02150242976799697,
    0.016259068504000367,
    -0.0009375759022232678,
    -0.014808632562257855,
    -0.16985308842359667,
    0.06141131427467674,
    -0.09913502024944384
  ],
  "viewer_initial_pose": [
    0.1784299133302128,
    0.19405393726792558,
    0.9646272927971901,
    -0.8420202979061666,
    -0.9812023317759225,
    0.10833941411534265,
    0.15970122854843702,
    -0.11483153766253898,
    -0.07351650504227598,
    -0.9749900921539222,
    0.20973717045041426,
    0.11035574492864966
  ]
}